{"ast":null,"code":"import { useMemo } from 'react';\nimport { useTexture } from './useTexture.js';\nimport { matcapList } from '../helpers/matcap-assets.js';\nfunction getFormatString(format) {\n  switch (format) {\n    case 64:\n      return '-64px';\n    case 128:\n      return '-128px';\n    case 256:\n      return '-256px';\n    case 512:\n      return '-512px';\n    default:\n      return '';\n  }\n}\nconst MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';\nconst DEFAULT_MATCAP = matcapList[0];\nfunction useMatcapTexture(id = 0, format = 1024) {\n  const numTot = useMemo(() => Object.keys(matcapList).length, []);\n  const fileHash = useMemo(() => {\n    if (typeof id === 'string') {\n      return id;\n    } else if (typeof id === 'number') {\n      return matcapList[id];\n    }\n    return null;\n  }, [id]);\n  const fileName = \"\" + (fileHash || DEFAULT_MATCAP) + getFormatString(format) + \".png\";\n  const url = MATCAP_ROOT + \"/\" + format + \"/\" + fileName;\n  const matcapTexture = useTexture(url);\n  return [matcapTexture, url, numTot];\n}\nexport { useMatcapTexture };","map":{"version":3,"names":["useMemo","useTexture","matcapList","getFormatString","format","MATCAP_ROOT","DEFAULT_MATCAP","useMatcapTexture","id","numTot","Object","keys","length","fileHash","fileName","url","matcapTexture"],"sources":["C:/Users/drncs/OneDrive/Área de Trabalho/PORTIFOLIO/SITE3/node_modules/@react-three/drei/core/useMatcapTexture.js"],"sourcesContent":["import { useMemo } from 'react';\nimport { useTexture } from './useTexture.js';\nimport { matcapList } from '../helpers/matcap-assets.js';\n\nfunction getFormatString(format) {\n  switch (format) {\n    case 64:\n      return '-64px';\n\n    case 128:\n      return '-128px';\n\n    case 256:\n      return '-256px';\n\n    case 512:\n      return '-512px';\n\n    default:\n      return '';\n  }\n}\n\nconst MATCAP_ROOT = 'https://rawcdn.githack.com/emmelleppi/matcaps/9b36ccaaf0a24881a39062d05566c9e92be4aa0d';\nconst DEFAULT_MATCAP = matcapList[0];\nfunction useMatcapTexture(id = 0, format = 1024) {\n  const numTot = useMemo(() => Object.keys(matcapList).length, []);\n  const fileHash = useMemo(() => {\n    if (typeof id === 'string') {\n      return id;\n    } else if (typeof id === 'number') {\n      return matcapList[id];\n    }\n\n    return null;\n  }, [id]);\n  const fileName = \"\" + (fileHash || DEFAULT_MATCAP) + getFormatString(format) + \".png\";\n  const url = MATCAP_ROOT + \"/\" + format + \"/\" + fileName;\n  const matcapTexture = useTexture(url);\n  return [matcapTexture, url, numTot];\n}\n\nexport { useMatcapTexture };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,UAAU,QAAQ,iBAAiB;AAC5C,SAASC,UAAU,QAAQ,6BAA6B;AAExD,SAASC,eAAeA,CAACC,MAAM,EAAE;EAC/B,QAAQA,MAAM;IACZ,KAAK,EAAE;MACL,OAAO,OAAO;IAEhB,KAAK,GAAG;MACN,OAAO,QAAQ;IAEjB,KAAK,GAAG;MACN,OAAO,QAAQ;IAEjB,KAAK,GAAG;MACN,OAAO,QAAQ;IAEjB;MACE,OAAO,EAAE;EACb;AACF;AAEA,MAAMC,WAAW,GAAG,wFAAwF;AAC5G,MAAMC,cAAc,GAAGJ,UAAU,CAAC,CAAC,CAAC;AACpC,SAASK,gBAAgBA,CAACC,EAAE,GAAG,CAAC,EAAEJ,MAAM,GAAG,IAAI,EAAE;EAC/C,MAAMK,MAAM,GAAGT,OAAO,CAAC,MAAMU,MAAM,CAACC,IAAI,CAACT,UAAU,CAAC,CAACU,MAAM,EAAE,EAAE,CAAC;EAChE,MAAMC,QAAQ,GAAGb,OAAO,CAAC,MAAM;IAC7B,IAAI,OAAOQ,EAAE,KAAK,QAAQ,EAAE;MAC1B,OAAOA,EAAE;IACX,CAAC,MAAM,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE;MACjC,OAAON,UAAU,CAACM,EAAE,CAAC;IACvB;IAEA,OAAO,IAAI;EACb,CAAC,EAAE,CAACA,EAAE,CAAC,CAAC;EACR,MAAMM,QAAQ,GAAG,EAAE,IAAID,QAAQ,IAAIP,cAAc,CAAC,GAAGH,eAAe,CAACC,MAAM,CAAC,GAAG,MAAM;EACrF,MAAMW,GAAG,GAAGV,WAAW,GAAG,GAAG,GAAGD,MAAM,GAAG,GAAG,GAAGU,QAAQ;EACvD,MAAME,aAAa,GAAGf,UAAU,CAACc,GAAG,CAAC;EACrC,OAAO,CAACC,aAAa,EAAED,GAAG,EAAEN,MAAM,CAAC;AACrC;AAEA,SAASF,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}