{"ast":null,"code":"export var defaultLexerErrorProvider = {\n  buildUnableToPopLexerModeMessage: function (token) {\n    return \"Unable to pop Lexer Mode after encountering Token ->\" + token.image + \"<- The Mode Stack is empty\";\n  },\n  buildUnexpectedCharactersMessage: function (fullText, startOffset, length, line, column) {\n    return \"unexpected character: ->\" + fullText.charAt(startOffset) + \"<- at offset: \" + startOffset + \",\" + (\" skipped \" + length + \" characters.\");\n  }\n};","map":{"version":3,"sources":["../../../src/scan/lexer_errors_public.ts"],"names":[],"mappings":"AAEA,OAAO,IAAM,yBAAyB,GAA+B;EACnE,gCAAgC,EAAhC,SAAA,CAAiC,KAAa,EAAA;IAC5C,OAAO,sDAAA,GAAuD,KAAK,CAAC,KAAK,GAAA,4BAA4B;EACvG,CAAC;EAED,gCAAgC,EAAhC,SAAA,CACE,QAAgB,EAChB,WAAmB,EACnB,MAAc,EACd,IAAa,EACb,MAAe,EAAA;IAEf,OACE,0BAAA,GAA2B,QAAQ,CAAC,MAAM,CACxC,WAAW,CACZ,GAAA,gBAAA,GAAiB,WAAW,GAAA,GAAG,IAAG,WAAA,GAAY,MAAM,GAAA,cAAc,CAAA;EAEvE;CACD","sourceRoot":"","sourcesContent":["export var defaultLexerErrorProvider = {\n    buildUnableToPopLexerModeMessage: function (token) {\n        return \"Unable to pop Lexer Mode after encountering Token ->\" + token.image + \"<- The Mode Stack is empty\";\n    },\n    buildUnexpectedCharactersMessage: function (fullText, startOffset, length, line, column) {\n        return (\"unexpected character: ->\" + fullText.charAt(startOffset) + \"<- at offset: \" + startOffset + \",\" + (\" skipped \" + length + \" characters.\"));\n    }\n};\n//# sourceMappingURL=lexer_errors_public.js.map"]},"metadata":{},"sourceType":"module"}