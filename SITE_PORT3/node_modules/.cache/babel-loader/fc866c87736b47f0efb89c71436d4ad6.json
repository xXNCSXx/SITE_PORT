{"ast":null,"code":"import { Color, Vector2 } from 'three';\nimport { StandardNode } from './StandardNode.js';\nimport { PropertyNode } from '../../inputs/PropertyNode.js';\nimport { OperatorNode } from '../../math/OperatorNode.js';\nimport { SwitchNode } from '../../utils/SwitchNode.js';\nimport { NormalMapNode } from '../../misc/NormalMapNode.js';\nfunction MeshStandardNode() {\n  StandardNode.call(this);\n  this.properties = {\n    color: new Color(0xffffff),\n    roughness: 0.5,\n    metalness: 0.5,\n    normalScale: new Vector2(1, 1)\n  };\n  this.inputs = {\n    color: new PropertyNode(this.properties, 'color', 'c'),\n    roughness: new PropertyNode(this.properties, 'roughness', 'f'),\n    metalness: new PropertyNode(this.properties, 'metalness', 'f'),\n    normalScale: new PropertyNode(this.properties, 'normalScale', 'v2')\n  };\n}\nMeshStandardNode.prototype = Object.create(StandardNode.prototype);\nMeshStandardNode.prototype.constructor = MeshStandardNode;\nMeshStandardNode.prototype.nodeType = 'MeshStandard';\nMeshStandardNode.prototype.build = function (builder) {\n  var props = this.properties,\n    inputs = this.inputs;\n  if (builder.isShader('fragment')) {\n    // slots\n    // * color\n    // * map\n    var color = builder.findNode(props.color, inputs.color),\n      map = builder.resolve(props.map);\n    this.color = map ? new OperatorNode(color, map, OperatorNode.MUL) : color; // slots\n    // * roughness\n    // * roughnessMap\n\n    var roughness = builder.findNode(props.roughness, inputs.roughness),\n      roughnessMap = builder.resolve(props.roughnessMap);\n    this.roughness = roughnessMap ? new OperatorNode(roughness, new SwitchNode(roughnessMap, 'g'), OperatorNode.MUL) : roughness; // slots\n    // * metalness\n    // * metalnessMap\n\n    var metalness = builder.findNode(props.metalness, inputs.metalness),\n      metalnessMap = builder.resolve(props.metalnessMap);\n    this.metalness = metalnessMap ? new OperatorNode(metalness, new SwitchNode(metalnessMap, 'b'), OperatorNode.MUL) : metalness; // slots\n    // * normalMap\n    // * normalScale\n\n    if (props.normalMap) {\n      this.normal = new NormalMapNode(builder.resolve(props.normalMap));\n      this.normal.scale = builder.findNode(props.normalScale, inputs.normalScale);\n    } else {\n      this.normal = undefined;\n    } // slots\n    // * envMap\n\n    this.environment = builder.resolve(props.envMap);\n  } // build code\n\n  return StandardNode.prototype.build.call(this, builder);\n};\nMeshStandardNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    console.warn('.toJSON not implemented in', this);\n  }\n  return data;\n};\nexport { MeshStandardNode };","map":{"version":3,"names":["Color","Vector2","StandardNode","PropertyNode","OperatorNode","SwitchNode","NormalMapNode","MeshStandardNode","call","properties","color","roughness","metalness","normalScale","inputs","prototype","Object","create","constructor","nodeType","build","builder","props","isShader","findNode","map","resolve","MUL","roughnessMap","metalnessMap","normalMap","normal","scale","undefined","environment","envMap","toJSON","meta","data","getJSONNode","createJSONNode","console","warn"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/materials/nodes/MeshStandardNode.js"],"sourcesContent":["import { Color, Vector2 } from 'three';\nimport { StandardNode } from './StandardNode.js';\nimport { PropertyNode } from '../../inputs/PropertyNode.js';\nimport { OperatorNode } from '../../math/OperatorNode.js';\nimport { SwitchNode } from '../../utils/SwitchNode.js';\nimport { NormalMapNode } from '../../misc/NormalMapNode.js';\n\nfunction MeshStandardNode() {\n  StandardNode.call(this);\n  this.properties = {\n    color: new Color(0xffffff),\n    roughness: 0.5,\n    metalness: 0.5,\n    normalScale: new Vector2(1, 1)\n  };\n  this.inputs = {\n    color: new PropertyNode(this.properties, 'color', 'c'),\n    roughness: new PropertyNode(this.properties, 'roughness', 'f'),\n    metalness: new PropertyNode(this.properties, 'metalness', 'f'),\n    normalScale: new PropertyNode(this.properties, 'normalScale', 'v2')\n  };\n}\n\nMeshStandardNode.prototype = Object.create(StandardNode.prototype);\nMeshStandardNode.prototype.constructor = MeshStandardNode;\nMeshStandardNode.prototype.nodeType = 'MeshStandard';\n\nMeshStandardNode.prototype.build = function (builder) {\n  var props = this.properties,\n      inputs = this.inputs;\n\n  if (builder.isShader('fragment')) {\n    // slots\n    // * color\n    // * map\n    var color = builder.findNode(props.color, inputs.color),\n        map = builder.resolve(props.map);\n    this.color = map ? new OperatorNode(color, map, OperatorNode.MUL) : color; // slots\n    // * roughness\n    // * roughnessMap\n\n    var roughness = builder.findNode(props.roughness, inputs.roughness),\n        roughnessMap = builder.resolve(props.roughnessMap);\n    this.roughness = roughnessMap ? new OperatorNode(roughness, new SwitchNode(roughnessMap, 'g'), OperatorNode.MUL) : roughness; // slots\n    // * metalness\n    // * metalnessMap\n\n    var metalness = builder.findNode(props.metalness, inputs.metalness),\n        metalnessMap = builder.resolve(props.metalnessMap);\n    this.metalness = metalnessMap ? new OperatorNode(metalness, new SwitchNode(metalnessMap, 'b'), OperatorNode.MUL) : metalness; // slots\n    // * normalMap\n    // * normalScale\n\n    if (props.normalMap) {\n      this.normal = new NormalMapNode(builder.resolve(props.normalMap));\n      this.normal.scale = builder.findNode(props.normalScale, inputs.normalScale);\n    } else {\n      this.normal = undefined;\n    } // slots\n    // * envMap\n\n\n    this.environment = builder.resolve(props.envMap);\n  } // build code\n\n\n  return StandardNode.prototype.build.call(this, builder);\n};\n\nMeshStandardNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    console.warn('.toJSON not implemented in', this);\n  }\n\n  return data;\n};\n\nexport { MeshStandardNode };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}