{"ast":null,"code":"import { WebGLRenderTarget, NearestFilter, MeshDepthMaterial, RGBADepthPacking, NoBlending, UniformsUtils, ShaderMaterial, Color } from 'three';\nimport { FullScreenQuad, Pass } from './Pass.js';\nimport { BokehShader } from '../shaders/BokehShader.js';\n\n/**\n * Depth-of-field post-process with bokeh shader\n */\n\nvar BokehPass = function (scene, camera, params) {\n  this.scene = scene;\n  this.camera = camera;\n  var focus = params.focus !== undefined ? params.focus : 1.0;\n  var aspect = params.aspect !== undefined ? params.aspect : camera.aspect;\n  var aperture = params.aperture !== undefined ? params.aperture : 0.025;\n  var maxblur = params.maxblur !== undefined ? params.maxblur : 1.0; // render targets\n\n  var width = params.width || window.innerWidth || 1;\n  var height = params.height || window.innerHeight || 1;\n  this.renderTargetDepth = new WebGLRenderTarget(width, height, {\n    minFilter: NearestFilter,\n    magFilter: NearestFilter\n  });\n  this.renderTargetDepth.texture.name = 'BokehPass.depth'; // depth material\n\n  this.materialDepth = new MeshDepthMaterial();\n  this.materialDepth.depthPacking = RGBADepthPacking;\n  this.materialDepth.blending = NoBlending; // bokeh material\n\n  if (BokehShader === undefined) {\n    console.error('THREE.BokehPass relies on BokehShader');\n  }\n  var bokehShader = BokehShader;\n  var bokehUniforms = UniformsUtils.clone(bokehShader.uniforms);\n  bokehUniforms['tDepth'].value = this.renderTargetDepth.texture;\n  bokehUniforms['focus'].value = focus;\n  bokehUniforms['aspect'].value = aspect;\n  bokehUniforms['aperture'].value = aperture;\n  bokehUniforms['maxblur'].value = maxblur;\n  bokehUniforms['nearClip'].value = camera.near;\n  bokehUniforms['farClip'].value = camera.far;\n  this.materialBokeh = new ShaderMaterial({\n    defines: Object.assign({}, bokehShader.defines),\n    uniforms: bokehUniforms,\n    vertexShader: bokehShader.vertexShader,\n    fragmentShader: bokehShader.fragmentShader\n  });\n  this.uniforms = bokehUniforms;\n  this.needsSwap = false;\n  this.fsQuad = new FullScreenQuad(this.materialBokeh);\n  this._oldClearColor = new Color();\n};\nBokehPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: BokehPass,\n  render: function (renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive*/) {\n    // Render depth into texture\n    this.scene.overrideMaterial = this.materialDepth;\n    renderer.getClearColor(this._oldClearColor);\n    var oldClearAlpha = renderer.getClearAlpha();\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    renderer.setClearColor(0xffffff);\n    renderer.setClearAlpha(1.0);\n    renderer.setRenderTarget(this.renderTargetDepth);\n    renderer.clear();\n    renderer.render(this.scene, this.camera); // Render bokeh composite\n\n    this.uniforms['tColor'].value = readBuffer.texture;\n    this.uniforms['nearClip'].value = this.camera.near;\n    this.uniforms['farClip'].value = this.camera.far;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n    this.scene.overrideMaterial = null;\n    renderer.setClearColor(this._oldClearColor);\n    renderer.setClearAlpha(oldClearAlpha);\n    renderer.autoClear = oldAutoClear;\n  }\n});\nexport { BokehPass };","map":{"version":3,"names":["WebGLRenderTarget","NearestFilter","MeshDepthMaterial","RGBADepthPacking","NoBlending","UniformsUtils","ShaderMaterial","Color","FullScreenQuad","Pass","BokehShader","BokehPass","scene","camera","params","focus","undefined","aspect","aperture","maxblur","width","window","innerWidth","height","innerHeight","renderTargetDepth","minFilter","magFilter","texture","name","materialDepth","depthPacking","blending","console","error","bokehShader","bokehUniforms","clone","uniforms","value","near","far","materialBokeh","defines","Object","assign","vertexShader","fragmentShader","needsSwap","fsQuad","_oldClearColor","prototype","create","constructor","render","renderer","writeBuffer","readBuffer","overrideMaterial","getClearColor","oldClearAlpha","getClearAlpha","oldAutoClear","autoClear","setClearColor","setClearAlpha","setRenderTarget","clear","renderToScreen"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/postprocessing/BokehPass.js"],"sourcesContent":["import { WebGLRenderTarget, NearestFilter, MeshDepthMaterial, RGBADepthPacking, NoBlending, UniformsUtils, ShaderMaterial, Color } from 'three';\nimport { FullScreenQuad, Pass } from './Pass.js';\nimport { BokehShader } from '../shaders/BokehShader.js';\n\n/**\n * Depth-of-field post-process with bokeh shader\n */\n\nvar BokehPass = function (scene, camera, params) {\n  this.scene = scene;\n  this.camera = camera;\n  var focus = params.focus !== undefined ? params.focus : 1.0;\n  var aspect = params.aspect !== undefined ? params.aspect : camera.aspect;\n  var aperture = params.aperture !== undefined ? params.aperture : 0.025;\n  var maxblur = params.maxblur !== undefined ? params.maxblur : 1.0; // render targets\n\n  var width = params.width || window.innerWidth || 1;\n  var height = params.height || window.innerHeight || 1;\n  this.renderTargetDepth = new WebGLRenderTarget(width, height, {\n    minFilter: NearestFilter,\n    magFilter: NearestFilter\n  });\n  this.renderTargetDepth.texture.name = 'BokehPass.depth'; // depth material\n\n  this.materialDepth = new MeshDepthMaterial();\n  this.materialDepth.depthPacking = RGBADepthPacking;\n  this.materialDepth.blending = NoBlending; // bokeh material\n\n  if (BokehShader === undefined) {\n    console.error('THREE.BokehPass relies on BokehShader');\n  }\n\n  var bokehShader = BokehShader;\n  var bokehUniforms = UniformsUtils.clone(bokehShader.uniforms);\n  bokehUniforms['tDepth'].value = this.renderTargetDepth.texture;\n  bokehUniforms['focus'].value = focus;\n  bokehUniforms['aspect'].value = aspect;\n  bokehUniforms['aperture'].value = aperture;\n  bokehUniforms['maxblur'].value = maxblur;\n  bokehUniforms['nearClip'].value = camera.near;\n  bokehUniforms['farClip'].value = camera.far;\n  this.materialBokeh = new ShaderMaterial({\n    defines: Object.assign({}, bokehShader.defines),\n    uniforms: bokehUniforms,\n    vertexShader: bokehShader.vertexShader,\n    fragmentShader: bokehShader.fragmentShader\n  });\n  this.uniforms = bokehUniforms;\n  this.needsSwap = false;\n  this.fsQuad = new FullScreenQuad(this.materialBokeh);\n  this._oldClearColor = new Color();\n};\n\nBokehPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: BokehPass,\n  render: function (renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive*/\n  ) {\n    // Render depth into texture\n    this.scene.overrideMaterial = this.materialDepth;\n    renderer.getClearColor(this._oldClearColor);\n    var oldClearAlpha = renderer.getClearAlpha();\n    var oldAutoClear = renderer.autoClear;\n    renderer.autoClear = false;\n    renderer.setClearColor(0xffffff);\n    renderer.setClearAlpha(1.0);\n    renderer.setRenderTarget(this.renderTargetDepth);\n    renderer.clear();\n    renderer.render(this.scene, this.camera); // Render bokeh composite\n\n    this.uniforms['tColor'].value = readBuffer.texture;\n    this.uniforms['nearClip'].value = this.camera.near;\n    this.uniforms['farClip'].value = this.camera.far;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n\n    this.scene.overrideMaterial = null;\n    renderer.setClearColor(this._oldClearColor);\n    renderer.setClearAlpha(oldClearAlpha);\n    renderer.autoClear = oldAutoClear;\n  }\n});\n\nexport { BokehPass };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}