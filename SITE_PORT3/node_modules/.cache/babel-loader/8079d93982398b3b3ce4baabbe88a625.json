{"ast":null,"code":"import { Loader, FileLoader } from 'three';\nimport { parse } from 'opentype.js';\n\n/**\n * Requires opentype.js to be included in the project.\n * Loads TTF files and converts them into typeface JSON that can be used directly\n * to create THREE.Font objects.\n */\n\nvar TTFLoader = function (manager) {\n  Loader.call(this, manager);\n  this.reversed = false;\n};\nTTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: TTFLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        onLoad(scope.parse(buffer));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  parse: function (arraybuffer) {\n    function convert(font, reversed) {\n      var round = Math.round;\n      var glyphs = {};\n      var scale = 100000 / ((font.unitsPerEm || 2048) * 72);\n      var glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n      var unicodes = Object.keys(glyphIndexMap);\n      for (let i = 0; i < unicodes.length; i++) {\n        var unicode = unicodes[i];\n        var glyph = font.glyphs.glyphs[glyphIndexMap[unicode]];\n        if (unicode !== undefined) {\n          var token = {\n            ha: round(glyph.advanceWidth * scale),\n            x_min: round(glyph.xMin * scale),\n            x_max: round(glyph.xMax * scale),\n            o: ''\n          };\n          if (reversed) {\n            glyph.path.commands = reverseCommands(glyph.path.commands);\n          }\n          glyph.path.commands.forEach(function (command) {\n            if (command.type.toLowerCase() === 'c') {\n              command.type = 'b';\n            }\n            token.o += command.type.toLowerCase() + ' ';\n            if (command.x !== undefined && command.y !== undefined) {\n              token.o += round(command.x * scale) + ' ' + round(command.y * scale) + ' ';\n            }\n            if (command.x1 !== undefined && command.y1 !== undefined) {\n              token.o += round(command.x1 * scale) + ' ' + round(command.y1 * scale) + ' ';\n            }\n            if (command.x2 !== undefined && command.y2 !== undefined) {\n              token.o += round(command.x2 * scale) + ' ' + round(command.y2 * scale) + ' ';\n            }\n          });\n          glyphs[String.fromCodePoint(glyph.unicode)] = token;\n        }\n      }\n      return {\n        glyphs: glyphs,\n        familyName: font.getEnglishName('fullName'),\n        ascender: round(font.ascender * scale),\n        descender: round(font.descender * scale),\n        underlinePosition: font.tables.post.underlinePosition,\n        underlineThickness: font.tables.post.underlineThickness,\n        boundingBox: {\n          xMin: font.tables.head.xMin,\n          xMax: font.tables.head.xMax,\n          yMin: font.tables.head.yMin,\n          yMax: font.tables.head.yMax\n        },\n        resolution: 1000,\n        original_font_information: font.tables.name\n      };\n    }\n    function reverseCommands(commands) {\n      var paths = [];\n      var path;\n      commands.forEach(function (c) {\n        if (c.type.toLowerCase() === 'm') {\n          path = [c];\n          paths.push(path);\n        } else if (c.type.toLowerCase() !== 'z') {\n          path.push(c);\n        }\n      });\n      var reversed = [];\n      paths.forEach(function (p) {\n        var result = {\n          type: 'm',\n          x: p[p.length - 1].x,\n          y: p[p.length - 1].y\n        };\n        reversed.push(result);\n        for (let i = p.length - 1; i > 0; i--) {\n          var command = p[i];\n          var result = {\n            type: command.type\n          };\n          if (command.x2 !== undefined && command.y2 !== undefined) {\n            result.x1 = command.x2;\n            result.y1 = command.y2;\n            result.x2 = command.x1;\n            result.y2 = command.y1;\n          } else if (command.x1 !== undefined && command.y1 !== undefined) {\n            result.x1 = command.x1;\n            result.y1 = command.y1;\n          }\n          result.x = p[i - 1].x;\n          result.y = p[i - 1].y;\n          reversed.push(result);\n        }\n      });\n      return reversed;\n    }\n    return convert(parse(arraybuffer), this.reversed); // eslint-disable-line no-undef\n  }\n});\nexport { TTFLoader };","map":{"version":3,"names":["Loader","FileLoader","parse","TTFLoader","manager","call","reversed","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","e","console","error","itemError","arraybuffer","convert","font","round","Math","glyphs","scale","unitsPerEm","glyphIndexMap","encoding","cmap","unicodes","keys","i","length","unicode","glyph","undefined","token","ha","advanceWidth","x_min","xMin","x_max","xMax","o","commands","reverseCommands","forEach","command","type","toLowerCase","x","y","x1","y1","x2","y2","String","fromCodePoint","familyName","getEnglishName","ascender","descender","underlinePosition","tables","post","underlineThickness","boundingBox","head","yMin","yMax","resolution","original_font_information","name","paths","c","push","p","result"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/loaders/TTFLoader.js"],"sourcesContent":["import { Loader, FileLoader } from 'three';\nimport { parse } from 'opentype.js';\n\n/**\n * Requires opentype.js to be included in the project.\n * Loads TTF files and converts them into typeface JSON that can be used directly\n * to create THREE.Font objects.\n */\n\nvar TTFLoader = function (manager) {\n  Loader.call(this, manager);\n  this.reversed = false;\n};\n\nTTFLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: TTFLoader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        onLoad(scope.parse(buffer));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  parse: function (arraybuffer) {\n    function convert(font, reversed) {\n      var round = Math.round;\n      var glyphs = {};\n      var scale = 100000 / ((font.unitsPerEm || 2048) * 72);\n      var glyphIndexMap = font.encoding.cmap.glyphIndexMap;\n      var unicodes = Object.keys(glyphIndexMap);\n\n      for (let i = 0; i < unicodes.length; i++) {\n        var unicode = unicodes[i];\n        var glyph = font.glyphs.glyphs[glyphIndexMap[unicode]];\n\n        if (unicode !== undefined) {\n          var token = {\n            ha: round(glyph.advanceWidth * scale),\n            x_min: round(glyph.xMin * scale),\n            x_max: round(glyph.xMax * scale),\n            o: ''\n          };\n\n          if (reversed) {\n            glyph.path.commands = reverseCommands(glyph.path.commands);\n          }\n\n          glyph.path.commands.forEach(function (command) {\n            if (command.type.toLowerCase() === 'c') {\n              command.type = 'b';\n            }\n\n            token.o += command.type.toLowerCase() + ' ';\n\n            if (command.x !== undefined && command.y !== undefined) {\n              token.o += round(command.x * scale) + ' ' + round(command.y * scale) + ' ';\n            }\n\n            if (command.x1 !== undefined && command.y1 !== undefined) {\n              token.o += round(command.x1 * scale) + ' ' + round(command.y1 * scale) + ' ';\n            }\n\n            if (command.x2 !== undefined && command.y2 !== undefined) {\n              token.o += round(command.x2 * scale) + ' ' + round(command.y2 * scale) + ' ';\n            }\n          });\n          glyphs[String.fromCodePoint(glyph.unicode)] = token;\n        }\n      }\n\n      return {\n        glyphs: glyphs,\n        familyName: font.getEnglishName('fullName'),\n        ascender: round(font.ascender * scale),\n        descender: round(font.descender * scale),\n        underlinePosition: font.tables.post.underlinePosition,\n        underlineThickness: font.tables.post.underlineThickness,\n        boundingBox: {\n          xMin: font.tables.head.xMin,\n          xMax: font.tables.head.xMax,\n          yMin: font.tables.head.yMin,\n          yMax: font.tables.head.yMax\n        },\n        resolution: 1000,\n        original_font_information: font.tables.name\n      };\n    }\n\n    function reverseCommands(commands) {\n      var paths = [];\n      var path;\n      commands.forEach(function (c) {\n        if (c.type.toLowerCase() === 'm') {\n          path = [c];\n          paths.push(path);\n        } else if (c.type.toLowerCase() !== 'z') {\n          path.push(c);\n        }\n      });\n      var reversed = [];\n      paths.forEach(function (p) {\n        var result = {\n          type: 'm',\n          x: p[p.length - 1].x,\n          y: p[p.length - 1].y\n        };\n        reversed.push(result);\n\n        for (let i = p.length - 1; i > 0; i--) {\n          var command = p[i];\n          var result = {\n            type: command.type\n          };\n\n          if (command.x2 !== undefined && command.y2 !== undefined) {\n            result.x1 = command.x2;\n            result.y1 = command.y2;\n            result.x2 = command.x1;\n            result.y2 = command.y1;\n          } else if (command.x1 !== undefined && command.y1 !== undefined) {\n            result.x1 = command.x1;\n            result.y1 = command.y1;\n          }\n\n          result.x = p[i - 1].x;\n          result.y = p[i - 1].y;\n          reversed.push(result);\n        }\n      });\n      return reversed;\n    }\n\n    return convert(parse(arraybuffer), this.reversed); // eslint-disable-line no-undef\n  }\n});\n\nexport { TTFLoader };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}