{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nimport { NodeLib } from '../core/NodeLib.js';\nfunction NormalNode(scope) {\n  TempNode.call(this, 'v3');\n  this.scope = scope || NormalNode.VIEW;\n}\nNormalNode.LOCAL = 'local';\nNormalNode.WORLD = 'world';\nNormalNode.VIEW = 'view';\nNormalNode.prototype = Object.create(TempNode.prototype);\nNormalNode.prototype.constructor = NormalNode;\nNormalNode.prototype.nodeType = 'Normal';\nNormalNode.prototype.getShared = function () {\n  // if shared is false, TempNode will not create temp variable (for optimization)\n  return this.scope === NormalNode.WORLD;\n};\nNormalNode.prototype.build = function (builder, output, uuid, ns) {\n  var contextNormal = builder.context[this.scope + 'Normal'];\n  if (contextNormal) {\n    return contextNormal.build(builder, output, uuid, ns);\n  }\n  return TempNode.prototype.build.call(this, builder, output, uuid);\n};\nNormalNode.prototype.generate = function (builder, output) {\n  var result;\n  switch (this.scope) {\n    case NormalNode.VIEW:\n      if (builder.isShader('vertex')) result = 'transformedNormal';else result = 'geometryNormal';\n      break;\n    case NormalNode.LOCAL:\n      if (builder.isShader('vertex')) {\n        result = 'objectNormal';\n      } else {\n        builder.requires.normal = true;\n        result = 'vObjectNormal';\n      }\n      break;\n    case NormalNode.WORLD:\n      if (builder.isShader('vertex')) {\n        result = 'inverseTransformDirection( transformedNormal, viewMatrix ).xyz';\n      } else {\n        builder.requires.worldNormal = true;\n        result = 'vWNormal';\n      }\n      break;\n  }\n  return builder.format(result, this.getType(builder), output);\n};\nNormalNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.scope = source.scope;\n  return this;\n};\nNormalNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.scope = this.scope;\n  }\n  return data;\n};\nNodeLib.addKeyword('viewNormal', function () {\n  return new NormalNode(NormalNode.VIEW);\n});\nNodeLib.addKeyword('localNormal', function () {\n  return new NormalNode(NormalNode.NORMAL);\n});\nNodeLib.addKeyword('worldNormal', function () {\n  return new NormalNode(NormalNode.WORLD);\n});\nexport { NormalNode };","map":{"version":3,"names":["TempNode","NodeLib","NormalNode","scope","call","VIEW","LOCAL","WORLD","prototype","Object","create","constructor","nodeType","getShared","build","builder","output","uuid","ns","contextNormal","context","generate","result","isShader","requires","normal","worldNormal","format","getType","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","addKeyword","NORMAL"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/accessors/NormalNode.js"],"sourcesContent":["import { TempNode } from '../core/TempNode.js';\nimport { NodeLib } from '../core/NodeLib.js';\n\nfunction NormalNode(scope) {\n  TempNode.call(this, 'v3');\n  this.scope = scope || NormalNode.VIEW;\n}\n\nNormalNode.LOCAL = 'local';\nNormalNode.WORLD = 'world';\nNormalNode.VIEW = 'view';\nNormalNode.prototype = Object.create(TempNode.prototype);\nNormalNode.prototype.constructor = NormalNode;\nNormalNode.prototype.nodeType = 'Normal';\n\nNormalNode.prototype.getShared = function () {\n  // if shared is false, TempNode will not create temp variable (for optimization)\n  return this.scope === NormalNode.WORLD;\n};\n\nNormalNode.prototype.build = function (builder, output, uuid, ns) {\n  var contextNormal = builder.context[this.scope + 'Normal'];\n\n  if (contextNormal) {\n    return contextNormal.build(builder, output, uuid, ns);\n  }\n\n  return TempNode.prototype.build.call(this, builder, output, uuid);\n};\n\nNormalNode.prototype.generate = function (builder, output) {\n  var result;\n\n  switch (this.scope) {\n    case NormalNode.VIEW:\n      if (builder.isShader('vertex')) result = 'transformedNormal';else result = 'geometryNormal';\n      break;\n\n    case NormalNode.LOCAL:\n      if (builder.isShader('vertex')) {\n        result = 'objectNormal';\n      } else {\n        builder.requires.normal = true;\n        result = 'vObjectNormal';\n      }\n\n      break;\n\n    case NormalNode.WORLD:\n      if (builder.isShader('vertex')) {\n        result = 'inverseTransformDirection( transformedNormal, viewMatrix ).xyz';\n      } else {\n        builder.requires.worldNormal = true;\n        result = 'vWNormal';\n      }\n\n      break;\n  }\n\n  return builder.format(result, this.getType(builder), output);\n};\n\nNormalNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.scope = source.scope;\n  return this;\n};\n\nNormalNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.scope = this.scope;\n  }\n\n  return data;\n};\n\nNodeLib.addKeyword('viewNormal', function () {\n  return new NormalNode(NormalNode.VIEW);\n});\nNodeLib.addKeyword('localNormal', function () {\n  return new NormalNode(NormalNode.NORMAL);\n});\nNodeLib.addKeyword('worldNormal', function () {\n  return new NormalNode(NormalNode.WORLD);\n});\n\nexport { NormalNode };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}