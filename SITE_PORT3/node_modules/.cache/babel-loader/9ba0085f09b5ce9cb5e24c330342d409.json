{"ast":null,"code":"import { ExpressionNode } from '../core/ExpressionNode.js';\nimport { Matrix3Node } from '../inputs/Matrix3Node.js';\nimport { UVNode } from '../accessors/UVNode.js';\nfunction UVTransformNode(uv, position) {\n  ExpressionNode.call(this, '( uvTransform * vec3( uvNode, 1 ) ).xy', 'vec2');\n  this.uv = uv || new UVNode();\n  this.position = position || new Matrix3Node();\n}\nUVTransformNode.prototype = Object.create(ExpressionNode.prototype);\nUVTransformNode.prototype.constructor = UVTransformNode;\nUVTransformNode.prototype.nodeType = 'UVTransform';\nUVTransformNode.prototype.generate = function (builder, output) {\n  this.keywords['uvNode'] = this.uv;\n  this.keywords['uvTransform'] = this.position;\n  return ExpressionNode.prototype.generate.call(this, builder, output);\n};\nUVTransformNode.prototype.setUvTransform = function (tx, ty, sx, sy, rotation, cx, cy) {\n  cx = cx !== undefined ? cx : 0.5;\n  cy = cy !== undefined ? cy : 0.5;\n  this.position.value.setUvTransform(tx, ty, sx, sy, rotation, cx, cy);\n};\nUVTransformNode.prototype.copy = function (source) {\n  ExpressionNode.prototype.copy.call(this, source);\n  this.uv = source.uv;\n  this.position = source.position;\n  return this;\n};\nUVTransformNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.uv = this.uv.toJSON(meta).uuid;\n    data.position = this.position.toJSON(meta).uuid;\n  }\n  return data;\n};\nexport { UVTransformNode };","map":{"version":3,"names":["ExpressionNode","Matrix3Node","UVNode","UVTransformNode","uv","position","call","prototype","Object","create","constructor","nodeType","generate","builder","output","keywords","setUvTransform","tx","ty","sx","sy","rotation","cx","cy","undefined","value","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/utils/UVTransformNode.js"],"sourcesContent":["import { ExpressionNode } from '../core/ExpressionNode.js';\nimport { Matrix3Node } from '../inputs/Matrix3Node.js';\nimport { UVNode } from '../accessors/UVNode.js';\n\nfunction UVTransformNode(uv, position) {\n  ExpressionNode.call(this, '( uvTransform * vec3( uvNode, 1 ) ).xy', 'vec2');\n  this.uv = uv || new UVNode();\n  this.position = position || new Matrix3Node();\n}\n\nUVTransformNode.prototype = Object.create(ExpressionNode.prototype);\nUVTransformNode.prototype.constructor = UVTransformNode;\nUVTransformNode.prototype.nodeType = 'UVTransform';\n\nUVTransformNode.prototype.generate = function (builder, output) {\n  this.keywords['uvNode'] = this.uv;\n  this.keywords['uvTransform'] = this.position;\n  return ExpressionNode.prototype.generate.call(this, builder, output);\n};\n\nUVTransformNode.prototype.setUvTransform = function (tx, ty, sx, sy, rotation, cx, cy) {\n  cx = cx !== undefined ? cx : 0.5;\n  cy = cy !== undefined ? cy : 0.5;\n  this.position.value.setUvTransform(tx, ty, sx, sy, rotation, cx, cy);\n};\n\nUVTransformNode.prototype.copy = function (source) {\n  ExpressionNode.prototype.copy.call(this, source);\n  this.uv = source.uv;\n  this.position = source.position;\n  return this;\n};\n\nUVTransformNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.uv = this.uv.toJSON(meta).uuid;\n    data.position = this.position.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { UVTransformNode };\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,2BAA2B;AAC1D,SAASC,WAAW,QAAQ,0BAA0B;AACtD,SAASC,MAAM,QAAQ,wBAAwB;AAE/C,SAASC,eAAeA,CAACC,EAAE,EAAEC,QAAQ,EAAE;EACrCL,cAAc,CAACM,IAAI,CAAC,IAAI,EAAE,wCAAwC,EAAE,MAAM,CAAC;EAC3E,IAAI,CAACF,EAAE,GAAGA,EAAE,IAAI,IAAIF,MAAM,CAAC,CAAC;EAC5B,IAAI,CAACG,QAAQ,GAAGA,QAAQ,IAAI,IAAIJ,WAAW,CAAC,CAAC;AAC/C;AAEAE,eAAe,CAACI,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACT,cAAc,CAACO,SAAS,CAAC;AACnEJ,eAAe,CAACI,SAAS,CAACG,WAAW,GAAGP,eAAe;AACvDA,eAAe,CAACI,SAAS,CAACI,QAAQ,GAAG,aAAa;AAElDR,eAAe,CAACI,SAAS,CAACK,QAAQ,GAAG,UAAUC,OAAO,EAAEC,MAAM,EAAE;EAC9D,IAAI,CAACC,QAAQ,CAAC,QAAQ,CAAC,GAAG,IAAI,CAACX,EAAE;EACjC,IAAI,CAACW,QAAQ,CAAC,aAAa,CAAC,GAAG,IAAI,CAACV,QAAQ;EAC5C,OAAOL,cAAc,CAACO,SAAS,CAACK,QAAQ,CAACN,IAAI,CAAC,IAAI,EAAEO,OAAO,EAAEC,MAAM,CAAC;AACtE,CAAC;AAEDX,eAAe,CAACI,SAAS,CAACS,cAAc,GAAG,UAAUC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,QAAQ,EAAEC,EAAE,EAAEC,EAAE,EAAE;EACrFD,EAAE,GAAGA,EAAE,KAAKE,SAAS,GAAGF,EAAE,GAAG,GAAG;EAChCC,EAAE,GAAGA,EAAE,KAAKC,SAAS,GAAGD,EAAE,GAAG,GAAG;EAChC,IAAI,CAAClB,QAAQ,CAACoB,KAAK,CAACT,cAAc,CAACC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,EAAE,EAAEC,QAAQ,EAAEC,EAAE,EAAEC,EAAE,CAAC;AACtE,CAAC;AAEDpB,eAAe,CAACI,SAAS,CAACmB,IAAI,GAAG,UAAUC,MAAM,EAAE;EACjD3B,cAAc,CAACO,SAAS,CAACmB,IAAI,CAACpB,IAAI,CAAC,IAAI,EAAEqB,MAAM,CAAC;EAChD,IAAI,CAACvB,EAAE,GAAGuB,MAAM,CAACvB,EAAE;EACnB,IAAI,CAACC,QAAQ,GAAGsB,MAAM,CAACtB,QAAQ;EAC/B,OAAO,IAAI;AACb,CAAC;AAEDF,eAAe,CAACI,SAAS,CAACqB,MAAM,GAAG,UAAUC,IAAI,EAAE;EACjD,IAAIC,IAAI,GAAG,IAAI,CAACC,WAAW,CAACF,IAAI,CAAC;EAEjC,IAAI,CAACC,IAAI,EAAE;IACTA,IAAI,GAAG,IAAI,CAACE,cAAc,CAACH,IAAI,CAAC;IAChCC,IAAI,CAAC1B,EAAE,GAAG,IAAI,CAACA,EAAE,CAACwB,MAAM,CAACC,IAAI,CAAC,CAACI,IAAI;IACnCH,IAAI,CAACzB,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACuB,MAAM,CAACC,IAAI,CAAC,CAACI,IAAI;EACjD;EAEA,OAAOH,IAAI;AACb,CAAC;AAED,SAAS3B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}