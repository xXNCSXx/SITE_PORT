{"ast":null,"code":"import { DataTextureLoader, CubeTexture, RGBM7Encoding, RGBAFormat, LinearFilter, UnsignedByteType } from 'three';\nclass RGBMLoader extends DataTextureLoader {\n  loadCubemap(urls, onLoad, onProgress, onError) {\n    const texture = new CubeTexture();\n    let loaded = 0;\n    const scope = this;\n    function loadTexture(i) {\n      scope.load(urls[i], function (image) {\n        texture.images[i] = image;\n        loaded++;\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, undefined, onError);\n    }\n    for (let i = 0; i < urls.length; ++i) {\n      loadTexture(i);\n    }\n    texture.encoding = RGBM7Encoding;\n    texture.format = RGBAFormat;\n    texture.minFilter = LinearFilter;\n    texture.generateMipmaps = false;\n    return texture;\n  }\n  parse(buffer) {\n    const img = UPNG.decode(buffer);\n    const rgba = UPNG.toRGBA8(img)[0];\n    return {\n      width: img.width,\n      height: img.height,\n      data: new Uint8Array(rgba),\n      format: RGBAFormat,\n      type: UnsignedByteType,\n      flipY: true,\n      encoding: RGBM7Encoding\n    };\n  }\n} // from https://github.com/photopea/UPNG.js (MIT License)\n\nvar UPNG = {};\nUPNG.toRGBA8 = function (out) {\n  var w = out.width,\n    h = out.height;\n  if (out.tabs.acTL == null) return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];\n  var frms = [];\n  if (out.frames[0].data == null) out.frames[0].data = out.data;\n  var len = w * h * 4,\n    img = new Uint8Array(len),\n    empty = new Uint8Array(len),\n    prev = new Uint8Array(len);\n  for (let i = 0; i < out.frames.length; i++) {\n    var frm = out.frames[i];\n    var fx = frm.rect.x,\n      fy = frm.rect.y,\n      fw = frm.rect.width,\n      fh = frm.rect.height;\n    var fdata = UPNG.toRGBA8.decodeImage(frm.data, fw, fh, out);\n    if (i != 0) for (let j = 0; j < len; j++) prev[j] = img[j];\n    if (frm.blend == 0) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);else if (frm.blend == 1) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);\n    frms.push(img.buffer.slice(0));\n    if (frm.dispose == 0) ;else if (frm.dispose == 1) UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);else if (frm.dispose == 2) for (let j = 0; j < len; j++) img[j] = prev[j];\n  }\n  return frms;\n};\nUPNG.toRGBA8.decodeImage = function (data, w, h, out) {\n  var area = w * h,\n    bpp = UPNG.decode._getBPP(out);\n  var bpl = Math.ceil(w * bpp / 8); // bytes per line\n\n  var bf = new Uint8Array(area * 4),\n    bf32 = new Uint32Array(bf.buffer);\n  var ctype = out.ctype,\n    depth = out.depth;\n  var rs = UPNG._bin.readUshort;\n  if (ctype == 6) {\n    // RGB + alpha\n    var qarea = area << 2;\n    if (depth == 8) for (let i = 0; i < qarea; i += 4) {\n      bf[i] = data[i];\n      bf[i + 1] = data[i + 1];\n      bf[i + 2] = data[i + 2];\n      bf[i + 3] = data[i + 3];\n    }\n    if (depth == 16) for (let i = 0; i < qarea; i++) {\n      bf[i] = data[i << 1];\n    }\n  } else if (ctype == 2) {\n    // RGB\n    var ts = out.tabs['tRNS'];\n    if (ts == null) {\n      if (depth == 8) for (let i = 0; i < area; i++) {\n        var ti = i * 3;\n        bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n      }\n      if (depth == 16) for (let i = 0; i < area; i++) {\n        var ti = i * 6;\n        bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n      }\n    } else {\n      var tr = ts[0],\n        tg = ts[1],\n        tb = ts[2];\n      if (depth == 8) for (let i = 0; i < area; i++) {\n        var qi = i << 2,\n          ti = i * 3;\n        bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n        if (data[ti] == tr && data[ti + 1] == tg && data[ti + 2] == tb) bf[qi + 3] = 0;\n      }\n      if (depth == 16) for (let i = 0; i < area; i++) {\n        var qi = i << 2,\n          ti = i * 6;\n        bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n        if (rs(data, ti) == tr && rs(data, ti + 2) == tg && rs(data, ti + 4) == tb) bf[qi + 3] = 0;\n      }\n    }\n  } else if (ctype == 3) {\n    // palette\n    var p = out.tabs['PLTE'],\n      ap = out.tabs['tRNS'],\n      tl = ap ? ap.length : 0; //console.log(p, ap);\n\n    if (depth == 1) for (let y = 0; y < h; y++) {\n      var s0 = y * bpl,\n        t0 = y * w;\n      for (let i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n          j = data[s0 + (i >> 3)] >> 7 - ((i & 7) << 0) & 1,\n          cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 2) for (let y = 0; y < h; y++) {\n      var s0 = y * bpl,\n        t0 = y * w;\n      for (let i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n          j = data[s0 + (i >> 2)] >> 6 - ((i & 3) << 1) & 3,\n          cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 4) for (let y = 0; y < h; y++) {\n      var s0 = y * bpl,\n        t0 = y * w;\n      for (let i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n          j = data[s0 + (i >> 1)] >> 4 - ((i & 1) << 2) & 15,\n          cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 8) for (let i = 0; i < area; i++) {\n      var qi = i << 2,\n        j = data[i],\n        cj = 3 * j;\n      bf[qi] = p[cj];\n      bf[qi + 1] = p[cj + 1];\n      bf[qi + 2] = p[cj + 2];\n      bf[qi + 3] = j < tl ? ap[j] : 255;\n    }\n  } else if (ctype == 4) {\n    // gray + alpha\n    if (depth == 8) for (let i = 0; i < area; i++) {\n      var qi = i << 2,\n        di = i << 1,\n        gr = data[di];\n      bf[qi] = gr;\n      bf[qi + 1] = gr;\n      bf[qi + 2] = gr;\n      bf[qi + 3] = data[di + 1];\n    }\n    if (depth == 16) for (let i = 0; i < area; i++) {\n      var qi = i << 2,\n        di = i << 2,\n        gr = data[di];\n      bf[qi] = gr;\n      bf[qi + 1] = gr;\n      bf[qi + 2] = gr;\n      bf[qi + 3] = data[di + 2];\n    }\n  } else if (ctype == 0) {\n    // gray\n    var tr = out.tabs['tRNS'] ? out.tabs['tRNS'] : -1;\n    for (let y = 0; y < h; y++) {\n      var off = y * bpl,\n        to = y * w;\n      if (depth == 1) for (let x = 0; x < w; x++) {\n        var gr = 255 * (data[off + (x >>> 3)] >>> 7 - (x & 7) & 1),\n          al = gr == tr * 255 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 2) for (let x = 0; x < w; x++) {\n        var gr = 85 * (data[off + (x >>> 2)] >>> 6 - ((x & 3) << 1) & 3),\n          al = gr == tr * 85 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 4) for (let x = 0; x < w; x++) {\n        var gr = 17 * (data[off + (x >>> 1)] >>> 4 - ((x & 1) << 2) & 15),\n          al = gr == tr * 17 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 8) for (let x = 0; x < w; x++) {\n        var gr = data[off + x],\n          al = gr == tr ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 16) for (let x = 0; x < w; x++) {\n        var gr = data[off + (x << 1)],\n          al = rs(data, off + (x << i)) == tr ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      }\n    }\n  } //console.log(Date.now()-time);\n\n  return bf;\n};\nUPNG.decode = function (buff) {\n  var data = new Uint8Array(buff),\n    offset = 8,\n    bin = UPNG._bin,\n    rUs = bin.readUshort,\n    rUi = bin.readUint;\n  var out = {\n    tabs: {},\n    frames: []\n  };\n  var dd = new Uint8Array(data.length),\n    doff = 0; // put all IDAT data into it\n\n  var fd,\n    foff = 0; // frames\n\n  var mgck = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n  for (let i = 0; i < 8; i++) if (data[i] != mgck[i]) throw 'The input is not a PNG file!';\n  while (offset < data.length) {\n    var len = bin.readUint(data, offset);\n    offset += 4;\n    var type = bin.readASCII(data, offset, 4);\n    offset += 4; //console.log(type,len);\n\n    if (type == 'IHDR') {\n      UPNG.decode._IHDR(data, offset, out);\n    } else if (type == 'CgBI') {\n      out.tabs[type] = data.slice(offset, offset + 4);\n    } else if (type == 'IDAT') {\n      for (let i = 0; i < len; i++) dd[doff + i] = data[offset + i];\n      doff += len;\n    } else if (type == 'acTL') {\n      out.tabs[type] = {\n        num_frames: rUi(data, offset),\n        num_plays: rUi(data, offset + 4)\n      };\n      fd = new Uint8Array(data.length);\n    } else if (type == 'fcTL') {\n      if (foff != 0) {\n        var fr = out.frames[out.frames.length - 1];\n        fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n        foff = 0;\n      }\n      var rct = {\n        x: rUi(data, offset + 12),\n        y: rUi(data, offset + 16),\n        width: rUi(data, offset + 4),\n        height: rUi(data, offset + 8)\n      };\n      var del = rUs(data, offset + 22);\n      del = rUs(data, offset + 20) / (del == 0 ? 100 : del);\n      var frm = {\n        rect: rct,\n        delay: Math.round(del * 1000),\n        dispose: data[offset + 24],\n        blend: data[offset + 25]\n      }; //console.log(frm);\n\n      out.frames.push(frm);\n    } else if (type == 'fdAT') {\n      for (let i = 0; i < len - 4; i++) fd[foff + i] = data[offset + i + 4];\n      foff += len - 4;\n    } else if (type == 'pHYs') {\n      out.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset + 4), data[offset + 8]];\n    } else if (type == 'cHRM') {\n      out.tabs[type] = [];\n      for (let i = 0; i < 8; i++) out.tabs[type].push(bin.readUint(data, offset + i * 4));\n    } else if (type == 'tEXt' || type == 'zTXt') {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = bin.nextZero(data, offset);\n      var keyw = bin.readASCII(data, offset, nz - offset);\n      var text,\n        tl = offset + len - nz - 1;\n      if (type == 'tEXt') text = bin.readASCII(data, nz + 1, tl);else {\n        var bfr = UPNG.decode._inflate(data.slice(nz + 2, nz + 2 + tl));\n        text = bin.readUTF8(bfr, 0, bfr.length);\n      }\n      out.tabs[type][keyw] = text;\n    } else if (type == 'iTXt') {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = 0,\n        off = offset;\n      nz = bin.nextZero(data, off);\n      var keyw = bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      var cflag = data[off];\n      off += 2;\n      nz = bin.nextZero(data, off);\n      bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      nz = bin.nextZero(data, off);\n      bin.readUTF8(data, off, nz - off);\n      off = nz + 1;\n      var text,\n        tl = len - (off - offset);\n      if (cflag == 0) text = bin.readUTF8(data, off, tl);else {\n        var bfr = UPNG.decode._inflate(data.slice(off, off + tl));\n        text = bin.readUTF8(bfr, 0, bfr.length);\n      }\n      out.tabs[type][keyw] = text;\n    } else if (type == 'PLTE') {\n      out.tabs[type] = bin.readBytes(data, offset, len);\n    } else if (type == 'hIST') {\n      var pl = out.tabs['PLTE'].length / 3;\n      out.tabs[type] = [];\n      for (let i = 0; i < pl; i++) out.tabs[type].push(rUs(data, offset + i * 2));\n    } else if (type == 'tRNS') {\n      if (out.ctype == 3) out.tabs[type] = bin.readBytes(data, offset, len);else if (out.ctype == 0) out.tabs[type] = rUs(data, offset);else if (out.ctype == 2) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)]; //else console.log(\"tRNS for unsupported color type\",out.ctype, len);\n    } else if (type == 'gAMA') out.tabs[type] = bin.readUint(data, offset) / 100000;else if (type == 'sRGB') out.tabs[type] = data[offset];else if (type == 'bKGD') {\n      if (out.ctype == 0 || out.ctype == 4) out.tabs[type] = [rUs(data, offset)];else if (out.ctype == 2 || out.ctype == 6) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)];else if (out.ctype == 3) out.tabs[type] = data[offset];\n    } else if (type == 'IEND') {\n      break;\n    } //else {  log(\"unknown chunk type\", type, len);  }\n\n    offset += len;\n    bin.readUint(data, offset);\n    offset += 4;\n  }\n  if (foff != 0) {\n    var fr = out.frames[out.frames.length - 1];\n    fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n    foff = 0;\n  }\n  out.data = UPNG.decode._decompress(out, dd, out.width, out.height);\n  delete out.compress;\n  delete out.interlace;\n  delete out.filter;\n  return out;\n};\nUPNG.decode._decompress = function (out, dd, w, h) {\n  var bpp = UPNG.decode._getBPP(out),\n    bpl = Math.ceil(w * bpp / 8),\n    buff = new Uint8Array((bpl + 1 + out.interlace) * h);\n  if (out.tabs['CgBI']) dd = UPNG.inflateRaw(dd, buff);else dd = UPNG.decode._inflate(dd, buff);\n  if (out.interlace == 0) dd = UPNG.decode._filterZero(dd, out, 0, w, h);else if (out.interlace == 1) dd = UPNG.decode._readInterlace(dd, out);\n  return dd;\n};\nUPNG.decode._inflate = function (data, buff) {\n  var out = UPNG['inflateRaw'](new Uint8Array(data.buffer, 2, data.length - 6), buff);\n  return out;\n};\nUPNG.inflateRaw = function () {\n  var H = {};\n  H.H = {};\n  H.H.N = function (N, W) {\n    var R = Uint8Array,\n      i = 0,\n      m = 0,\n      J = 0,\n      h = 0,\n      Q = 0,\n      X = 0,\n      u = 0,\n      w = 0,\n      d = 0,\n      v,\n      C;\n    if (N[0] == 3 && N[1] == 0) return W ? W : new R(0);\n    var V = H.H,\n      n = V.b,\n      A = V.e,\n      l = V.R,\n      M = V.n,\n      I = V.A,\n      e = V.Z,\n      b = V.m,\n      Z = W == null;\n    if (Z) W = new R(N.length >>> 2 << 5);\n    while (i == 0) {\n      i = n(N, d, 1);\n      m = n(N, d + 1, 2);\n      d += 3;\n      if (m == 0) {\n        if ((d & 7) != 0) d += 8 - (d & 7);\n        var D = (d >>> 3) + 4,\n          q = N[D - 4] | N[D - 3] << 8;\n        if (Z) W = H.H.W(W, w + q);\n        W.set(new R(N.buffer, N.byteOffset + D, q), w);\n        d = D + q << 3;\n        w += q;\n        continue;\n      }\n      if (Z) W = H.H.W(W, w + (1 << 17));\n      if (m == 1) {\n        v = b.J;\n        C = b.h;\n        X = (1 << 9) - 1;\n        u = (1 << 5) - 1;\n      }\n      if (m == 2) {\n        J = A(N, d, 5) + 257;\n        h = A(N, d + 5, 5) + 1;\n        Q = A(N, d + 10, 4) + 4;\n        d += 14;\n        var j = 1;\n        for (let c = 0; c < 38; c += 2) {\n          b.Q[c] = 0;\n          b.Q[c + 1] = 0;\n        }\n        for (let c = 0; c < Q; c++) {\n          var K = A(N, d + c * 3, 3);\n          b.Q[(b.X[c] << 1) + 1] = K;\n          if (K > j) j = K;\n        }\n        d += 3 * Q;\n        M(b.Q, j);\n        I(b.Q, j, b.u);\n        v = b.w;\n        C = b.d;\n        d = l(b.u, (1 << j) - 1, J + h, N, d, b.v);\n        var r = V.V(b.v, 0, J, b.C);\n        X = (1 << r) - 1;\n        var S = V.V(b.v, J, h, b.D);\n        u = (1 << S) - 1;\n        M(b.C, r);\n        I(b.C, r, v);\n        M(b.D, S);\n        I(b.D, S, C);\n      }\n      while (!0) {\n        var T = v[e(N, d) & X];\n        d += T & 15;\n        var p = T >>> 4;\n        if (p >>> 8 == 0) {\n          W[w++] = p;\n        } else if (p == 256) {\n          break;\n        } else {\n          var z = w + p - 254;\n          if (p > 264) {\n            var _ = b.q[p - 257];\n            z = w + (_ >>> 3) + A(N, d, _ & 7);\n            d += _ & 7;\n          }\n          var $ = C[e(N, d) & u];\n          d += $ & 15;\n          var s = $ >>> 4,\n            Y = b.c[s],\n            a = (Y >>> 4) + n(N, d, Y & 15);\n          d += Y & 15;\n          while (w < z) {\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n          }\n          w = z;\n        }\n      }\n    }\n    return W.length == w ? W : W.slice(0, w);\n  };\n  H.H.W = function (N, W) {\n    var R = N.length;\n    if (W <= R) return N;\n    var V = new Uint8Array(R << 1);\n    V.set(N, 0);\n    return V;\n  };\n  H.H.R = function (N, W, R, V, n, A) {\n    var l = H.H.e,\n      M = H.H.Z,\n      I = 0;\n    while (I < R) {\n      var e = N[M(V, n) & W];\n      n += e & 15;\n      var b = e >>> 4;\n      if (b <= 15) {\n        A[I] = b;\n        I++;\n      } else {\n        var Z = 0,\n          m = 0;\n        if (b == 16) {\n          m = 3 + l(V, n, 2);\n          n += 2;\n          Z = A[I - 1];\n        } else if (b == 17) {\n          m = 3 + l(V, n, 3);\n          n += 3;\n        } else if (b == 18) {\n          m = 11 + l(V, n, 7);\n          n += 7;\n        }\n        var J = I + m;\n        while (I < J) {\n          A[I] = Z;\n          I++;\n        }\n      }\n    }\n    return n;\n  };\n  H.H.V = function (N, W, R, V) {\n    var n = 0,\n      A = 0,\n      l = V.length >>> 1;\n    while (A < R) {\n      var M = N[A + W];\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = M;\n      if (M > n) n = M;\n      A++;\n    }\n    while (A < l) {\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = 0;\n      A++;\n    }\n    return n;\n  };\n  H.H.n = function (N, W) {\n    var R = H.H.m,\n      V = N.length,\n      n,\n      A,\n      l,\n      M,\n      I,\n      e = R.j;\n    for (let M = 0; M <= W; M++) e[M] = 0;\n    for (M = 1; M < V; M += 2) e[N[M]]++;\n    var b = R.K;\n    n = 0;\n    e[0] = 0;\n    for (A = 1; A <= W; A++) {\n      n = n + e[A - 1] << 1;\n      b[A] = n;\n    }\n    for (l = 0; l < V; l += 2) {\n      I = N[l + 1];\n      if (I != 0) {\n        N[l] = b[I];\n        b[I]++;\n      }\n    }\n  };\n  H.H.A = function (N, W, R) {\n    var V = N.length,\n      n = H.H.m,\n      A = n.r;\n    for (let l = 0; l < V; l += 2) if (N[l + 1] != 0) {\n      var M = l >> 1,\n        I = N[l + 1],\n        e = M << 4 | I,\n        b = W - I,\n        Z = N[l] << b,\n        m = Z + (1 << b);\n      while (Z != m) {\n        var J = A[Z] >>> 15 - W;\n        R[J] = e;\n        Z++;\n      }\n    }\n  };\n  H.H.l = function (N, W) {\n    var R = H.H.m.r,\n      V = 15 - W;\n    for (let n = 0; n < N.length; n += 2) {\n      var A = N[n] << W - N[n + 1];\n      N[n] = R[A] >>> V;\n    }\n  };\n  H.H.M = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n  };\n  H.H.I = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n    N[V + 2] |= R >>> 16;\n  };\n  H.H.e = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8) >>> (W & 7) & (1 << R) - 1;\n  };\n  H.H.b = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7) & (1 << R) - 1;\n  };\n  H.H.Z = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7);\n  };\n  H.H.i = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16 | N[(W >>> 3) + 3] << 24) >>> (W & 7);\n  };\n  H.H.m = function () {\n    var N = Uint16Array,\n      W = Uint32Array;\n    return {\n      K: new N(16),\n      j: new N(16),\n      X: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n      S: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\n      T: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\n      q: new N(32),\n      p: [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535],\n      z: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\n      c: new W(32),\n      J: new N(512),\n      _: [],\n      h: new N(32),\n      $: [],\n      w: new N(32768),\n      C: [],\n      v: [],\n      d: new N(32768),\n      D: [],\n      u: new N(512),\n      Q: [],\n      r: new N(1 << 15),\n      s: new W(286),\n      Y: new W(30),\n      a: new W(19),\n      t: new W(15e3),\n      k: new N(1 << 16),\n      g: new N(1 << 15)\n    };\n  }();\n  (function () {\n    var N = H.H.m,\n      W = 1 << 15;\n    for (let R = 0; R < W; R++) {\n      var V = R;\n      V = (V & 2863311530) >>> 1 | (V & 1431655765) << 1;\n      V = (V & 3435973836) >>> 2 | (V & 858993459) << 2;\n      V = (V & 4042322160) >>> 4 | (V & 252645135) << 4;\n      V = (V & 4278255360) >>> 8 | (V & 16711935) << 8;\n      N.r[R] = (V >>> 16 | V << 16) >>> 17;\n    }\n    function n(A, l, M) {\n      while (l-- != 0) A.push(0, M);\n    }\n    for (let R = 0; R < 32; R++) {\n      N.q[R] = N.S[R] << 3 | N.T[R];\n      N.c[R] = N.p[R] << 4 | N.z[R];\n    }\n    n(N._, 144, 8);\n    n(N._, 255 - 143, 9);\n    n(N._, 279 - 255, 7);\n    n(N._, 287 - 279, 8);\n    H.H.n(N._, 9);\n    H.H.A(N._, 9, N.J);\n    H.H.l(N._, 9);\n    n(N.$, 32, 5);\n    H.H.n(N.$, 5);\n    H.H.A(N.$, 5, N.h);\n    H.H.l(N.$, 5);\n    n(N.Q, 19, 0);\n    n(N.C, 286, 0);\n    n(N.D, 30, 0);\n    n(N.v, 320, 0);\n  })();\n  return H.H.N;\n}();\nUPNG.decode._readInterlace = function (data, out) {\n  var w = out.width,\n    h = out.height;\n  var bpp = UPNG.decode._getBPP(out),\n    cbpp = bpp >> 3,\n    bpl = Math.ceil(w * bpp / 8);\n  var img = new Uint8Array(h * bpl);\n  var di = 0;\n  var starting_row = [0, 0, 4, 0, 2, 0, 1];\n  var starting_col = [0, 4, 0, 2, 0, 1, 0];\n  var row_increment = [8, 8, 8, 4, 4, 2, 2];\n  var col_increment = [8, 8, 4, 4, 2, 2, 1];\n  var pass = 0;\n  while (pass < 7) {\n    var ri = row_increment[pass],\n      ci = col_increment[pass];\n    var sw = 0,\n      sh = 0;\n    var cr = starting_row[pass];\n    while (cr < h) {\n      cr += ri;\n      sh++;\n    }\n    var cc = starting_col[pass];\n    while (cc < w) {\n      cc += ci;\n      sw++;\n    }\n    var bpll = Math.ceil(sw * bpp / 8);\n    UPNG.decode._filterZero(data, out, di, sw, sh);\n    var y = 0,\n      row = starting_row[pass];\n    while (row < h) {\n      var col = starting_col[pass];\n      var cdi = di + y * bpll << 3;\n      while (col < w) {\n        if (bpp == 1) {\n          var val = data[cdi >> 3];\n          val = val >> 7 - (cdi & 7) & 1;\n          img[row * bpl + (col >> 3)] |= val << 7 - ((col & 7) << 0);\n        }\n        if (bpp == 2) {\n          var val = data[cdi >> 3];\n          val = val >> 6 - (cdi & 7) & 3;\n          img[row * bpl + (col >> 2)] |= val << 6 - ((col & 3) << 1);\n        }\n        if (bpp == 4) {\n          var val = data[cdi >> 3];\n          val = val >> 4 - (cdi & 7) & 15;\n          img[row * bpl + (col >> 1)] |= val << 4 - ((col & 1) << 2);\n        }\n        if (bpp >= 8) {\n          var ii = row * bpl + col * cbpp;\n          for (let j = 0; j < cbpp; j++) img[ii + j] = data[(cdi >> 3) + j];\n        }\n        cdi += bpp;\n        col += ci;\n      }\n      y++;\n      row += ri;\n    }\n    if (sw * sh != 0) di += sh * (1 + bpll);\n    pass = pass + 1;\n  }\n  return img;\n};\nUPNG.decode._getBPP = function (out) {\n  var noc = [1, null, 3, 1, 2, null, 4][out.ctype];\n  return noc * out.depth;\n};\nUPNG.decode._filterZero = function (data, out, off, w, h) {\n  var bpp = UPNG.decode._getBPP(out),\n    bpl = Math.ceil(w * bpp / 8),\n    paeth = UPNG.decode._paeth;\n  bpp = Math.ceil(bpp / 8);\n  var i = 0,\n    di = 1,\n    type = data[off],\n    x = 0;\n  if (type > 1) data[off] = [0, 0, 1][type - 2];\n  if (type == 3) for (x = bpp; x < bpl; x++) data[x + 1] = data[x + 1] + (data[x + 1 - bpp] >>> 1) & 255;\n  for (let y = 0; y < h; y++) {\n    i = off + y * bpl;\n    di = i + y + 1;\n    type = data[di - 1];\n    x = 0;\n    if (type == 0) for (; x < bpl; x++) data[i + x] = data[di + x];else if (type == 1) {\n      for (; x < bpp; x++) data[i + x] = data[di + x];\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpp];\n    } else if (type == 2) {\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpl];\n    } else if (type == 3) {\n      for (; x < bpp; x++) data[i + x] = data[di + x] + (data[i + x - bpl] >>> 1);\n      for (; x < bpl; x++) data[i + x] = data[di + x] + (data[i + x - bpl] + data[i + x - bpp] >>> 1);\n    } else {\n      for (; x < bpp; x++) data[i + x] = data[di + x] + paeth(0, data[i + x - bpl], 0);\n      for (; x < bpl; x++) data[i + x] = data[di + x] + paeth(data[i + x - bpp], data[i + x - bpl], data[i + x - bpp - bpl]);\n    }\n  }\n  return data;\n};\nUPNG.decode._paeth = function (a, b, c) {\n  var p = a + b - c,\n    pa = p - a,\n    pb = p - b,\n    pc = p - c;\n  if (pa * pa <= pb * pb && pa * pa <= pc * pc) return a;else if (pb * pb <= pc * pc) return b;\n  return c;\n};\nUPNG.decode._IHDR = function (data, offset, out) {\n  var bin = UPNG._bin;\n  out.width = bin.readUint(data, offset);\n  offset += 4;\n  out.height = bin.readUint(data, offset);\n  offset += 4;\n  out.depth = data[offset];\n  offset++;\n  out.ctype = data[offset];\n  offset++;\n  out.compress = data[offset];\n  offset++;\n  out.filter = data[offset];\n  offset++;\n  out.interlace = data[offset];\n  offset++;\n};\nUPNG._bin = {\n  nextZero: function (data, p) {\n    while (data[p] != 0) p++;\n    return p;\n  },\n  readUshort: function (buff, p) {\n    return buff[p] << 8 | buff[p + 1];\n  },\n  writeUshort: function (buff, p, n) {\n    buff[p] = n >> 8 & 255;\n    buff[p + 1] = n & 255;\n  },\n  readUint: function (buff, p) {\n    return buff[p] * (256 * 256 * 256) + (buff[p + 1] << 16 | buff[p + 2] << 8 | buff[p + 3]);\n  },\n  writeUint: function (buff, p, n) {\n    buff[p] = n >> 24 & 255;\n    buff[p + 1] = n >> 16 & 255;\n    buff[p + 2] = n >> 8 & 255;\n    buff[p + 3] = n & 255;\n  },\n  readASCII: function (buff, p, l) {\n    var s = '';\n    for (let i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n    return s;\n  },\n  writeASCII: function (data, p, s) {\n    for (let i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);\n  },\n  readBytes: function (buff, p, l) {\n    var arr = [];\n    for (let i = 0; i < l; i++) arr.push(buff[p + i]);\n    return arr;\n  },\n  pad: function (n) {\n    return n.length < 2 ? '0' + n : n;\n  },\n  readUTF8: function (buff, p, l) {\n    var s = '',\n      ns;\n    for (let i = 0; i < l; i++) s += '%' + UPNG._bin.pad(buff[p + i].toString(16));\n    try {\n      ns = decodeURIComponent(s);\n    } catch (e) {\n      return UPNG._bin.readASCII(buff, p, l);\n    }\n    return ns;\n  }\n};\nUPNG._copyTile = function (sb, sw, sh, tb, tw, th, xoff, yoff, mode) {\n  var w = Math.min(sw, tw),\n    h = Math.min(sh, th);\n  var si = 0,\n    ti = 0;\n  for (let y = 0; y < h; y++) for (let x = 0; x < w; x++) {\n    if (xoff >= 0 && yoff >= 0) {\n      si = y * sw + x << 2;\n      ti = (yoff + y) * tw + xoff + x << 2;\n    } else {\n      si = (-yoff + y) * sw - xoff + x << 2;\n      ti = y * tw + x << 2;\n    }\n    if (mode == 0) {\n      tb[ti] = sb[si];\n      tb[ti + 1] = sb[si + 1];\n      tb[ti + 2] = sb[si + 2];\n      tb[ti + 3] = sb[si + 3];\n    } else if (mode == 1) {\n      var fa = sb[si + 3] * (1 / 255),\n        fr = sb[si] * fa,\n        fg = sb[si + 1] * fa,\n        fb = sb[si + 2] * fa;\n      var ba = tb[ti + 3] * (1 / 255),\n        br = tb[ti] * ba,\n        bg = tb[ti + 1] * ba,\n        bb = tb[ti + 2] * ba;\n      var ifa = 1 - fa,\n        oa = fa + ba * ifa,\n        ioa = oa == 0 ? 0 : 1 / oa;\n      tb[ti + 3] = 255 * oa;\n      tb[ti + 0] = (fr + br * ifa) * ioa;\n      tb[ti + 1] = (fg + bg * ifa) * ioa;\n      tb[ti + 2] = (fb + bb * ifa) * ioa;\n    } else if (mode == 2) {\n      // copy only differences, otherwise zero\n      var fa = sb[si + 3],\n        fr = sb[si],\n        fg = sb[si + 1],\n        fb = sb[si + 2];\n      var ba = tb[ti + 3],\n        br = tb[ti],\n        bg = tb[ti + 1],\n        bb = tb[ti + 2];\n      if (fa == ba && fr == br && fg == bg && fb == bb) {\n        tb[ti] = 0;\n        tb[ti + 1] = 0;\n        tb[ti + 2] = 0;\n        tb[ti + 3] = 0;\n      } else {\n        tb[ti] = fr;\n        tb[ti + 1] = fg;\n        tb[ti + 2] = fb;\n        tb[ti + 3] = fa;\n      }\n    } else if (mode == 3) {\n      // check if can be blended\n      var fa = sb[si + 3],\n        fr = sb[si],\n        fg = sb[si + 1],\n        fb = sb[si + 2];\n      var ba = tb[ti + 3],\n        br = tb[ti],\n        bg = tb[ti + 1],\n        bb = tb[ti + 2];\n      if (fa == ba && fr == br && fg == bg && fb == bb) continue; //if(fa!=255 && ba!=0) return false;\n\n      if (fa < 220 && ba > 20) return false;\n    }\n  }\n  return true;\n};\nexport { RGBMLoader };","map":{"version":3,"names":["DataTextureLoader","CubeTexture","RGBM7Encoding","RGBAFormat","LinearFilter","UnsignedByteType","RGBMLoader","loadCubemap","urls","onLoad","onProgress","onError","texture","loaded","scope","loadTexture","i","load","image","images","needsUpdate","undefined","length","encoding","format","minFilter","generateMipmaps","parse","buffer","img","UPNG","decode","rgba","toRGBA8","width","height","data","Uint8Array","type","flipY","out","w","h","tabs","acTL","decodeImage","frms","frames","len","empty","prev","frm","fx","rect","x","fy","y","fw","fh","fdata","j","blend","_copyTile","push","slice","dispose","area","bpp","_getBPP","bpl","Math","ceil","bf","bf32","Uint32Array","ctype","depth","rs","_bin","readUshort","qarea","ts","ti","tr","tg","tb","qi","p","ap","tl","s0","t0","cj","di","gr","off","to","al","buff","offset","bin","rUs","rUi","readUint","dd","doff","fd","foff","mgck","readASCII","_IHDR","num_frames","num_plays","fr","_decompress","rct","del","delay","round","nz","nextZero","keyw","text","bfr","_inflate","readUTF8","cflag","readBytes","pl","compress","interlace","filter","inflateRaw","_filterZero","_readInterlace","H","N","W","R","m","J","Q","X","u","d","v","C","V","n","b","A","e","l","M","I","Z","D","q","set","byteOffset","c","K","r","S","T","z","_","$","s","Y","a","Uint16Array","t","k","g","cbpp","starting_row","starting_col","row_increment","col_increment","pass","ri","ci","sw","sh","cr","cc","bpll","row","col","cdi","val","ii","noc","paeth","_paeth","pa","pb","pc","writeUshort","writeUint","String","fromCharCode","writeASCII","charCodeAt","arr","pad","ns","toString","decodeURIComponent","sb","tw","th","xoff","yoff","mode","min","si","fa","fg","fb","ba","br","bg","bb","ifa","oa","ioa"],"sources":["C:/Users/drncs/OneDrive/Área de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/loaders/RGBMLoader.js"],"sourcesContent":["import { DataTextureLoader, CubeTexture, RGBM7Encoding, RGBAFormat, LinearFilter, UnsignedByteType } from 'three';\n\nclass RGBMLoader extends DataTextureLoader {\n  loadCubemap(urls, onLoad, onProgress, onError) {\n    const texture = new CubeTexture();\n    let loaded = 0;\n    const scope = this;\n\n    function loadTexture(i) {\n      scope.load(urls[i], function (image) {\n        texture.images[i] = image;\n        loaded++;\n\n        if (loaded === 6) {\n          texture.needsUpdate = true;\n          if (onLoad) onLoad(texture);\n        }\n      }, undefined, onError);\n    }\n\n    for (let i = 0; i < urls.length; ++i) {\n      loadTexture(i);\n    }\n\n    texture.encoding = RGBM7Encoding;\n    texture.format = RGBAFormat;\n    texture.minFilter = LinearFilter;\n    texture.generateMipmaps = false;\n    return texture;\n  }\n\n  parse(buffer) {\n    const img = UPNG.decode(buffer);\n    const rgba = UPNG.toRGBA8(img)[0];\n    return {\n      width: img.width,\n      height: img.height,\n      data: new Uint8Array(rgba),\n      format: RGBAFormat,\n      type: UnsignedByteType,\n      flipY: true,\n      encoding: RGBM7Encoding\n    };\n  }\n\n} // from https://github.com/photopea/UPNG.js (MIT License)\n\n\nvar UPNG = {};\n\nUPNG.toRGBA8 = function (out) {\n  var w = out.width,\n      h = out.height;\n  if (out.tabs.acTL == null) return [UPNG.toRGBA8.decodeImage(out.data, w, h, out).buffer];\n  var frms = [];\n  if (out.frames[0].data == null) out.frames[0].data = out.data;\n  var len = w * h * 4,\n      img = new Uint8Array(len),\n      empty = new Uint8Array(len),\n      prev = new Uint8Array(len);\n\n  for (let i = 0; i < out.frames.length; i++) {\n    var frm = out.frames[i];\n    var fx = frm.rect.x,\n        fy = frm.rect.y,\n        fw = frm.rect.width,\n        fh = frm.rect.height;\n    var fdata = UPNG.toRGBA8.decodeImage(frm.data, fw, fh, out);\n    if (i != 0) for (let j = 0; j < len; j++) prev[j] = img[j];\n    if (frm.blend == 0) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 0);else if (frm.blend == 1) UPNG._copyTile(fdata, fw, fh, img, w, h, fx, fy, 1);\n    frms.push(img.buffer.slice(0));\n\n    if (frm.dispose == 0) ; else if (frm.dispose == 1) UPNG._copyTile(empty, fw, fh, img, w, h, fx, fy, 0);else if (frm.dispose == 2) for (let j = 0; j < len; j++) img[j] = prev[j];\n  }\n\n  return frms;\n};\n\nUPNG.toRGBA8.decodeImage = function (data, w, h, out) {\n  var area = w * h,\n      bpp = UPNG.decode._getBPP(out);\n\n  var bpl = Math.ceil(w * bpp / 8); // bytes per line\n\n  var bf = new Uint8Array(area * 4),\n      bf32 = new Uint32Array(bf.buffer);\n  var ctype = out.ctype,\n      depth = out.depth;\n  var rs = UPNG._bin.readUshort;\n\n  if (ctype == 6) {\n    // RGB + alpha\n    var qarea = area << 2;\n    if (depth == 8) for (let i = 0; i < qarea; i += 4) {\n      bf[i] = data[i];\n      bf[i + 1] = data[i + 1];\n      bf[i + 2] = data[i + 2];\n      bf[i + 3] = data[i + 3];\n    }\n    if (depth == 16) for (let i = 0; i < qarea; i++) {\n      bf[i] = data[i << 1];\n    }\n  } else if (ctype == 2) {\n    // RGB\n    var ts = out.tabs['tRNS'];\n\n    if (ts == null) {\n      if (depth == 8) for (let i = 0; i < area; i++) {\n        var ti = i * 3;\n        bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n      }\n      if (depth == 16) for (let i = 0; i < area; i++) {\n        var ti = i * 6;\n        bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n      }\n    } else {\n      var tr = ts[0],\n          tg = ts[1],\n          tb = ts[2];\n      if (depth == 8) for (let i = 0; i < area; i++) {\n        var qi = i << 2,\n            ti = i * 3;\n        bf32[i] = 255 << 24 | data[ti + 2] << 16 | data[ti + 1] << 8 | data[ti];\n        if (data[ti] == tr && data[ti + 1] == tg && data[ti + 2] == tb) bf[qi + 3] = 0;\n      }\n      if (depth == 16) for (let i = 0; i < area; i++) {\n        var qi = i << 2,\n            ti = i * 6;\n        bf32[i] = 255 << 24 | data[ti + 4] << 16 | data[ti + 2] << 8 | data[ti];\n        if (rs(data, ti) == tr && rs(data, ti + 2) == tg && rs(data, ti + 4) == tb) bf[qi + 3] = 0;\n      }\n    }\n  } else if (ctype == 3) {\n    // palette\n    var p = out.tabs['PLTE'],\n        ap = out.tabs['tRNS'],\n        tl = ap ? ap.length : 0; //console.log(p, ap);\n\n    if (depth == 1) for (let y = 0; y < h; y++) {\n      var s0 = y * bpl,\n          t0 = y * w;\n\n      for (let i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n            j = data[s0 + (i >> 3)] >> 7 - ((i & 7) << 0) & 1,\n            cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 2) for (let y = 0; y < h; y++) {\n      var s0 = y * bpl,\n          t0 = y * w;\n\n      for (let i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n            j = data[s0 + (i >> 2)] >> 6 - ((i & 3) << 1) & 3,\n            cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 4) for (let y = 0; y < h; y++) {\n      var s0 = y * bpl,\n          t0 = y * w;\n\n      for (let i = 0; i < w; i++) {\n        var qi = t0 + i << 2,\n            j = data[s0 + (i >> 1)] >> 4 - ((i & 1) << 2) & 15,\n            cj = 3 * j;\n        bf[qi] = p[cj];\n        bf[qi + 1] = p[cj + 1];\n        bf[qi + 2] = p[cj + 2];\n        bf[qi + 3] = j < tl ? ap[j] : 255;\n      }\n    }\n    if (depth == 8) for (let i = 0; i < area; i++) {\n      var qi = i << 2,\n          j = data[i],\n          cj = 3 * j;\n      bf[qi] = p[cj];\n      bf[qi + 1] = p[cj + 1];\n      bf[qi + 2] = p[cj + 2];\n      bf[qi + 3] = j < tl ? ap[j] : 255;\n    }\n  } else if (ctype == 4) {\n    // gray + alpha\n    if (depth == 8) for (let i = 0; i < area; i++) {\n      var qi = i << 2,\n          di = i << 1,\n          gr = data[di];\n      bf[qi] = gr;\n      bf[qi + 1] = gr;\n      bf[qi + 2] = gr;\n      bf[qi + 3] = data[di + 1];\n    }\n    if (depth == 16) for (let i = 0; i < area; i++) {\n      var qi = i << 2,\n          di = i << 2,\n          gr = data[di];\n      bf[qi] = gr;\n      bf[qi + 1] = gr;\n      bf[qi + 2] = gr;\n      bf[qi + 3] = data[di + 2];\n    }\n  } else if (ctype == 0) {\n    // gray\n    var tr = out.tabs['tRNS'] ? out.tabs['tRNS'] : -1;\n\n    for (let y = 0; y < h; y++) {\n      var off = y * bpl,\n          to = y * w;\n      if (depth == 1) for (let x = 0; x < w; x++) {\n        var gr = 255 * (data[off + (x >>> 3)] >>> 7 - (x & 7) & 1),\n            al = gr == tr * 255 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 2) for (let x = 0; x < w; x++) {\n        var gr = 85 * (data[off + (x >>> 2)] >>> 6 - ((x & 3) << 1) & 3),\n            al = gr == tr * 85 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 4) for (let x = 0; x < w; x++) {\n        var gr = 17 * (data[off + (x >>> 1)] >>> 4 - ((x & 1) << 2) & 15),\n            al = gr == tr * 17 ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 8) for (let x = 0; x < w; x++) {\n        var gr = data[off + x],\n            al = gr == tr ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      } else if (depth == 16) for (let x = 0; x < w; x++) {\n        var gr = data[off + (x << 1)],\n            al = rs(data, off + (x << i)) == tr ? 0 : 255;\n        bf32[to + x] = al << 24 | gr << 16 | gr << 8 | gr;\n      }\n    }\n  } //console.log(Date.now()-time);\n\n\n  return bf;\n};\n\nUPNG.decode = function (buff) {\n  var data = new Uint8Array(buff),\n      offset = 8,\n      bin = UPNG._bin,\n      rUs = bin.readUshort,\n      rUi = bin.readUint;\n  var out = {\n    tabs: {},\n    frames: []\n  };\n  var dd = new Uint8Array(data.length),\n      doff = 0; // put all IDAT data into it\n\n  var fd,\n      foff = 0; // frames\n\n  var mgck = [0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a];\n\n  for (let i = 0; i < 8; i++) if (data[i] != mgck[i]) throw 'The input is not a PNG file!';\n\n  while (offset < data.length) {\n    var len = bin.readUint(data, offset);\n    offset += 4;\n    var type = bin.readASCII(data, offset, 4);\n    offset += 4; //console.log(type,len);\n\n    if (type == 'IHDR') {\n      UPNG.decode._IHDR(data, offset, out);\n    } else if (type == 'CgBI') {\n      out.tabs[type] = data.slice(offset, offset + 4);\n    } else if (type == 'IDAT') {\n      for (let i = 0; i < len; i++) dd[doff + i] = data[offset + i];\n\n      doff += len;\n    } else if (type == 'acTL') {\n      out.tabs[type] = {\n        num_frames: rUi(data, offset),\n        num_plays: rUi(data, offset + 4)\n      };\n      fd = new Uint8Array(data.length);\n    } else if (type == 'fcTL') {\n      if (foff != 0) {\n        var fr = out.frames[out.frames.length - 1];\n        fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n        foff = 0;\n      }\n\n      var rct = {\n        x: rUi(data, offset + 12),\n        y: rUi(data, offset + 16),\n        width: rUi(data, offset + 4),\n        height: rUi(data, offset + 8)\n      };\n      var del = rUs(data, offset + 22);\n      del = rUs(data, offset + 20) / (del == 0 ? 100 : del);\n      var frm = {\n        rect: rct,\n        delay: Math.round(del * 1000),\n        dispose: data[offset + 24],\n        blend: data[offset + 25]\n      }; //console.log(frm);\n\n      out.frames.push(frm);\n    } else if (type == 'fdAT') {\n      for (let i = 0; i < len - 4; i++) fd[foff + i] = data[offset + i + 4];\n\n      foff += len - 4;\n    } else if (type == 'pHYs') {\n      out.tabs[type] = [bin.readUint(data, offset), bin.readUint(data, offset + 4), data[offset + 8]];\n    } else if (type == 'cHRM') {\n      out.tabs[type] = [];\n\n      for (let i = 0; i < 8; i++) out.tabs[type].push(bin.readUint(data, offset + i * 4));\n    } else if (type == 'tEXt' || type == 'zTXt') {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = bin.nextZero(data, offset);\n      var keyw = bin.readASCII(data, offset, nz - offset);\n      var text,\n          tl = offset + len - nz - 1;\n      if (type == 'tEXt') text = bin.readASCII(data, nz + 1, tl);else {\n        var bfr = UPNG.decode._inflate(data.slice(nz + 2, nz + 2 + tl));\n\n        text = bin.readUTF8(bfr, 0, bfr.length);\n      }\n      out.tabs[type][keyw] = text;\n    } else if (type == 'iTXt') {\n      if (out.tabs[type] == null) out.tabs[type] = {};\n      var nz = 0,\n          off = offset;\n      nz = bin.nextZero(data, off);\n      var keyw = bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      var cflag = data[off];\n      off += 2;\n      nz = bin.nextZero(data, off);\n      bin.readASCII(data, off, nz - off);\n      off = nz + 1;\n      nz = bin.nextZero(data, off);\n      bin.readUTF8(data, off, nz - off);\n      off = nz + 1;\n      var text,\n          tl = len - (off - offset);\n      if (cflag == 0) text = bin.readUTF8(data, off, tl);else {\n        var bfr = UPNG.decode._inflate(data.slice(off, off + tl));\n\n        text = bin.readUTF8(bfr, 0, bfr.length);\n      }\n      out.tabs[type][keyw] = text;\n    } else if (type == 'PLTE') {\n      out.tabs[type] = bin.readBytes(data, offset, len);\n    } else if (type == 'hIST') {\n      var pl = out.tabs['PLTE'].length / 3;\n      out.tabs[type] = [];\n\n      for (let i = 0; i < pl; i++) out.tabs[type].push(rUs(data, offset + i * 2));\n    } else if (type == 'tRNS') {\n      if (out.ctype == 3) out.tabs[type] = bin.readBytes(data, offset, len);else if (out.ctype == 0) out.tabs[type] = rUs(data, offset);else if (out.ctype == 2) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)]; //else console.log(\"tRNS for unsupported color type\",out.ctype, len);\n    } else if (type == 'gAMA') out.tabs[type] = bin.readUint(data, offset) / 100000;else if (type == 'sRGB') out.tabs[type] = data[offset];else if (type == 'bKGD') {\n      if (out.ctype == 0 || out.ctype == 4) out.tabs[type] = [rUs(data, offset)];else if (out.ctype == 2 || out.ctype == 6) out.tabs[type] = [rUs(data, offset), rUs(data, offset + 2), rUs(data, offset + 4)];else if (out.ctype == 3) out.tabs[type] = data[offset];\n    } else if (type == 'IEND') {\n      break;\n    } //else {  log(\"unknown chunk type\", type, len);  }\n\n\n    offset += len;\n    bin.readUint(data, offset);\n    offset += 4;\n  }\n\n  if (foff != 0) {\n    var fr = out.frames[out.frames.length - 1];\n    fr.data = UPNG.decode._decompress(out, fd.slice(0, foff), fr.rect.width, fr.rect.height);\n    foff = 0;\n  }\n\n  out.data = UPNG.decode._decompress(out, dd, out.width, out.height);\n  delete out.compress;\n  delete out.interlace;\n  delete out.filter;\n  return out;\n};\n\nUPNG.decode._decompress = function (out, dd, w, h) {\n  var bpp = UPNG.decode._getBPP(out),\n      bpl = Math.ceil(w * bpp / 8),\n      buff = new Uint8Array((bpl + 1 + out.interlace) * h);\n\n  if (out.tabs['CgBI']) dd = UPNG.inflateRaw(dd, buff);else dd = UPNG.decode._inflate(dd, buff);\n  if (out.interlace == 0) dd = UPNG.decode._filterZero(dd, out, 0, w, h);else if (out.interlace == 1) dd = UPNG.decode._readInterlace(dd, out);\n  return dd;\n};\n\nUPNG.decode._inflate = function (data, buff) {\n  var out = UPNG['inflateRaw'](new Uint8Array(data.buffer, 2, data.length - 6), buff);\n  return out;\n};\n\nUPNG.inflateRaw = function () {\n  var H = {};\n  H.H = {};\n\n  H.H.N = function (N, W) {\n    var R = Uint8Array,\n        i = 0,\n        m = 0,\n        J = 0,\n        h = 0,\n        Q = 0,\n        X = 0,\n        u = 0,\n        w = 0,\n        d = 0,\n        v,\n        C;\n    if (N[0] == 3 && N[1] == 0) return W ? W : new R(0);\n    var V = H.H,\n        n = V.b,\n        A = V.e,\n        l = V.R,\n        M = V.n,\n        I = V.A,\n        e = V.Z,\n        b = V.m,\n        Z = W == null;\n    if (Z) W = new R(N.length >>> 2 << 5);\n\n    while (i == 0) {\n      i = n(N, d, 1);\n      m = n(N, d + 1, 2);\n      d += 3;\n\n      if (m == 0) {\n        if ((d & 7) != 0) d += 8 - (d & 7);\n        var D = (d >>> 3) + 4,\n            q = N[D - 4] | N[D - 3] << 8;\n        if (Z) W = H.H.W(W, w + q);\n        W.set(new R(N.buffer, N.byteOffset + D, q), w);\n        d = D + q << 3;\n        w += q;\n        continue;\n      }\n\n      if (Z) W = H.H.W(W, w + (1 << 17));\n\n      if (m == 1) {\n        v = b.J;\n        C = b.h;\n        X = (1 << 9) - 1;\n        u = (1 << 5) - 1;\n      }\n\n      if (m == 2) {\n        J = A(N, d, 5) + 257;\n        h = A(N, d + 5, 5) + 1;\n        Q = A(N, d + 10, 4) + 4;\n        d += 14;\n        var j = 1;\n\n        for (let c = 0; c < 38; c += 2) {\n          b.Q[c] = 0;\n          b.Q[c + 1] = 0;\n        }\n\n        for (let c = 0; c < Q; c++) {\n          var K = A(N, d + c * 3, 3);\n          b.Q[(b.X[c] << 1) + 1] = K;\n          if (K > j) j = K;\n        }\n\n        d += 3 * Q;\n        M(b.Q, j);\n        I(b.Q, j, b.u);\n        v = b.w;\n        C = b.d;\n        d = l(b.u, (1 << j) - 1, J + h, N, d, b.v);\n        var r = V.V(b.v, 0, J, b.C);\n        X = (1 << r) - 1;\n        var S = V.V(b.v, J, h, b.D);\n        u = (1 << S) - 1;\n        M(b.C, r);\n        I(b.C, r, v);\n        M(b.D, S);\n        I(b.D, S, C);\n      }\n\n      while (!0) {\n        var T = v[e(N, d) & X];\n        d += T & 15;\n        var p = T >>> 4;\n\n        if (p >>> 8 == 0) {\n          W[w++] = p;\n        } else if (p == 256) {\n          break;\n        } else {\n          var z = w + p - 254;\n\n          if (p > 264) {\n            var _ = b.q[p - 257];\n            z = w + (_ >>> 3) + A(N, d, _ & 7);\n            d += _ & 7;\n          }\n\n          var $ = C[e(N, d) & u];\n          d += $ & 15;\n          var s = $ >>> 4,\n              Y = b.c[s],\n              a = (Y >>> 4) + n(N, d, Y & 15);\n          d += Y & 15;\n\n          while (w < z) {\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n            W[w] = W[w++ - a];\n          }\n\n          w = z;\n        }\n      }\n    }\n\n    return W.length == w ? W : W.slice(0, w);\n  };\n\n  H.H.W = function (N, W) {\n    var R = N.length;\n    if (W <= R) return N;\n    var V = new Uint8Array(R << 1);\n    V.set(N, 0);\n    return V;\n  };\n\n  H.H.R = function (N, W, R, V, n, A) {\n    var l = H.H.e,\n        M = H.H.Z,\n        I = 0;\n\n    while (I < R) {\n      var e = N[M(V, n) & W];\n      n += e & 15;\n      var b = e >>> 4;\n\n      if (b <= 15) {\n        A[I] = b;\n        I++;\n      } else {\n        var Z = 0,\n            m = 0;\n\n        if (b == 16) {\n          m = 3 + l(V, n, 2);\n          n += 2;\n          Z = A[I - 1];\n        } else if (b == 17) {\n          m = 3 + l(V, n, 3);\n          n += 3;\n        } else if (b == 18) {\n          m = 11 + l(V, n, 7);\n          n += 7;\n        }\n\n        var J = I + m;\n\n        while (I < J) {\n          A[I] = Z;\n          I++;\n        }\n      }\n    }\n\n    return n;\n  };\n\n  H.H.V = function (N, W, R, V) {\n    var n = 0,\n        A = 0,\n        l = V.length >>> 1;\n\n    while (A < R) {\n      var M = N[A + W];\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = M;\n      if (M > n) n = M;\n      A++;\n    }\n\n    while (A < l) {\n      V[A << 1] = 0;\n      V[(A << 1) + 1] = 0;\n      A++;\n    }\n\n    return n;\n  };\n\n  H.H.n = function (N, W) {\n    var R = H.H.m,\n        V = N.length,\n        n,\n        A,\n        l,\n        M,\n        I,\n        e = R.j;\n\n    for (let M = 0; M <= W; M++) e[M] = 0;\n\n    for (M = 1; M < V; M += 2) e[N[M]]++;\n\n    var b = R.K;\n    n = 0;\n    e[0] = 0;\n\n    for (A = 1; A <= W; A++) {\n      n = n + e[A - 1] << 1;\n      b[A] = n;\n    }\n\n    for (l = 0; l < V; l += 2) {\n      I = N[l + 1];\n\n      if (I != 0) {\n        N[l] = b[I];\n        b[I]++;\n      }\n    }\n  };\n\n  H.H.A = function (N, W, R) {\n    var V = N.length,\n        n = H.H.m,\n        A = n.r;\n\n    for (let l = 0; l < V; l += 2) if (N[l + 1] != 0) {\n      var M = l >> 1,\n          I = N[l + 1],\n          e = M << 4 | I,\n          b = W - I,\n          Z = N[l] << b,\n          m = Z + (1 << b);\n\n      while (Z != m) {\n        var J = A[Z] >>> 15 - W;\n        R[J] = e;\n        Z++;\n      }\n    }\n  };\n\n  H.H.l = function (N, W) {\n    var R = H.H.m.r,\n        V = 15 - W;\n\n    for (let n = 0; n < N.length; n += 2) {\n      var A = N[n] << W - N[n + 1];\n      N[n] = R[A] >>> V;\n    }\n  };\n\n  H.H.M = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n  };\n\n  H.H.I = function (N, W, R) {\n    R = R << (W & 7);\n    var V = W >>> 3;\n    N[V] |= R;\n    N[V + 1] |= R >>> 8;\n    N[V + 2] |= R >>> 16;\n  };\n\n  H.H.e = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8) >>> (W & 7) & (1 << R) - 1;\n  };\n\n  H.H.b = function (N, W, R) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7) & (1 << R) - 1;\n  };\n\n  H.H.Z = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16) >>> (W & 7);\n  };\n\n  H.H.i = function (N, W) {\n    return (N[W >>> 3] | N[(W >>> 3) + 1] << 8 | N[(W >>> 3) + 2] << 16 | N[(W >>> 3) + 3] << 24) >>> (W & 7);\n  };\n\n  H.H.m = function () {\n    var N = Uint16Array,\n        W = Uint32Array;\n    return {\n      K: new N(16),\n      j: new N(16),\n      X: [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15],\n      S: [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 999, 999, 999],\n      T: [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0, 0, 0, 0],\n      q: new N(32),\n      p: [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 65535, 65535],\n      z: [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 0, 0],\n      c: new W(32),\n      J: new N(512),\n      _: [],\n      h: new N(32),\n      $: [],\n      w: new N(32768),\n      C: [],\n      v: [],\n      d: new N(32768),\n      D: [],\n      u: new N(512),\n      Q: [],\n      r: new N(1 << 15),\n      s: new W(286),\n      Y: new W(30),\n      a: new W(19),\n      t: new W(15e3),\n      k: new N(1 << 16),\n      g: new N(1 << 15)\n    };\n  }();\n\n  (function () {\n    var N = H.H.m,\n        W = 1 << 15;\n\n    for (let R = 0; R < W; R++) {\n      var V = R;\n      V = (V & 2863311530) >>> 1 | (V & 1431655765) << 1;\n      V = (V & 3435973836) >>> 2 | (V & 858993459) << 2;\n      V = (V & 4042322160) >>> 4 | (V & 252645135) << 4;\n      V = (V & 4278255360) >>> 8 | (V & 16711935) << 8;\n      N.r[R] = (V >>> 16 | V << 16) >>> 17;\n    }\n\n    function n(A, l, M) {\n      while (l-- != 0) A.push(0, M);\n    }\n\n    for (let R = 0; R < 32; R++) {\n      N.q[R] = N.S[R] << 3 | N.T[R];\n      N.c[R] = N.p[R] << 4 | N.z[R];\n    }\n\n    n(N._, 144, 8);\n    n(N._, 255 - 143, 9);\n    n(N._, 279 - 255, 7);\n    n(N._, 287 - 279, 8);\n    H.H.n(N._, 9);\n    H.H.A(N._, 9, N.J);\n    H.H.l(N._, 9);\n    n(N.$, 32, 5);\n    H.H.n(N.$, 5);\n    H.H.A(N.$, 5, N.h);\n    H.H.l(N.$, 5);\n    n(N.Q, 19, 0);\n    n(N.C, 286, 0);\n    n(N.D, 30, 0);\n    n(N.v, 320, 0);\n  })();\n\n  return H.H.N;\n}();\n\nUPNG.decode._readInterlace = function (data, out) {\n  var w = out.width,\n      h = out.height;\n\n  var bpp = UPNG.decode._getBPP(out),\n      cbpp = bpp >> 3,\n      bpl = Math.ceil(w * bpp / 8);\n\n  var img = new Uint8Array(h * bpl);\n  var di = 0;\n  var starting_row = [0, 0, 4, 0, 2, 0, 1];\n  var starting_col = [0, 4, 0, 2, 0, 1, 0];\n  var row_increment = [8, 8, 8, 4, 4, 2, 2];\n  var col_increment = [8, 8, 4, 4, 2, 2, 1];\n  var pass = 0;\n\n  while (pass < 7) {\n    var ri = row_increment[pass],\n        ci = col_increment[pass];\n    var sw = 0,\n        sh = 0;\n    var cr = starting_row[pass];\n\n    while (cr < h) {\n      cr += ri;\n      sh++;\n    }\n\n    var cc = starting_col[pass];\n\n    while (cc < w) {\n      cc += ci;\n      sw++;\n    }\n\n    var bpll = Math.ceil(sw * bpp / 8);\n\n    UPNG.decode._filterZero(data, out, di, sw, sh);\n\n    var y = 0,\n        row = starting_row[pass];\n\n    while (row < h) {\n      var col = starting_col[pass];\n      var cdi = di + y * bpll << 3;\n\n      while (col < w) {\n        if (bpp == 1) {\n          var val = data[cdi >> 3];\n          val = val >> 7 - (cdi & 7) & 1;\n          img[row * bpl + (col >> 3)] |= val << 7 - ((col & 7) << 0);\n        }\n\n        if (bpp == 2) {\n          var val = data[cdi >> 3];\n          val = val >> 6 - (cdi & 7) & 3;\n          img[row * bpl + (col >> 2)] |= val << 6 - ((col & 3) << 1);\n        }\n\n        if (bpp == 4) {\n          var val = data[cdi >> 3];\n          val = val >> 4 - (cdi & 7) & 15;\n          img[row * bpl + (col >> 1)] |= val << 4 - ((col & 1) << 2);\n        }\n\n        if (bpp >= 8) {\n          var ii = row * bpl + col * cbpp;\n\n          for (let j = 0; j < cbpp; j++) img[ii + j] = data[(cdi >> 3) + j];\n        }\n\n        cdi += bpp;\n        col += ci;\n      }\n\n      y++;\n      row += ri;\n    }\n\n    if (sw * sh != 0) di += sh * (1 + bpll);\n    pass = pass + 1;\n  }\n\n  return img;\n};\n\nUPNG.decode._getBPP = function (out) {\n  var noc = [1, null, 3, 1, 2, null, 4][out.ctype];\n  return noc * out.depth;\n};\n\nUPNG.decode._filterZero = function (data, out, off, w, h) {\n  var bpp = UPNG.decode._getBPP(out),\n      bpl = Math.ceil(w * bpp / 8),\n      paeth = UPNG.decode._paeth;\n\n  bpp = Math.ceil(bpp / 8);\n  var i = 0,\n      di = 1,\n      type = data[off],\n      x = 0;\n  if (type > 1) data[off] = [0, 0, 1][type - 2];\n  if (type == 3) for (x = bpp; x < bpl; x++) data[x + 1] = data[x + 1] + (data[x + 1 - bpp] >>> 1) & 255;\n\n  for (let y = 0; y < h; y++) {\n    i = off + y * bpl;\n    di = i + y + 1;\n    type = data[di - 1];\n    x = 0;\n    if (type == 0) for (; x < bpl; x++) data[i + x] = data[di + x];else if (type == 1) {\n      for (; x < bpp; x++) data[i + x] = data[di + x];\n\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpp];\n    } else if (type == 2) {\n      for (; x < bpl; x++) data[i + x] = data[di + x] + data[i + x - bpl];\n    } else if (type == 3) {\n      for (; x < bpp; x++) data[i + x] = data[di + x] + (data[i + x - bpl] >>> 1);\n\n      for (; x < bpl; x++) data[i + x] = data[di + x] + (data[i + x - bpl] + data[i + x - bpp] >>> 1);\n    } else {\n      for (; x < bpp; x++) data[i + x] = data[di + x] + paeth(0, data[i + x - bpl], 0);\n\n      for (; x < bpl; x++) data[i + x] = data[di + x] + paeth(data[i + x - bpp], data[i + x - bpl], data[i + x - bpp - bpl]);\n    }\n  }\n\n  return data;\n};\n\nUPNG.decode._paeth = function (a, b, c) {\n  var p = a + b - c,\n      pa = p - a,\n      pb = p - b,\n      pc = p - c;\n  if (pa * pa <= pb * pb && pa * pa <= pc * pc) return a;else if (pb * pb <= pc * pc) return b;\n  return c;\n};\n\nUPNG.decode._IHDR = function (data, offset, out) {\n  var bin = UPNG._bin;\n  out.width = bin.readUint(data, offset);\n  offset += 4;\n  out.height = bin.readUint(data, offset);\n  offset += 4;\n  out.depth = data[offset];\n  offset++;\n  out.ctype = data[offset];\n  offset++;\n  out.compress = data[offset];\n  offset++;\n  out.filter = data[offset];\n  offset++;\n  out.interlace = data[offset];\n  offset++;\n};\n\nUPNG._bin = {\n  nextZero: function (data, p) {\n    while (data[p] != 0) p++;\n\n    return p;\n  },\n  readUshort: function (buff, p) {\n    return buff[p] << 8 | buff[p + 1];\n  },\n  writeUshort: function (buff, p, n) {\n    buff[p] = n >> 8 & 255;\n    buff[p + 1] = n & 255;\n  },\n  readUint: function (buff, p) {\n    return buff[p] * (256 * 256 * 256) + (buff[p + 1] << 16 | buff[p + 2] << 8 | buff[p + 3]);\n  },\n  writeUint: function (buff, p, n) {\n    buff[p] = n >> 24 & 255;\n    buff[p + 1] = n >> 16 & 255;\n    buff[p + 2] = n >> 8 & 255;\n    buff[p + 3] = n & 255;\n  },\n  readASCII: function (buff, p, l) {\n    var s = '';\n\n    for (let i = 0; i < l; i++) s += String.fromCharCode(buff[p + i]);\n\n    return s;\n  },\n  writeASCII: function (data, p, s) {\n    for (let i = 0; i < s.length; i++) data[p + i] = s.charCodeAt(i);\n  },\n  readBytes: function (buff, p, l) {\n    var arr = [];\n\n    for (let i = 0; i < l; i++) arr.push(buff[p + i]);\n\n    return arr;\n  },\n  pad: function (n) {\n    return n.length < 2 ? '0' + n : n;\n  },\n  readUTF8: function (buff, p, l) {\n    var s = '',\n        ns;\n\n    for (let i = 0; i < l; i++) s += '%' + UPNG._bin.pad(buff[p + i].toString(16));\n\n    try {\n      ns = decodeURIComponent(s);\n    } catch (e) {\n      return UPNG._bin.readASCII(buff, p, l);\n    }\n\n    return ns;\n  }\n};\n\nUPNG._copyTile = function (sb, sw, sh, tb, tw, th, xoff, yoff, mode) {\n  var w = Math.min(sw, tw),\n      h = Math.min(sh, th);\n  var si = 0,\n      ti = 0;\n\n  for (let y = 0; y < h; y++) for (let x = 0; x < w; x++) {\n    if (xoff >= 0 && yoff >= 0) {\n      si = y * sw + x << 2;\n      ti = (yoff + y) * tw + xoff + x << 2;\n    } else {\n      si = (-yoff + y) * sw - xoff + x << 2;\n      ti = y * tw + x << 2;\n    }\n\n    if (mode == 0) {\n      tb[ti] = sb[si];\n      tb[ti + 1] = sb[si + 1];\n      tb[ti + 2] = sb[si + 2];\n      tb[ti + 3] = sb[si + 3];\n    } else if (mode == 1) {\n      var fa = sb[si + 3] * (1 / 255),\n          fr = sb[si] * fa,\n          fg = sb[si + 1] * fa,\n          fb = sb[si + 2] * fa;\n      var ba = tb[ti + 3] * (1 / 255),\n          br = tb[ti] * ba,\n          bg = tb[ti + 1] * ba,\n          bb = tb[ti + 2] * ba;\n      var ifa = 1 - fa,\n          oa = fa + ba * ifa,\n          ioa = oa == 0 ? 0 : 1 / oa;\n      tb[ti + 3] = 255 * oa;\n      tb[ti + 0] = (fr + br * ifa) * ioa;\n      tb[ti + 1] = (fg + bg * ifa) * ioa;\n      tb[ti + 2] = (fb + bb * ifa) * ioa;\n    } else if (mode == 2) {\n      // copy only differences, otherwise zero\n      var fa = sb[si + 3],\n          fr = sb[si],\n          fg = sb[si + 1],\n          fb = sb[si + 2];\n      var ba = tb[ti + 3],\n          br = tb[ti],\n          bg = tb[ti + 1],\n          bb = tb[ti + 2];\n\n      if (fa == ba && fr == br && fg == bg && fb == bb) {\n        tb[ti] = 0;\n        tb[ti + 1] = 0;\n        tb[ti + 2] = 0;\n        tb[ti + 3] = 0;\n      } else {\n        tb[ti] = fr;\n        tb[ti + 1] = fg;\n        tb[ti + 2] = fb;\n        tb[ti + 3] = fa;\n      }\n    } else if (mode == 3) {\n      // check if can be blended\n      var fa = sb[si + 3],\n          fr = sb[si],\n          fg = sb[si + 1],\n          fb = sb[si + 2];\n      var ba = tb[ti + 3],\n          br = tb[ti],\n          bg = tb[ti + 1],\n          bb = tb[ti + 2];\n      if (fa == ba && fr == br && fg == bg && fb == bb) continue; //if(fa!=255 && ba!=0) return false;\n\n      if (fa < 220 && ba > 20) return false;\n    }\n  }\n\n  return true;\n};\n\nexport { RGBMLoader };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}