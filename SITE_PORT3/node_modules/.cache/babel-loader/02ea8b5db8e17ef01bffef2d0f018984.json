{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Object3D, Raycaster, Vector3, Quaternion, Euler, Matrix4, Color, MeshBasicMaterial, DoubleSide, LineBasicMaterial, CylinderGeometry, BoxGeometry, BufferGeometry, Float32BufferAttribute, Mesh, Line, OctahedronGeometry, PlaneGeometry, TorusGeometry, SphereGeometry } from 'three';\nclass TransformControls extends Object3D {\n  // events\n  constructor(camera, domElement) {\n    super();\n    _defineProperty(this, \"isTransformControls\", true);\n    _defineProperty(this, \"visible\", false);\n    _defineProperty(this, \"domElement\", void 0);\n    _defineProperty(this, \"raycaster\", new Raycaster());\n    _defineProperty(this, \"gizmo\", void 0);\n    _defineProperty(this, \"plane\", void 0);\n    _defineProperty(this, \"tempVector\", new Vector3());\n    _defineProperty(this, \"tempVector2\", new Vector3());\n    _defineProperty(this, \"tempQuaternion\", new Quaternion());\n    _defineProperty(this, \"unit\", {\n      X: new Vector3(1, 0, 0),\n      Y: new Vector3(0, 1, 0),\n      Z: new Vector3(0, 0, 1)\n    });\n    _defineProperty(this, \"pointStart\", new Vector3());\n    _defineProperty(this, \"pointEnd\", new Vector3());\n    _defineProperty(this, \"offset\", new Vector3());\n    _defineProperty(this, \"rotationAxis\", new Vector3());\n    _defineProperty(this, \"startNorm\", new Vector3());\n    _defineProperty(this, \"endNorm\", new Vector3());\n    _defineProperty(this, \"rotationAngle\", 0);\n    _defineProperty(this, \"cameraPosition\", new Vector3());\n    _defineProperty(this, \"cameraQuaternion\", new Quaternion());\n    _defineProperty(this, \"cameraScale\", new Vector3());\n    _defineProperty(this, \"parentPosition\", new Vector3());\n    _defineProperty(this, \"parentQuaternion\", new Quaternion());\n    _defineProperty(this, \"parentQuaternionInv\", new Quaternion());\n    _defineProperty(this, \"parentScale\", new Vector3());\n    _defineProperty(this, \"worldPositionStart\", new Vector3());\n    _defineProperty(this, \"worldQuaternionStart\", new Quaternion());\n    _defineProperty(this, \"worldScaleStart\", new Vector3());\n    _defineProperty(this, \"worldPosition\", new Vector3());\n    _defineProperty(this, \"worldQuaternion\", new Quaternion());\n    _defineProperty(this, \"worldQuaternionInv\", new Quaternion());\n    _defineProperty(this, \"worldScale\", new Vector3());\n    _defineProperty(this, \"eye\", new Vector3());\n    _defineProperty(this, \"positionStart\", new Vector3());\n    _defineProperty(this, \"quaternionStart\", new Quaternion());\n    _defineProperty(this, \"scaleStart\", new Vector3());\n    _defineProperty(this, \"camera\", void 0);\n    _defineProperty(this, \"object\", void 0);\n    _defineProperty(this, \"enabled\", true);\n    _defineProperty(this, \"axis\", null);\n    _defineProperty(this, \"mode\", 'translate');\n    _defineProperty(this, \"translationSnap\", null);\n    _defineProperty(this, \"rotationSnap\", null);\n    _defineProperty(this, \"scaleSnap\", null);\n    _defineProperty(this, \"space\", 'world');\n    _defineProperty(this, \"size\", 1);\n    _defineProperty(this, \"dragging\", false);\n    _defineProperty(this, \"showX\", true);\n    _defineProperty(this, \"showY\", true);\n    _defineProperty(this, \"showZ\", true);\n    _defineProperty(this, \"changeEvent\", {\n      type: 'change'\n    });\n    _defineProperty(this, \"mouseDownEvent\", {\n      type: 'mouseDown'\n    });\n    _defineProperty(this, \"mouseUpEvent\", {\n      type: 'mouseUp',\n      mode: this.mode\n    });\n    _defineProperty(this, \"objectChangeEvent\", {\n      type: 'objectChange'\n    });\n    _defineProperty(this, \"intersectObjectWithRay\", (object, raycaster, includeInvisible) => {\n      const allIntersections = raycaster.intersectObject(object, true);\n      for (let i = 0; i < allIntersections.length; i++) {\n        if (allIntersections[i].object.visible || includeInvisible) {\n          return allIntersections[i];\n        }\n      }\n      return false;\n    });\n    _defineProperty(this, \"attach\", object => {\n      this.object = object;\n      this.visible = true;\n      return this;\n    });\n    _defineProperty(this, \"detach\", () => {\n      this.object = undefined;\n      this.visible = false;\n      this.axis = null;\n      return this;\n    });\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      if (this.object !== undefined) {\n        this.object.updateMatrixWorld();\n        if (this.object.parent === null) {\n          console.error('TransformControls: The attached 3D object must be a part of the scene graph.');\n        } else {\n          this.object.parent.matrixWorld.decompose(this.parentPosition, this.parentQuaternion, this.parentScale);\n        }\n        this.object.matrixWorld.decompose(this.worldPosition, this.worldQuaternion, this.worldScale);\n        this.parentQuaternionInv.copy(this.parentQuaternion).invert();\n        this.worldQuaternionInv.copy(this.worldQuaternion).invert();\n      }\n      this.camera.updateMatrixWorld();\n      this.camera.matrixWorld.decompose(this.cameraPosition, this.cameraQuaternion, this.cameraScale);\n      this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize();\n      super.updateMatrixWorld();\n    });\n    _defineProperty(this, \"pointerHover\", pointer => {\n      if (this.object === undefined || this.dragging === true) return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const intersect = this.intersectObjectWithRay(this.gizmo.picker[this.mode], this.raycaster);\n      if (intersect) {\n        this.axis = intersect.object.name;\n      } else {\n        this.axis = null;\n      }\n    });\n    _defineProperty(this, \"pointerDown\", pointer => {\n      if (this.object === undefined || this.dragging === true || pointer.button !== 0) return;\n      if (this.axis !== null) {\n        this.raycaster.setFromCamera(pointer, this.camera);\n        const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n        if (planeIntersect) {\n          let space = this.space;\n          if (this.mode === 'scale') {\n            space = 'local';\n          } else if (this.axis === 'E' || this.axis === 'XYZE' || this.axis === 'XYZ') {\n            space = 'world';\n          }\n          if (space === 'local' && this.mode === 'rotate') {\n            const snap = this.rotationSnap;\n            if (this.axis === 'X' && snap) this.object.rotation.x = Math.round(this.object.rotation.x / snap) * snap;\n            if (this.axis === 'Y' && snap) this.object.rotation.y = Math.round(this.object.rotation.y / snap) * snap;\n            if (this.axis === 'Z' && snap) this.object.rotation.z = Math.round(this.object.rotation.z / snap) * snap;\n          }\n          this.object.updateMatrixWorld();\n          if (this.object.parent) {\n            this.object.parent.updateMatrixWorld();\n          }\n          this.positionStart.copy(this.object.position);\n          this.quaternionStart.copy(this.object.quaternion);\n          this.scaleStart.copy(this.object.scale);\n          this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this.worldScaleStart);\n          this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart);\n        }\n        this.dragging = true;\n        this.mouseDownEvent.type = this.mode;\n        this.dispatchEvent(this.mouseDownEvent);\n      }\n    });\n    _defineProperty(this, \"pointerMove\", pointer => {\n      const axis = this.axis;\n      const mode = this.mode;\n      const object = this.object;\n      let space = this.space;\n      if (mode === 'scale') {\n        space = 'local';\n      } else if (axis === 'E' || axis === 'XYZE' || axis === 'XYZ') {\n        space = 'world';\n      }\n      if (object === undefined || axis === null || this.dragging === false || pointer.button !== -1) return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n      if (!planeIntersect) return;\n      this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart);\n      if (mode === 'translate') {\n        // Apply translate\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n        if (space === 'local' && axis !== 'XYZ') {\n          this.offset.applyQuaternion(this.worldQuaternionInv);\n        }\n        if (axis.indexOf('X') === -1) this.offset.x = 0;\n        if (axis.indexOf('Y') === -1) this.offset.y = 0;\n        if (axis.indexOf('Z') === -1) this.offset.z = 0;\n        if (space === 'local' && axis !== 'XYZ') {\n          this.offset.applyQuaternion(this.quaternionStart).divide(this.parentScale);\n        } else {\n          this.offset.applyQuaternion(this.parentQuaternionInv).divide(this.parentScale);\n        }\n        object.position.copy(this.offset).add(this.positionStart); // Apply translation snap\n\n        if (this.translationSnap) {\n          if (space === 'local') {\n            object.position.applyQuaternion(this.tempQuaternion.copy(this.quaternionStart).invert());\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n            object.position.applyQuaternion(this.quaternionStart);\n          }\n          if (space === 'world') {\n            if (object.parent) {\n              object.position.add(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n            if (object.parent) {\n              object.position.sub(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n          }\n        }\n      } else if (mode === 'scale') {\n        if (axis.search('XYZ') !== -1) {\n          let d = this.pointEnd.length() / this.pointStart.length();\n          if (this.pointEnd.dot(this.pointStart) < 0) d *= -1;\n          this.tempVector2.set(d, d, d);\n        } else {\n          this.tempVector.copy(this.pointStart);\n          this.tempVector2.copy(this.pointEnd);\n          this.tempVector.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.divide(this.tempVector);\n          if (axis.search('X') === -1) {\n            this.tempVector2.x = 1;\n          }\n          if (axis.search('Y') === -1) {\n            this.tempVector2.y = 1;\n          }\n          if (axis.search('Z') === -1) {\n            this.tempVector2.z = 1;\n          }\n        } // Apply scale\n\n        object.scale.copy(this.scaleStart).multiply(this.tempVector2);\n        if (this.scaleSnap && this.object) {\n          if (axis.search('X') !== -1) {\n            this.object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n          if (axis.search('Y') !== -1) {\n            object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n          if (axis.search('Z') !== -1) {\n            object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n        }\n      } else if (mode === 'rotate') {\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n        const ROTATION_SPEED = 20 / this.worldPosition.distanceTo(this.tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n        if (axis === 'E') {\n          this.rotationAxis.copy(this.eye);\n          this.rotationAngle = this.pointEnd.angleTo(this.pointStart);\n          this.startNorm.copy(this.pointStart).normalize();\n          this.endNorm.copy(this.pointEnd).normalize();\n          this.rotationAngle *= this.endNorm.cross(this.startNorm).dot(this.eye) < 0 ? 1 : -1;\n        } else if (axis === 'XYZE') {\n          this.rotationAxis.copy(this.offset).cross(this.eye).normalize();\n          this.rotationAngle = this.offset.dot(this.tempVector.copy(this.rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n        } else if (axis === 'X' || axis === 'Y' || axis === 'Z') {\n          this.rotationAxis.copy(this.unit[axis]);\n          this.tempVector.copy(this.unit[axis]);\n          if (space === 'local') {\n            this.tempVector.applyQuaternion(this.worldQuaternion);\n          }\n          this.rotationAngle = this.offset.dot(this.tempVector.cross(this.eye).normalize()) * ROTATION_SPEED;\n        } // Apply rotation snap\n\n        if (this.rotationSnap) {\n          this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap;\n        } // Apply rotate\n\n        if (space === 'local' && axis !== 'E' && axis !== 'XYZE') {\n          object.quaternion.copy(this.quaternionStart);\n          object.quaternion.multiply(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize();\n        } else {\n          this.rotationAxis.applyQuaternion(this.parentQuaternionInv);\n          object.quaternion.copy(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle));\n          object.quaternion.multiply(this.quaternionStart).normalize();\n        }\n      }\n      this.dispatchEvent(this.changeEvent);\n      this.dispatchEvent(this.objectChangeEvent);\n    });\n    _defineProperty(this, \"pointerUp\", pointer => {\n      if (pointer.button !== 0) return;\n      if (this.dragging && this.axis !== null) {\n        this.mouseUpEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseUpEvent);\n      }\n      this.dragging = false;\n      this.axis = null;\n    });\n    _defineProperty(this, \"getPointer\", event => {\n      var _this$domElement$owne;\n      if (this.domElement && (_this$domElement$owne = this.domElement.ownerDocument) !== null && _this$domElement$owne !== void 0 && _this$domElement$owne.pointerLockElement) {\n        return {\n          x: 0,\n          y: 0,\n          button: event.button\n        };\n      } else {\n        var _this$domElement;\n        const pointer = event.changedTouches ? event.changedTouches[0] : event;\n        const rect = (_this$domElement = this.domElement) === null || _this$domElement === void 0 ? void 0 : _this$domElement.getBoundingClientRect();\n        return {\n          x: (pointer.clientX - rect.left) / rect.width * 2 - 1,\n          y: -(pointer.clientY - rect.top) / rect.height * 2 + 1,\n          button: event.button\n        };\n      }\n    });\n    _defineProperty(this, \"onPointerHover\", event => {\n      if (!this.enabled) return;\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          this.pointerHover(this.getPointer(event));\n          break;\n      }\n    });\n    _defineProperty(this, \"onPointerDown\", event => {\n      var _this$domElement$owne2;\n      if (!this.enabled) return;\n      this.domElement.style.touchAction = 'none'; // disable touch scroll\n\n      (_this$domElement$owne2 = this.domElement.ownerDocument) === null || _this$domElement$owne2 === void 0 ? void 0 : _this$domElement$owne2.addEventListener('pointermove', this.onPointerMove);\n      this.pointerHover(this.getPointer(event));\n      this.pointerDown(this.getPointer(event));\n    });\n    _defineProperty(this, \"onPointerMove\", event => {\n      if (!this.enabled) return;\n      this.pointerMove(this.getPointer(event));\n    });\n    _defineProperty(this, \"onPointerUp\", event => {\n      var _this$domElement$owne3;\n      if (!this.enabled) return;\n      this.domElement.style.touchAction = '';\n      (_this$domElement$owne3 = this.domElement.ownerDocument) === null || _this$domElement$owne3 === void 0 ? void 0 : _this$domElement$owne3.removeEventListener('pointermove', this.onPointerMove);\n      this.pointerUp(this.getPointer(event));\n    });\n    _defineProperty(this, \"getMode\", () => this.mode);\n    _defineProperty(this, \"setMode\", mode => {\n      this.mode = mode;\n    });\n    _defineProperty(this, \"setTranslationSnap\", translationSnap => {\n      this.translationSnap = translationSnap;\n    });\n    _defineProperty(this, \"setRotationSnap\", rotationSnap => {\n      this.rotationSnap = rotationSnap;\n    });\n    _defineProperty(this, \"setScaleSnap\", scaleSnap => {\n      this.scaleSnap = scaleSnap;\n    });\n    _defineProperty(this, \"setSize\", size => {\n      this.size = size;\n    });\n    _defineProperty(this, \"setSpace\", space => {\n      this.space = space;\n    });\n    _defineProperty(this, \"update\", () => {\n      console.warn('THREE.TransformControls: update function has no more functionality and therefore has been deprecated.');\n    });\n    _defineProperty(this, \"dispose\", () => {\n      var _this$domElement$owne4, _this$domElement$owne5;\n      this.domElement.removeEventListener('pointerdown', this.onPointerDown);\n      this.domElement.removeEventListener('pointermove', this.onPointerHover);\n      (_this$domElement$owne4 = this.domElement.ownerDocument) === null || _this$domElement$owne4 === void 0 ? void 0 : _this$domElement$owne4.removeEventListener('pointermove', this.onPointerMove);\n      (_this$domElement$owne5 = this.domElement.ownerDocument) === null || _this$domElement$owne5 === void 0 ? void 0 : _this$domElement$owne5.removeEventListener('pointerup', this.onPointerUp);\n      this.traverse(child => {\n        const mesh = child;\n        if (mesh.geometry) {\n          mesh.geometry.dispose();\n        }\n        if (mesh.material) {\n          mesh.material.dispose();\n        }\n      });\n    });\n    if (domElement === undefined) {\n      console.warn('THREE.TransformControls: The second parameter \"domElement\" is now mandatory.');\n      this.domElement = document;\n    }\n    this.domElement = domElement;\n    this.camera = camera;\n    this.gizmo = new TransformControlsGizmo();\n    this.add(this.gizmo);\n    this.plane = new TransformControlsPlane();\n    this.add(this.plane); // Defined getter, setter and store for a property\n\n    const defineProperty = (propName, defaultValue) => {\n      let propValue = defaultValue;\n      Object.defineProperty(this, propName, {\n        get: function () {\n          return propValue !== undefined ? propValue : defaultValue;\n        },\n        set: function (value) {\n          if (propValue !== value) {\n            propValue = value;\n            this.plane[propName] = value;\n            this.gizmo[propName] = value;\n            this.dispatchEvent({\n              type: propName + '-changed',\n              value: value\n            });\n            this.dispatchEvent(this.changeEvent);\n          }\n        }\n      }); //@ts-ignore\n\n      this[propName] = defaultValue; // @ts-ignore\n\n      this.plane[propName] = defaultValue; // @ts-ignore\n\n      this.gizmo[propName] = defaultValue;\n    };\n    defineProperty('camera', this.camera);\n    defineProperty('object', this.object);\n    defineProperty('enabled', this.enabled);\n    defineProperty('axis', this.axis);\n    defineProperty('mode', this.mode);\n    defineProperty('translationSnap', this.translationSnap);\n    defineProperty('rotationSnap', this.rotationSnap);\n    defineProperty('scaleSnap', this.scaleSnap);\n    defineProperty('space', this.space);\n    defineProperty('size', this.size);\n    defineProperty('dragging', this.dragging);\n    defineProperty('showX', this.showX);\n    defineProperty('showY', this.showY);\n    defineProperty('showZ', this.showZ);\n    defineProperty('worldPosition', this.worldPosition);\n    defineProperty('worldPositionStart', this.worldPositionStart);\n    defineProperty('worldQuaternion', this.worldQuaternion);\n    defineProperty('worldQuaternionStart', this.worldQuaternionStart);\n    defineProperty('cameraPosition', this.cameraPosition);\n    defineProperty('cameraQuaternion', this.cameraQuaternion);\n    defineProperty('pointStart', this.pointStart);\n    defineProperty('pointEnd', this.pointEnd);\n    defineProperty('rotationAxis', this.rotationAxis);\n    defineProperty('rotationAngle', this.rotationAngle);\n    defineProperty('eye', this.eye);\n    {\n      domElement.addEventListener('pointerdown', this.onPointerDown);\n      domElement.addEventListener('pointermove', this.onPointerHover);\n      this.domElement.ownerDocument.addEventListener('pointerup', this.onPointerUp);\n    }\n  }\n}\nclass TransformControlsGizmo extends Object3D {\n  // these are set from parent class TransformControls\n  constructor() {\n    super();\n    _defineProperty(this, \"isTransformControlsGizmo\", true);\n    _defineProperty(this, \"type\", 'TransformControlsGizmo');\n    _defineProperty(this, \"tempVector\", new Vector3(0, 0, 0));\n    _defineProperty(this, \"tempEuler\", new Euler());\n    _defineProperty(this, \"alignVector\", new Vector3(0, 1, 0));\n    _defineProperty(this, \"zeroVector\", new Vector3(0, 0, 0));\n    _defineProperty(this, \"lookAtMatrix\", new Matrix4());\n    _defineProperty(this, \"tempQuaternion\", new Quaternion());\n    _defineProperty(this, \"tempQuaternion2\", new Quaternion());\n    _defineProperty(this, \"identityQuaternion\", new Quaternion());\n    _defineProperty(this, \"unitX\", new Vector3(1, 0, 0));\n    _defineProperty(this, \"unitY\", new Vector3(0, 1, 0));\n    _defineProperty(this, \"unitZ\", new Vector3(0, 0, 1));\n    _defineProperty(this, \"gizmo\", void 0);\n    _defineProperty(this, \"picker\", void 0);\n    _defineProperty(this, \"helper\", void 0);\n    _defineProperty(this, \"rotationAxis\", new Vector3());\n    _defineProperty(this, \"cameraPosition\", new Vector3());\n    _defineProperty(this, \"worldPositionStart\", new Vector3());\n    _defineProperty(this, \"worldQuaternionStart\", new Quaternion());\n    _defineProperty(this, \"worldPosition\", new Vector3());\n    _defineProperty(this, \"worldQuaternion\", new Quaternion());\n    _defineProperty(this, \"eye\", new Vector3());\n    _defineProperty(this, \"camera\", null);\n    _defineProperty(this, \"enabled\", true);\n    _defineProperty(this, \"axis\", null);\n    _defineProperty(this, \"mode\", 'translate');\n    _defineProperty(this, \"space\", 'world');\n    _defineProperty(this, \"size\", 1);\n    _defineProperty(this, \"dragging\", false);\n    _defineProperty(this, \"showX\", true);\n    _defineProperty(this, \"showY\", true);\n    _defineProperty(this, \"showZ\", true);\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n      if (this.mode === 'scale') {\n        space = 'local'; // scale always oriented to local rotation\n      }\n      const quaternion = space === 'local' ? this.worldQuaternion : this.identityQuaternion; // Show only gizmos for current transform mode\n\n      this.gizmo['translate'].visible = this.mode === 'translate';\n      this.gizmo['rotate'].visible = this.mode === 'rotate';\n      this.gizmo['scale'].visible = this.mode === 'scale';\n      this.helper['translate'].visible = this.mode === 'translate';\n      this.helper['rotate'].visible = this.mode === 'rotate';\n      this.helper['scale'].visible = this.mode === 'scale';\n      let handles = [];\n      handles = handles.concat(this.picker[this.mode].children);\n      handles = handles.concat(this.gizmo[this.mode].children);\n      handles = handles.concat(this.helper[this.mode].children);\n      for (let i = 0; i < handles.length; i++) {\n        const handle = handles[i]; // hide aligned to camera\n\n        handle.visible = true;\n        handle.rotation.set(0, 0, 0);\n        handle.position.copy(this.worldPosition);\n        let factor;\n        if (this.camera.isOrthographicCamera) {\n          factor = (this.camera.top - this.camera.bottom) / this.camera.zoom;\n        } else {\n          factor = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7);\n        }\n        handle.scale.set(1, 1, 1).multiplyScalar(factor * this.size / 7); // TODO: simplify helpers and consider decoupling from gizmo\n\n        if (handle.tag === 'helper') {\n          handle.visible = false;\n          if (handle.name === 'AXIS') {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = !!this.axis;\n            if (this.axis === 'X') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === 'Y') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, Math.PI / 2));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === 'Z') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n              if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n            if (this.axis === 'XYZE') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              this.alignVector.copy(this.rotationAxis);\n              handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.zeroVector, this.alignVector, this.unitY));\n              handle.quaternion.multiply(this.tempQuaternion);\n              handle.visible = this.dragging;\n            }\n            if (this.axis === 'E') {\n              handle.visible = false;\n            }\n          } else if (handle.name === 'START') {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = this.dragging;\n          } else if (handle.name === 'END') {\n            handle.position.copy(this.worldPosition);\n            handle.visible = this.dragging;\n          } else if (handle.name === 'DELTA') {\n            handle.position.copy(this.worldPositionStart);\n            handle.quaternion.copy(this.worldQuaternionStart);\n            this.tempVector.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1);\n            this.tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert());\n            handle.scale.copy(this.tempVector);\n            handle.visible = this.dragging;\n          } else {\n            handle.quaternion.copy(quaternion);\n            if (this.dragging) {\n              handle.position.copy(this.worldPositionStart);\n            } else {\n              handle.position.copy(this.worldPosition);\n            }\n            if (this.axis) {\n              handle.visible = this.axis.search(handle.name) !== -1;\n            }\n          } // If updating helper, skip rest of the loop\n\n          continue;\n        } // Align handles to current local or world rotation\n\n        handle.quaternion.copy(quaternion);\n        if (this.mode === 'translate' || this.mode === 'scale') {\n          // Hide translate and scale axis facing the camera\n          const AXIS_HIDE_TRESHOLD = 0.99;\n          const PLANE_HIDE_TRESHOLD = 0.2;\n          const AXIS_FLIP_TRESHOLD = 0.0;\n          if (handle.name === 'X' || handle.name === 'XYZX') {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === 'Y' || handle.name === 'XYZY') {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === 'Z' || handle.name === 'XYZZ') {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === 'XY') {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === 'YZ') {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n          if (handle.name === 'XZ') {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          } // Flip translate and scale axis ocluded behind another axis\n\n          if (handle.name.search('X') !== -1) {\n            if (this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.x *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search('Y') !== -1) {\n            if (this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.y *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n          if (handle.name.search('Z') !== -1) {\n            if (this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.z *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n        } else if (this.mode === 'rotate') {\n          // Align handles to current local or world rotation\n          this.tempQuaternion2.copy(quaternion);\n          this.alignVector.copy(this.eye).applyQuaternion(this.tempQuaternion.copy(quaternion).invert());\n          if (handle.name.search('E') !== -1) {\n            handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.eye, this.zeroVector, this.unitY));\n          }\n          if (handle.name === 'X') {\n            this.tempQuaternion.setFromAxisAngle(this.unitX, Math.atan2(-this.alignVector.y, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n          if (handle.name === 'Y') {\n            this.tempQuaternion.setFromAxisAngle(this.unitY, Math.atan2(this.alignVector.x, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n          if (handle.name === 'Z') {\n            this.tempQuaternion.setFromAxisAngle(this.unitZ, Math.atan2(this.alignVector.y, this.alignVector.x));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n        } // Hide disabled axes\n\n        handle.visible = handle.visible && (handle.name.indexOf('X') === -1 || this.showX);\n        handle.visible = handle.visible && (handle.name.indexOf('Y') === -1 || this.showY);\n        handle.visible = handle.visible && (handle.name.indexOf('Z') === -1 || this.showZ);\n        handle.visible = handle.visible && (handle.name.indexOf('E') === -1 || this.showX && this.showY && this.showZ); // highlight selected axis\n        //@ts-ignore\n\n        handle.material.opacity = handle.material.opacity || handle.material.opacity; //@ts-ignore\n\n        handle.material.color = handle.material.color || handle.material.color.clone(); //@ts-ignore\n\n        handle.material.color.copy(handle.material.color); //@ts-ignore\n\n        handle.material.opacity = handle.material.opacity;\n        if (!this.enabled) {\n          //@ts-ignore\n          handle.material.opacity *= 0.5; //@ts-ignore\n\n          handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n        } else if (this.axis) {\n          if (handle.name === this.axis) {\n            //@ts-ignore\n            handle.material.opacity = 1.0; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else if (this.axis.split('').some(function (a) {\n            return handle.name === a;\n          })) {\n            //@ts-ignore\n            handle.material.opacity = 1.0; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else {\n            //@ts-ignore\n            handle.material.opacity *= 0.25; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          }\n        }\n      }\n      super.updateMatrixWorld();\n    });\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      side: DoubleSide,\n      fog: false,\n      toneMapped: false\n    });\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      linewidth: 1,\n      fog: false,\n      toneMapped: false\n    }); // Make unique material for each axis/color\n\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoMaterial.clone();\n    matHelper.opacity = 0.33;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.set(0xff0000);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.set(0x00ff00);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.set(0x0000ff);\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = matWhiteTransparent.clone();\n    matYellowTransparent.color.set(0xffff00);\n    const matCyanTransparent = matWhiteTransparent.clone();\n    matCyanTransparent.color.set(0x00ffff);\n    const matMagentaTransparent = matWhiteTransparent.clone();\n    matMagentaTransparent.color.set(0xff00ff);\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.set(0xffff00);\n    const matLineRed = gizmoLineMaterial.clone();\n    matLineRed.color.set(0xff0000);\n    const matLineGreen = gizmoLineMaterial.clone();\n    matLineGreen.color.set(0x00ff00);\n    const matLineBlue = gizmoLineMaterial.clone();\n    matLineBlue.color.set(0x0000ff);\n    const matLineCyan = gizmoLineMaterial.clone();\n    matLineCyan.color.set(0x00ffff);\n    const matLineMagenta = gizmoLineMaterial.clone();\n    matLineMagenta.color.set(0xff00ff);\n    const matLineYellow = gizmoLineMaterial.clone();\n    matLineYellow.color.set(0xffff00);\n    const matLineGray = gizmoLineMaterial.clone();\n    matLineGray.color.set(0x787878);\n    const matLineYellowTransparent = matLineYellow.clone();\n    matLineYellowTransparent.opacity = 0.25; // reusable geometry\n\n    const arrowGeometry = new CylinderGeometry(0, 0.05, 0.2, 12, 1, false);\n    const scaleHandleGeometry = new BoxGeometry(0.125, 0.125, 0.125);\n    const lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n    const CircleGeometry = (radius, arc) => {\n      const geometry = new BufferGeometry();\n      const vertices = [];\n      for (let i = 0; i <= 64 * arc; ++i) {\n        vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n      }\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      return geometry;\n    }; // Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n    const TranslateHelperGeometry = () => {\n      const geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    }; // Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n    const gizmoTranslate = {\n      X: [[new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, -Math.PI / 2], null, 'fwd'], [new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, Math.PI / 2], null, 'bwd'], [new Line(lineGeometry, matLineRed)]],\n      Y: [[new Mesh(arrowGeometry, matGreen), [0, 1, 0], null, null, 'fwd'], [new Mesh(arrowGeometry, matGreen), [0, 1, 0], [Math.PI, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2]]],\n      Z: [[new Mesh(arrowGeometry, matBlue), [0, 0, 1], [Math.PI / 2, 0, 0], null, 'fwd'], [new Mesh(arrowGeometry, matBlue), [0, 0, 1], [-Math.PI / 2, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0], [0, 0, 0]]],\n      XY: [[new Mesh(new PlaneGeometry(0.295, 0.295), matYellowTransparent.clone()), [0.15, 0.15, 0]], [new Line(lineGeometry, matLineYellow), [0.18, 0.3, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.3, 0.18, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matCyanTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]], [new Line(lineGeometry, matLineCyan), [0, 0.18, 0.3], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.3, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matMagentaTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineMagenta), [0.18, 0, 0.3], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.3, 0, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]]\n    };\n    const pickerTranslate = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0.6, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0.2, 0]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n    };\n    const helperTranslate = {\n      START: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      END: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, 'helper']],\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    };\n    const gizmoRotate = {\n      X: [[new Line(CircleGeometry(1, 0.5), matLineRed)], [new Mesh(new OctahedronGeometry(0.04, 0), matRed), [0, 0, 0.99], null, [1, 3, 1]]],\n      Y: [[new Line(CircleGeometry(1, 0.5), matLineGreen), null, [0, 0, -Math.PI / 2]], [new Mesh(new OctahedronGeometry(0.04, 0), matGreen), [0, 0, 0.99], null, [3, 1, 1]]],\n      Z: [[new Line(CircleGeometry(1, 0.5), matLineBlue), null, [0, Math.PI / 2, 0]], [new Mesh(new OctahedronGeometry(0.04, 0), matBlue), [0.99, 0, 0], null, [1, 3, 1]]],\n      E: [[new Line(CircleGeometry(1.25, 1), matLineYellowTransparent), null, [0, Math.PI / 2, 0]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [1.17, 0, 0], [0, 0, -Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [-1.17, 0, 0], [0, 0, Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, -1.17, 0], [Math.PI, 0, 0], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, 1.17, 0], [0, 0, 0], [1, 1, 0.001]]],\n      XYZE: [[new Line(CircleGeometry(1, 1), matLineGray), null, [0, Math.PI / 2, 0]]]\n    };\n    const helperRotate = {\n      AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']]\n    };\n    const pickerRotate = {\n      X: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new Mesh(new TorusGeometry(1.25, 0.1, 2, 24), matInvisible)]],\n      XYZE: [[new Mesh(new SphereGeometry(0.7, 10, 8), matInvisible)]]\n    };\n    const gizmoScale = {\n      X: [[new Mesh(scaleHandleGeometry, matRed), [0.8, 0, 0], [0, 0, -Math.PI / 2]], [new Line(lineGeometry, matLineRed), null, null, [0.8, 1, 1]]],\n      Y: [[new Mesh(scaleHandleGeometry, matGreen), [0, 0.8, 0]], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2], [0.8, 1, 1]]],\n      Z: [[new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.8], [Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0], [0.8, 1, 1]]],\n      XY: [[new Mesh(scaleHandleGeometry, matYellowTransparent), [0.85, 0.85, 0], null, [2, 2, 0.2]], [new Line(lineGeometry, matLineYellow), [0.855, 0.98, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.98, 0.855, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matCyanTransparent), [0, 0.85, 0.85], null, [0.2, 2, 2]], [new Line(lineGeometry, matLineCyan), [0, 0.855, 0.98], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.98, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matMagentaTransparent), [0.85, 0, 0.85], null, [2, 0.2, 2]], [new Line(lineGeometry, matLineMagenta), [0.855, 0, 0.98], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.98, 0, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 0, 1.1]]]\n    };\n    const pickerScale = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0.5, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0.5, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0, 0.5], [Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0.85, 0], null, [3, 3, 0.2]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0, 0.85, 0.85], null, [0.2, 3, 3]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0, 0.85], null, [3, 0.2, 3]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 1.1]]]\n    };\n    const helperScale = {\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    }; // Creates an Object3D with gizmos described in custom hierarchy definition.\n    // this is nearly impossible to Type so i'm leaving it\n\n    const setupGizmo = gizmoMap => {\n      const gizmo = new Object3D();\n      for (let name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--;) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4]; // name and tag properties are essential for picking and updating logic.\n\n          object.name = name; // @ts-ignore\n\n          object.tag = tag;\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n      return gizmo;\n    };\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo['translate'] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo['rotate'] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo['scale'] = setupGizmo(gizmoScale));\n    this.add(this.picker['translate'] = setupGizmo(pickerTranslate));\n    this.add(this.picker['rotate'] = setupGizmo(pickerRotate));\n    this.add(this.picker['scale'] = setupGizmo(pickerScale));\n    this.add(this.helper['translate'] = setupGizmo(helperTranslate));\n    this.add(this.helper['rotate'] = setupGizmo(helperRotate));\n    this.add(this.helper['scale'] = setupGizmo(helperScale)); // Pickers should be hidden always\n\n    this.picker['translate'].visible = false;\n    this.picker['rotate'].visible = false;\n    this.picker['scale'].visible = false;\n  } // updateMatrixWorld will update transformations and appearance of individual handles\n}\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(new PlaneGeometry(100000, 100000, 2, 2), new MeshBasicMaterial({\n      visible: false,\n      wireframe: true,\n      side: DoubleSide,\n      transparent: true,\n      opacity: 0.1,\n      toneMapped: false\n    }));\n    _defineProperty(this, \"isTransformControlsPlane\", true);\n    _defineProperty(this, \"type\", 'TransformControlsPlane');\n    _defineProperty(this, \"unitX\", new Vector3(1, 0, 0));\n    _defineProperty(this, \"unitY\", new Vector3(0, 1, 0));\n    _defineProperty(this, \"unitZ\", new Vector3(0, 0, 1));\n    _defineProperty(this, \"tempVector\", new Vector3());\n    _defineProperty(this, \"dirVector\", new Vector3());\n    _defineProperty(this, \"alignVector\", new Vector3());\n    _defineProperty(this, \"tempMatrix\", new Matrix4());\n    _defineProperty(this, \"identityQuaternion\", new Quaternion());\n    _defineProperty(this, \"cameraQuaternion\", new Quaternion());\n    _defineProperty(this, \"worldPosition\", new Vector3());\n    _defineProperty(this, \"worldQuaternion\", new Quaternion());\n    _defineProperty(this, \"eye\", new Vector3());\n    _defineProperty(this, \"axis\", null);\n    _defineProperty(this, \"mode\", 'translate');\n    _defineProperty(this, \"space\", 'world');\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n      this.position.copy(this.worldPosition);\n      if (this.mode === 'scale') space = 'local'; // scale always oriented to local rotation\n\n      this.unitX.set(1, 0, 0).applyQuaternion(space === 'local' ? this.worldQuaternion : this.identityQuaternion);\n      this.unitY.set(0, 1, 0).applyQuaternion(space === 'local' ? this.worldQuaternion : this.identityQuaternion);\n      this.unitZ.set(0, 0, 1).applyQuaternion(space === 'local' ? this.worldQuaternion : this.identityQuaternion); // Align the plane for current transform mode, axis and space.\n\n      this.alignVector.copy(this.unitY);\n      switch (this.mode) {\n        case 'translate':\n        case 'scale':\n          switch (this.axis) {\n            case 'X':\n              this.alignVector.copy(this.eye).cross(this.unitX);\n              this.dirVector.copy(this.unitX).cross(this.alignVector);\n              break;\n            case 'Y':\n              this.alignVector.copy(this.eye).cross(this.unitY);\n              this.dirVector.copy(this.unitY).cross(this.alignVector);\n              break;\n            case 'Z':\n              this.alignVector.copy(this.eye).cross(this.unitZ);\n              this.dirVector.copy(this.unitZ).cross(this.alignVector);\n              break;\n            case 'XY':\n              this.dirVector.copy(this.unitZ);\n              break;\n            case 'YZ':\n              this.dirVector.copy(this.unitX);\n              break;\n            case 'XZ':\n              this.alignVector.copy(this.unitZ);\n              this.dirVector.copy(this.unitY);\n              break;\n            case 'XYZ':\n            case 'E':\n              this.dirVector.set(0, 0, 0);\n              break;\n          }\n          break;\n        case 'rotate':\n        default:\n          // special case for rotate\n          this.dirVector.set(0, 0, 0);\n      }\n      if (this.dirVector.length() === 0) {\n        // If in rotate mode, make the plane parallel to camera\n        this.quaternion.copy(this.cameraQuaternion);\n      } else {\n        this.tempMatrix.lookAt(this.tempVector.set(0, 0, 0), this.dirVector, this.alignVector);\n        this.quaternion.setFromRotationMatrix(this.tempMatrix);\n      }\n      super.updateMatrixWorld();\n    });\n  }\n}\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };","map":{"version":3,"names":["_defineProperty","Object3D","Raycaster","Vector3","Quaternion","Euler","Matrix4","Color","MeshBasicMaterial","DoubleSide","LineBasicMaterial","CylinderGeometry","BoxGeometry","BufferGeometry","Float32BufferAttribute","Mesh","Line","OctahedronGeometry","PlaneGeometry","TorusGeometry","SphereGeometry","TransformControls","constructor","camera","domElement","X","Y","Z","type","mode","object","raycaster","includeInvisible","allIntersections","intersectObject","i","length","visible","undefined","axis","updateMatrixWorld","parent","console","error","matrixWorld","decompose","parentPosition","parentQuaternion","parentScale","worldPosition","worldQuaternion","worldScale","parentQuaternionInv","copy","invert","worldQuaternionInv","cameraPosition","cameraQuaternion","cameraScale","eye","sub","normalize","pointer","dragging","setFromCamera","intersect","intersectObjectWithRay","gizmo","picker","name","button","planeIntersect","plane","space","snap","rotationSnap","rotation","x","Math","round","y","z","positionStart","position","quaternionStart","quaternion","scaleStart","scale","worldPositionStart","worldQuaternionStart","worldScaleStart","pointStart","point","mouseDownEvent","dispatchEvent","pointEnd","offset","applyQuaternion","indexOf","divide","add","translationSnap","tempQuaternion","search","tempVector","setFromMatrixPosition","d","dot","tempVector2","set","multiply","scaleSnap","ROTATION_SPEED","distanceTo","rotationAxis","rotationAngle","angleTo","startNorm","endNorm","cross","unit","setFromAxisAngle","changeEvent","objectChangeEvent","mouseUpEvent","event","_this$domElement$owne","ownerDocument","pointerLockElement","_this$domElement","changedTouches","rect","getBoundingClientRect","clientX","left","width","clientY","top","height","enabled","pointerType","pointerHover","getPointer","_this$domElement$owne2","style","touchAction","addEventListener","onPointerMove","pointerDown","pointerMove","_this$domElement$owne3","removeEventListener","pointerUp","size","warn","_this$domElement$owne4","_this$domElement$owne5","onPointerDown","onPointerHover","onPointerUp","traverse","child","mesh","geometry","dispose","material","document","TransformControlsGizmo","TransformControlsPlane","defineProperty","propName","defaultValue","propValue","Object","get","value","showX","showY","showZ","identityQuaternion","helper","handles","concat","children","handle","factor","isOrthographicCamera","bottom","zoom","min","tan","PI","fov","multiplyScalar","tag","setFromEuler","tempEuler","abs","alignVector","unitX","unitY","unitZ","setFromRotationMatrix","lookAtMatrix","lookAt","zeroVector","clone","AXIS_HIDE_TRESHOLD","PLANE_HIDE_TRESHOLD","AXIS_FLIP_TRESHOLD","tempQuaternion2","atan2","multiplyQuaternions","opacity","color","lerp","split","some","a","gizmoMaterial","depthTest","depthWrite","transparent","side","fog","toneMapped","gizmoLineMaterial","linewidth","matInvisible","matHelper","matRed","matGreen","matBlue","matWhiteTransparent","matYellowTransparent","matCyanTransparent","matMagentaTransparent","matYellow","matLineRed","matLineGreen","matLineBlue","matLineCyan","matLineMagenta","matLineYellow","matLineGray","matLineYellowTransparent","arrowGeometry","scaleHandleGeometry","lineGeometry","setAttribute","CircleGeometry","radius","arc","vertices","push","cos","sin","TranslateHelperGeometry","gizmoTranslate","XYZ","XY","YZ","XZ","pickerTranslate","helperTranslate","START","END","DELTA","gizmoRotate","E","XYZE","helperRotate","AXIS","pickerRotate","gizmoScale","XYZX","XYZY","XYZZ","pickerScale","helperScale","setupGizmo","gizmoMap","updateMatrix","tempGeometry","applyMatrix4","matrix","renderOrder","Infinity","wireframe","dirVector","tempMatrix"],"sources":["C:/Users/drncs/OneDrive/Área de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/controls/TransformControls.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { Object3D, Raycaster, Vector3, Quaternion, Euler, Matrix4, Color, MeshBasicMaterial, DoubleSide, LineBasicMaterial, CylinderGeometry, BoxGeometry, BufferGeometry, Float32BufferAttribute, Mesh, Line, OctahedronGeometry, PlaneGeometry, TorusGeometry, SphereGeometry } from 'three';\n\nclass TransformControls extends Object3D {\n  // events\n  constructor(camera, domElement) {\n    super();\n\n    _defineProperty(this, \"isTransformControls\", true);\n\n    _defineProperty(this, \"visible\", false);\n\n    _defineProperty(this, \"domElement\", void 0);\n\n    _defineProperty(this, \"raycaster\", new Raycaster());\n\n    _defineProperty(this, \"gizmo\", void 0);\n\n    _defineProperty(this, \"plane\", void 0);\n\n    _defineProperty(this, \"tempVector\", new Vector3());\n\n    _defineProperty(this, \"tempVector2\", new Vector3());\n\n    _defineProperty(this, \"tempQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"unit\", {\n      X: new Vector3(1, 0, 0),\n      Y: new Vector3(0, 1, 0),\n      Z: new Vector3(0, 0, 1)\n    });\n\n    _defineProperty(this, \"pointStart\", new Vector3());\n\n    _defineProperty(this, \"pointEnd\", new Vector3());\n\n    _defineProperty(this, \"offset\", new Vector3());\n\n    _defineProperty(this, \"rotationAxis\", new Vector3());\n\n    _defineProperty(this, \"startNorm\", new Vector3());\n\n    _defineProperty(this, \"endNorm\", new Vector3());\n\n    _defineProperty(this, \"rotationAngle\", 0);\n\n    _defineProperty(this, \"cameraPosition\", new Vector3());\n\n    _defineProperty(this, \"cameraQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"cameraScale\", new Vector3());\n\n    _defineProperty(this, \"parentPosition\", new Vector3());\n\n    _defineProperty(this, \"parentQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"parentQuaternionInv\", new Quaternion());\n\n    _defineProperty(this, \"parentScale\", new Vector3());\n\n    _defineProperty(this, \"worldPositionStart\", new Vector3());\n\n    _defineProperty(this, \"worldQuaternionStart\", new Quaternion());\n\n    _defineProperty(this, \"worldScaleStart\", new Vector3());\n\n    _defineProperty(this, \"worldPosition\", new Vector3());\n\n    _defineProperty(this, \"worldQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"worldQuaternionInv\", new Quaternion());\n\n    _defineProperty(this, \"worldScale\", new Vector3());\n\n    _defineProperty(this, \"eye\", new Vector3());\n\n    _defineProperty(this, \"positionStart\", new Vector3());\n\n    _defineProperty(this, \"quaternionStart\", new Quaternion());\n\n    _defineProperty(this, \"scaleStart\", new Vector3());\n\n    _defineProperty(this, \"camera\", void 0);\n\n    _defineProperty(this, \"object\", void 0);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"axis\", null);\n\n    _defineProperty(this, \"mode\", 'translate');\n\n    _defineProperty(this, \"translationSnap\", null);\n\n    _defineProperty(this, \"rotationSnap\", null);\n\n    _defineProperty(this, \"scaleSnap\", null);\n\n    _defineProperty(this, \"space\", 'world');\n\n    _defineProperty(this, \"size\", 1);\n\n    _defineProperty(this, \"dragging\", false);\n\n    _defineProperty(this, \"showX\", true);\n\n    _defineProperty(this, \"showY\", true);\n\n    _defineProperty(this, \"showZ\", true);\n\n    _defineProperty(this, \"changeEvent\", {\n      type: 'change'\n    });\n\n    _defineProperty(this, \"mouseDownEvent\", {\n      type: 'mouseDown'\n    });\n\n    _defineProperty(this, \"mouseUpEvent\", {\n      type: 'mouseUp',\n      mode: this.mode\n    });\n\n    _defineProperty(this, \"objectChangeEvent\", {\n      type: 'objectChange'\n    });\n\n    _defineProperty(this, \"intersectObjectWithRay\", (object, raycaster, includeInvisible) => {\n      const allIntersections = raycaster.intersectObject(object, true);\n\n      for (let i = 0; i < allIntersections.length; i++) {\n        if (allIntersections[i].object.visible || includeInvisible) {\n          return allIntersections[i];\n        }\n      }\n\n      return false;\n    });\n\n    _defineProperty(this, \"attach\", object => {\n      this.object = object;\n      this.visible = true;\n      return this;\n    });\n\n    _defineProperty(this, \"detach\", () => {\n      this.object = undefined;\n      this.visible = false;\n      this.axis = null;\n      return this;\n    });\n\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      if (this.object !== undefined) {\n        this.object.updateMatrixWorld();\n\n        if (this.object.parent === null) {\n          console.error('TransformControls: The attached 3D object must be a part of the scene graph.');\n        } else {\n          this.object.parent.matrixWorld.decompose(this.parentPosition, this.parentQuaternion, this.parentScale);\n        }\n\n        this.object.matrixWorld.decompose(this.worldPosition, this.worldQuaternion, this.worldScale);\n        this.parentQuaternionInv.copy(this.parentQuaternion).invert();\n        this.worldQuaternionInv.copy(this.worldQuaternion).invert();\n      }\n\n      this.camera.updateMatrixWorld();\n      this.camera.matrixWorld.decompose(this.cameraPosition, this.cameraQuaternion, this.cameraScale);\n      this.eye.copy(this.cameraPosition).sub(this.worldPosition).normalize();\n      super.updateMatrixWorld();\n    });\n\n    _defineProperty(this, \"pointerHover\", pointer => {\n      if (this.object === undefined || this.dragging === true) return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const intersect = this.intersectObjectWithRay(this.gizmo.picker[this.mode], this.raycaster);\n\n      if (intersect) {\n        this.axis = intersect.object.name;\n      } else {\n        this.axis = null;\n      }\n    });\n\n    _defineProperty(this, \"pointerDown\", pointer => {\n      if (this.object === undefined || this.dragging === true || pointer.button !== 0) return;\n\n      if (this.axis !== null) {\n        this.raycaster.setFromCamera(pointer, this.camera);\n        const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n\n        if (planeIntersect) {\n          let space = this.space;\n\n          if (this.mode === 'scale') {\n            space = 'local';\n          } else if (this.axis === 'E' || this.axis === 'XYZE' || this.axis === 'XYZ') {\n            space = 'world';\n          }\n\n          if (space === 'local' && this.mode === 'rotate') {\n            const snap = this.rotationSnap;\n            if (this.axis === 'X' && snap) this.object.rotation.x = Math.round(this.object.rotation.x / snap) * snap;\n            if (this.axis === 'Y' && snap) this.object.rotation.y = Math.round(this.object.rotation.y / snap) * snap;\n            if (this.axis === 'Z' && snap) this.object.rotation.z = Math.round(this.object.rotation.z / snap) * snap;\n          }\n\n          this.object.updateMatrixWorld();\n\n          if (this.object.parent) {\n            this.object.parent.updateMatrixWorld();\n          }\n\n          this.positionStart.copy(this.object.position);\n          this.quaternionStart.copy(this.object.quaternion);\n          this.scaleStart.copy(this.object.scale);\n          this.object.matrixWorld.decompose(this.worldPositionStart, this.worldQuaternionStart, this.worldScaleStart);\n          this.pointStart.copy(planeIntersect.point).sub(this.worldPositionStart);\n        }\n\n        this.dragging = true;\n        this.mouseDownEvent.type = this.mode;\n        this.dispatchEvent(this.mouseDownEvent);\n      }\n    });\n\n    _defineProperty(this, \"pointerMove\", pointer => {\n      const axis = this.axis;\n      const mode = this.mode;\n      const object = this.object;\n      let space = this.space;\n\n      if (mode === 'scale') {\n        space = 'local';\n      } else if (axis === 'E' || axis === 'XYZE' || axis === 'XYZ') {\n        space = 'world';\n      }\n\n      if (object === undefined || axis === null || this.dragging === false || pointer.button !== -1) return;\n      this.raycaster.setFromCamera(pointer, this.camera);\n      const planeIntersect = this.intersectObjectWithRay(this.plane, this.raycaster, true);\n      if (!planeIntersect) return;\n      this.pointEnd.copy(planeIntersect.point).sub(this.worldPositionStart);\n\n      if (mode === 'translate') {\n        // Apply translate\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n\n        if (space === 'local' && axis !== 'XYZ') {\n          this.offset.applyQuaternion(this.worldQuaternionInv);\n        }\n\n        if (axis.indexOf('X') === -1) this.offset.x = 0;\n        if (axis.indexOf('Y') === -1) this.offset.y = 0;\n        if (axis.indexOf('Z') === -1) this.offset.z = 0;\n\n        if (space === 'local' && axis !== 'XYZ') {\n          this.offset.applyQuaternion(this.quaternionStart).divide(this.parentScale);\n        } else {\n          this.offset.applyQuaternion(this.parentQuaternionInv).divide(this.parentScale);\n        }\n\n        object.position.copy(this.offset).add(this.positionStart); // Apply translation snap\n\n        if (this.translationSnap) {\n          if (space === 'local') {\n            object.position.applyQuaternion(this.tempQuaternion.copy(this.quaternionStart).invert());\n\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n\n            object.position.applyQuaternion(this.quaternionStart);\n          }\n\n          if (space === 'world') {\n            if (object.parent) {\n              object.position.add(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n\n            if (axis.search('X') !== -1) {\n              object.position.x = Math.round(object.position.x / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search('Y') !== -1) {\n              object.position.y = Math.round(object.position.y / this.translationSnap) * this.translationSnap;\n            }\n\n            if (axis.search('Z') !== -1) {\n              object.position.z = Math.round(object.position.z / this.translationSnap) * this.translationSnap;\n            }\n\n            if (object.parent) {\n              object.position.sub(this.tempVector.setFromMatrixPosition(object.parent.matrixWorld));\n            }\n          }\n        }\n      } else if (mode === 'scale') {\n        if (axis.search('XYZ') !== -1) {\n          let d = this.pointEnd.length() / this.pointStart.length();\n          if (this.pointEnd.dot(this.pointStart) < 0) d *= -1;\n          this.tempVector2.set(d, d, d);\n        } else {\n          this.tempVector.copy(this.pointStart);\n          this.tempVector2.copy(this.pointEnd);\n          this.tempVector.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.applyQuaternion(this.worldQuaternionInv);\n          this.tempVector2.divide(this.tempVector);\n\n          if (axis.search('X') === -1) {\n            this.tempVector2.x = 1;\n          }\n\n          if (axis.search('Y') === -1) {\n            this.tempVector2.y = 1;\n          }\n\n          if (axis.search('Z') === -1) {\n            this.tempVector2.z = 1;\n          }\n        } // Apply scale\n\n\n        object.scale.copy(this.scaleStart).multiply(this.tempVector2);\n\n        if (this.scaleSnap && this.object) {\n          if (axis.search('X') !== -1) {\n            this.object.scale.x = Math.round(object.scale.x / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n\n          if (axis.search('Y') !== -1) {\n            object.scale.y = Math.round(object.scale.y / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n\n          if (axis.search('Z') !== -1) {\n            object.scale.z = Math.round(object.scale.z / this.scaleSnap) * this.scaleSnap || this.scaleSnap;\n          }\n        }\n      } else if (mode === 'rotate') {\n        this.offset.copy(this.pointEnd).sub(this.pointStart);\n        const ROTATION_SPEED = 20 / this.worldPosition.distanceTo(this.tempVector.setFromMatrixPosition(this.camera.matrixWorld));\n\n        if (axis === 'E') {\n          this.rotationAxis.copy(this.eye);\n          this.rotationAngle = this.pointEnd.angleTo(this.pointStart);\n          this.startNorm.copy(this.pointStart).normalize();\n          this.endNorm.copy(this.pointEnd).normalize();\n          this.rotationAngle *= this.endNorm.cross(this.startNorm).dot(this.eye) < 0 ? 1 : -1;\n        } else if (axis === 'XYZE') {\n          this.rotationAxis.copy(this.offset).cross(this.eye).normalize();\n          this.rotationAngle = this.offset.dot(this.tempVector.copy(this.rotationAxis).cross(this.eye)) * ROTATION_SPEED;\n        } else if (axis === 'X' || axis === 'Y' || axis === 'Z') {\n          this.rotationAxis.copy(this.unit[axis]);\n          this.tempVector.copy(this.unit[axis]);\n\n          if (space === 'local') {\n            this.tempVector.applyQuaternion(this.worldQuaternion);\n          }\n\n          this.rotationAngle = this.offset.dot(this.tempVector.cross(this.eye).normalize()) * ROTATION_SPEED;\n        } // Apply rotation snap\n\n\n        if (this.rotationSnap) {\n          this.rotationAngle = Math.round(this.rotationAngle / this.rotationSnap) * this.rotationSnap;\n        } // Apply rotate\n\n\n        if (space === 'local' && axis !== 'E' && axis !== 'XYZE') {\n          object.quaternion.copy(this.quaternionStart);\n          object.quaternion.multiply(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle)).normalize();\n        } else {\n          this.rotationAxis.applyQuaternion(this.parentQuaternionInv);\n          object.quaternion.copy(this.tempQuaternion.setFromAxisAngle(this.rotationAxis, this.rotationAngle));\n          object.quaternion.multiply(this.quaternionStart).normalize();\n        }\n      }\n\n      this.dispatchEvent(this.changeEvent);\n      this.dispatchEvent(this.objectChangeEvent);\n    });\n\n    _defineProperty(this, \"pointerUp\", pointer => {\n      if (pointer.button !== 0) return;\n\n      if (this.dragging && this.axis !== null) {\n        this.mouseUpEvent.mode = this.mode;\n        this.dispatchEvent(this.mouseUpEvent);\n      }\n\n      this.dragging = false;\n      this.axis = null;\n    });\n\n    _defineProperty(this, \"getPointer\", event => {\n      var _this$domElement$owne;\n\n      if (this.domElement && (_this$domElement$owne = this.domElement.ownerDocument) !== null && _this$domElement$owne !== void 0 && _this$domElement$owne.pointerLockElement) {\n        return {\n          x: 0,\n          y: 0,\n          button: event.button\n        };\n      } else {\n        var _this$domElement;\n\n        const pointer = event.changedTouches ? event.changedTouches[0] : event;\n        const rect = (_this$domElement = this.domElement) === null || _this$domElement === void 0 ? void 0 : _this$domElement.getBoundingClientRect();\n        return {\n          x: (pointer.clientX - rect.left) / rect.width * 2 - 1,\n          y: -(pointer.clientY - rect.top) / rect.height * 2 + 1,\n          button: event.button\n        };\n      }\n    });\n\n    _defineProperty(this, \"onPointerHover\", event => {\n      if (!this.enabled) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          this.pointerHover(this.getPointer(event));\n          break;\n      }\n    });\n\n    _defineProperty(this, \"onPointerDown\", event => {\n      var _this$domElement$owne2;\n\n      if (!this.enabled) return;\n      this.domElement.style.touchAction = 'none'; // disable touch scroll\n\n      (_this$domElement$owne2 = this.domElement.ownerDocument) === null || _this$domElement$owne2 === void 0 ? void 0 : _this$domElement$owne2.addEventListener('pointermove', this.onPointerMove);\n      this.pointerHover(this.getPointer(event));\n      this.pointerDown(this.getPointer(event));\n    });\n\n    _defineProperty(this, \"onPointerMove\", event => {\n      if (!this.enabled) return;\n      this.pointerMove(this.getPointer(event));\n    });\n\n    _defineProperty(this, \"onPointerUp\", event => {\n      var _this$domElement$owne3;\n\n      if (!this.enabled) return;\n      this.domElement.style.touchAction = '';\n      (_this$domElement$owne3 = this.domElement.ownerDocument) === null || _this$domElement$owne3 === void 0 ? void 0 : _this$domElement$owne3.removeEventListener('pointermove', this.onPointerMove);\n      this.pointerUp(this.getPointer(event));\n    });\n\n    _defineProperty(this, \"getMode\", () => this.mode);\n\n    _defineProperty(this, \"setMode\", mode => {\n      this.mode = mode;\n    });\n\n    _defineProperty(this, \"setTranslationSnap\", translationSnap => {\n      this.translationSnap = translationSnap;\n    });\n\n    _defineProperty(this, \"setRotationSnap\", rotationSnap => {\n      this.rotationSnap = rotationSnap;\n    });\n\n    _defineProperty(this, \"setScaleSnap\", scaleSnap => {\n      this.scaleSnap = scaleSnap;\n    });\n\n    _defineProperty(this, \"setSize\", size => {\n      this.size = size;\n    });\n\n    _defineProperty(this, \"setSpace\", space => {\n      this.space = space;\n    });\n\n    _defineProperty(this, \"update\", () => {\n      console.warn('THREE.TransformControls: update function has no more functionality and therefore has been deprecated.');\n    });\n\n    _defineProperty(this, \"dispose\", () => {\n      var _this$domElement$owne4, _this$domElement$owne5;\n\n      this.domElement.removeEventListener('pointerdown', this.onPointerDown);\n      this.domElement.removeEventListener('pointermove', this.onPointerHover);\n      (_this$domElement$owne4 = this.domElement.ownerDocument) === null || _this$domElement$owne4 === void 0 ? void 0 : _this$domElement$owne4.removeEventListener('pointermove', this.onPointerMove);\n      (_this$domElement$owne5 = this.domElement.ownerDocument) === null || _this$domElement$owne5 === void 0 ? void 0 : _this$domElement$owne5.removeEventListener('pointerup', this.onPointerUp);\n      this.traverse(child => {\n        const mesh = child;\n\n        if (mesh.geometry) {\n          mesh.geometry.dispose();\n        }\n\n        if (mesh.material) {\n          mesh.material.dispose();\n        }\n      });\n    });\n\n    if (domElement === undefined) {\n      console.warn('THREE.TransformControls: The second parameter \"domElement\" is now mandatory.');\n      this.domElement = document;\n    }\n\n    this.domElement = domElement;\n    this.camera = camera;\n    this.gizmo = new TransformControlsGizmo();\n    this.add(this.gizmo);\n    this.plane = new TransformControlsPlane();\n    this.add(this.plane); // Defined getter, setter and store for a property\n\n    const defineProperty = (propName, defaultValue) => {\n      let propValue = defaultValue;\n      Object.defineProperty(this, propName, {\n        get: function () {\n          return propValue !== undefined ? propValue : defaultValue;\n        },\n        set: function (value) {\n          if (propValue !== value) {\n            propValue = value;\n            this.plane[propName] = value;\n            this.gizmo[propName] = value;\n            this.dispatchEvent({\n              type: propName + '-changed',\n              value: value\n            });\n            this.dispatchEvent(this.changeEvent);\n          }\n        }\n      }); //@ts-ignore\n\n      this[propName] = defaultValue; // @ts-ignore\n\n      this.plane[propName] = defaultValue; // @ts-ignore\n\n      this.gizmo[propName] = defaultValue;\n    };\n\n    defineProperty('camera', this.camera);\n    defineProperty('object', this.object);\n    defineProperty('enabled', this.enabled);\n    defineProperty('axis', this.axis);\n    defineProperty('mode', this.mode);\n    defineProperty('translationSnap', this.translationSnap);\n    defineProperty('rotationSnap', this.rotationSnap);\n    defineProperty('scaleSnap', this.scaleSnap);\n    defineProperty('space', this.space);\n    defineProperty('size', this.size);\n    defineProperty('dragging', this.dragging);\n    defineProperty('showX', this.showX);\n    defineProperty('showY', this.showY);\n    defineProperty('showZ', this.showZ);\n    defineProperty('worldPosition', this.worldPosition);\n    defineProperty('worldPositionStart', this.worldPositionStart);\n    defineProperty('worldQuaternion', this.worldQuaternion);\n    defineProperty('worldQuaternionStart', this.worldQuaternionStart);\n    defineProperty('cameraPosition', this.cameraPosition);\n    defineProperty('cameraQuaternion', this.cameraQuaternion);\n    defineProperty('pointStart', this.pointStart);\n    defineProperty('pointEnd', this.pointEnd);\n    defineProperty('rotationAxis', this.rotationAxis);\n    defineProperty('rotationAngle', this.rotationAngle);\n    defineProperty('eye', this.eye);\n    {\n      domElement.addEventListener('pointerdown', this.onPointerDown);\n      domElement.addEventListener('pointermove', this.onPointerHover);\n      this.domElement.ownerDocument.addEventListener('pointerup', this.onPointerUp);\n    }\n  }\n\n}\n\nclass TransformControlsGizmo extends Object3D {\n  // these are set from parent class TransformControls\n  constructor() {\n    super();\n\n    _defineProperty(this, \"isTransformControlsGizmo\", true);\n\n    _defineProperty(this, \"type\", 'TransformControlsGizmo');\n\n    _defineProperty(this, \"tempVector\", new Vector3(0, 0, 0));\n\n    _defineProperty(this, \"tempEuler\", new Euler());\n\n    _defineProperty(this, \"alignVector\", new Vector3(0, 1, 0));\n\n    _defineProperty(this, \"zeroVector\", new Vector3(0, 0, 0));\n\n    _defineProperty(this, \"lookAtMatrix\", new Matrix4());\n\n    _defineProperty(this, \"tempQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"tempQuaternion2\", new Quaternion());\n\n    _defineProperty(this, \"identityQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"unitX\", new Vector3(1, 0, 0));\n\n    _defineProperty(this, \"unitY\", new Vector3(0, 1, 0));\n\n    _defineProperty(this, \"unitZ\", new Vector3(0, 0, 1));\n\n    _defineProperty(this, \"gizmo\", void 0);\n\n    _defineProperty(this, \"picker\", void 0);\n\n    _defineProperty(this, \"helper\", void 0);\n\n    _defineProperty(this, \"rotationAxis\", new Vector3());\n\n    _defineProperty(this, \"cameraPosition\", new Vector3());\n\n    _defineProperty(this, \"worldPositionStart\", new Vector3());\n\n    _defineProperty(this, \"worldQuaternionStart\", new Quaternion());\n\n    _defineProperty(this, \"worldPosition\", new Vector3());\n\n    _defineProperty(this, \"worldQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"eye\", new Vector3());\n\n    _defineProperty(this, \"camera\", null);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"axis\", null);\n\n    _defineProperty(this, \"mode\", 'translate');\n\n    _defineProperty(this, \"space\", 'world');\n\n    _defineProperty(this, \"size\", 1);\n\n    _defineProperty(this, \"dragging\", false);\n\n    _defineProperty(this, \"showX\", true);\n\n    _defineProperty(this, \"showY\", true);\n\n    _defineProperty(this, \"showZ\", true);\n\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n\n      if (this.mode === 'scale') {\n        space = 'local'; // scale always oriented to local rotation\n      }\n\n      const quaternion = space === 'local' ? this.worldQuaternion : this.identityQuaternion; // Show only gizmos for current transform mode\n\n      this.gizmo['translate'].visible = this.mode === 'translate';\n      this.gizmo['rotate'].visible = this.mode === 'rotate';\n      this.gizmo['scale'].visible = this.mode === 'scale';\n      this.helper['translate'].visible = this.mode === 'translate';\n      this.helper['rotate'].visible = this.mode === 'rotate';\n      this.helper['scale'].visible = this.mode === 'scale';\n      let handles = [];\n      handles = handles.concat(this.picker[this.mode].children);\n      handles = handles.concat(this.gizmo[this.mode].children);\n      handles = handles.concat(this.helper[this.mode].children);\n\n      for (let i = 0; i < handles.length; i++) {\n        const handle = handles[i]; // hide aligned to camera\n\n        handle.visible = true;\n        handle.rotation.set(0, 0, 0);\n        handle.position.copy(this.worldPosition);\n        let factor;\n\n        if (this.camera.isOrthographicCamera) {\n          factor = (this.camera.top - this.camera.bottom) / this.camera.zoom;\n        } else {\n          factor = this.worldPosition.distanceTo(this.cameraPosition) * Math.min(1.9 * Math.tan(Math.PI * this.camera.fov / 360) / this.camera.zoom, 7);\n        }\n\n        handle.scale.set(1, 1, 1).multiplyScalar(factor * this.size / 7); // TODO: simplify helpers and consider decoupling from gizmo\n\n        if (handle.tag === 'helper') {\n          handle.visible = false;\n\n          if (handle.name === 'AXIS') {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = !!this.axis;\n\n            if (this.axis === 'X') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this.axis === 'Y') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, 0, Math.PI / 2));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this.axis === 'Z') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              handle.quaternion.copy(quaternion).multiply(this.tempQuaternion);\n\n              if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > 0.9) {\n                handle.visible = false;\n              }\n            }\n\n            if (this.axis === 'XYZE') {\n              this.tempQuaternion.setFromEuler(this.tempEuler.set(0, Math.PI / 2, 0));\n              this.alignVector.copy(this.rotationAxis);\n              handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.zeroVector, this.alignVector, this.unitY));\n              handle.quaternion.multiply(this.tempQuaternion);\n              handle.visible = this.dragging;\n            }\n\n            if (this.axis === 'E') {\n              handle.visible = false;\n            }\n          } else if (handle.name === 'START') {\n            handle.position.copy(this.worldPositionStart);\n            handle.visible = this.dragging;\n          } else if (handle.name === 'END') {\n            handle.position.copy(this.worldPosition);\n            handle.visible = this.dragging;\n          } else if (handle.name === 'DELTA') {\n            handle.position.copy(this.worldPositionStart);\n            handle.quaternion.copy(this.worldQuaternionStart);\n            this.tempVector.set(1e-10, 1e-10, 1e-10).add(this.worldPositionStart).sub(this.worldPosition).multiplyScalar(-1);\n            this.tempVector.applyQuaternion(this.worldQuaternionStart.clone().invert());\n            handle.scale.copy(this.tempVector);\n            handle.visible = this.dragging;\n          } else {\n            handle.quaternion.copy(quaternion);\n\n            if (this.dragging) {\n              handle.position.copy(this.worldPositionStart);\n            } else {\n              handle.position.copy(this.worldPosition);\n            }\n\n            if (this.axis) {\n              handle.visible = this.axis.search(handle.name) !== -1;\n            }\n          } // If updating helper, skip rest of the loop\n\n\n          continue;\n        } // Align handles to current local or world rotation\n\n\n        handle.quaternion.copy(quaternion);\n\n        if (this.mode === 'translate' || this.mode === 'scale') {\n          // Hide translate and scale axis facing the camera\n          const AXIS_HIDE_TRESHOLD = 0.99;\n          const PLANE_HIDE_TRESHOLD = 0.2;\n          const AXIS_FLIP_TRESHOLD = 0.0;\n\n          if (handle.name === 'X' || handle.name === 'XYZX') {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'Y' || handle.name === 'XYZY') {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'Z' || handle.name === 'XYZZ') {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) > AXIS_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'XY') {\n            if (Math.abs(this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'YZ') {\n            if (Math.abs(this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name === 'XZ') {\n            if (Math.abs(this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye)) < PLANE_HIDE_TRESHOLD) {\n              handle.scale.set(1e-10, 1e-10, 1e-10);\n              handle.visible = false;\n            }\n          } // Flip translate and scale axis ocluded behind another axis\n\n\n          if (handle.name.search('X') !== -1) {\n            if (this.alignVector.copy(this.unitX).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.x *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name.search('Y') !== -1) {\n            if (this.alignVector.copy(this.unitY).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.y *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n\n          if (handle.name.search('Z') !== -1) {\n            if (this.alignVector.copy(this.unitZ).applyQuaternion(quaternion).dot(this.eye) < AXIS_FLIP_TRESHOLD) {\n              if (handle.tag === 'fwd') {\n                handle.visible = false;\n              } else {\n                handle.scale.z *= -1;\n              }\n            } else if (handle.tag === 'bwd') {\n              handle.visible = false;\n            }\n          }\n        } else if (this.mode === 'rotate') {\n          // Align handles to current local or world rotation\n          this.tempQuaternion2.copy(quaternion);\n          this.alignVector.copy(this.eye).applyQuaternion(this.tempQuaternion.copy(quaternion).invert());\n\n          if (handle.name.search('E') !== -1) {\n            handle.quaternion.setFromRotationMatrix(this.lookAtMatrix.lookAt(this.eye, this.zeroVector, this.unitY));\n          }\n\n          if (handle.name === 'X') {\n            this.tempQuaternion.setFromAxisAngle(this.unitX, Math.atan2(-this.alignVector.y, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n\n          if (handle.name === 'Y') {\n            this.tempQuaternion.setFromAxisAngle(this.unitY, Math.atan2(this.alignVector.x, this.alignVector.z));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n\n          if (handle.name === 'Z') {\n            this.tempQuaternion.setFromAxisAngle(this.unitZ, Math.atan2(this.alignVector.y, this.alignVector.x));\n            this.tempQuaternion.multiplyQuaternions(this.tempQuaternion2, this.tempQuaternion);\n            handle.quaternion.copy(this.tempQuaternion);\n          }\n        } // Hide disabled axes\n\n\n        handle.visible = handle.visible && (handle.name.indexOf('X') === -1 || this.showX);\n        handle.visible = handle.visible && (handle.name.indexOf('Y') === -1 || this.showY);\n        handle.visible = handle.visible && (handle.name.indexOf('Z') === -1 || this.showZ);\n        handle.visible = handle.visible && (handle.name.indexOf('E') === -1 || this.showX && this.showY && this.showZ); // highlight selected axis\n        //@ts-ignore\n\n        handle.material.opacity = handle.material.opacity || handle.material.opacity; //@ts-ignore\n\n        handle.material.color = handle.material.color || handle.material.color.clone(); //@ts-ignore\n\n        handle.material.color.copy(handle.material.color); //@ts-ignore\n\n        handle.material.opacity = handle.material.opacity;\n\n        if (!this.enabled) {\n          //@ts-ignore\n          handle.material.opacity *= 0.5; //@ts-ignore\n\n          handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n        } else if (this.axis) {\n          if (handle.name === this.axis) {\n            //@ts-ignore\n            handle.material.opacity = 1.0; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else if (this.axis.split('').some(function (a) {\n            return handle.name === a;\n          })) {\n            //@ts-ignore\n            handle.material.opacity = 1.0; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          } else {\n            //@ts-ignore\n            handle.material.opacity *= 0.25; //@ts-ignore\n\n            handle.material.color.lerp(new Color(1, 1, 1), 0.5);\n          }\n        }\n      }\n\n      super.updateMatrixWorld();\n    });\n\n    const gizmoMaterial = new MeshBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      side: DoubleSide,\n      fog: false,\n      toneMapped: false\n    });\n    const gizmoLineMaterial = new LineBasicMaterial({\n      depthTest: false,\n      depthWrite: false,\n      transparent: true,\n      linewidth: 1,\n      fog: false,\n      toneMapped: false\n    }); // Make unique material for each axis/color\n\n    const matInvisible = gizmoMaterial.clone();\n    matInvisible.opacity = 0.15;\n    const matHelper = gizmoMaterial.clone();\n    matHelper.opacity = 0.33;\n    const matRed = gizmoMaterial.clone();\n    matRed.color.set(0xff0000);\n    const matGreen = gizmoMaterial.clone();\n    matGreen.color.set(0x00ff00);\n    const matBlue = gizmoMaterial.clone();\n    matBlue.color.set(0x0000ff);\n    const matWhiteTransparent = gizmoMaterial.clone();\n    matWhiteTransparent.opacity = 0.25;\n    const matYellowTransparent = matWhiteTransparent.clone();\n    matYellowTransparent.color.set(0xffff00);\n    const matCyanTransparent = matWhiteTransparent.clone();\n    matCyanTransparent.color.set(0x00ffff);\n    const matMagentaTransparent = matWhiteTransparent.clone();\n    matMagentaTransparent.color.set(0xff00ff);\n    const matYellow = gizmoMaterial.clone();\n    matYellow.color.set(0xffff00);\n    const matLineRed = gizmoLineMaterial.clone();\n    matLineRed.color.set(0xff0000);\n    const matLineGreen = gizmoLineMaterial.clone();\n    matLineGreen.color.set(0x00ff00);\n    const matLineBlue = gizmoLineMaterial.clone();\n    matLineBlue.color.set(0x0000ff);\n    const matLineCyan = gizmoLineMaterial.clone();\n    matLineCyan.color.set(0x00ffff);\n    const matLineMagenta = gizmoLineMaterial.clone();\n    matLineMagenta.color.set(0xff00ff);\n    const matLineYellow = gizmoLineMaterial.clone();\n    matLineYellow.color.set(0xffff00);\n    const matLineGray = gizmoLineMaterial.clone();\n    matLineGray.color.set(0x787878);\n    const matLineYellowTransparent = matLineYellow.clone();\n    matLineYellowTransparent.opacity = 0.25; // reusable geometry\n\n    const arrowGeometry = new CylinderGeometry(0, 0.05, 0.2, 12, 1, false);\n    const scaleHandleGeometry = new BoxGeometry(0.125, 0.125, 0.125);\n    const lineGeometry = new BufferGeometry();\n    lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 0, 0], 3));\n\n    const CircleGeometry = (radius, arc) => {\n      const geometry = new BufferGeometry();\n      const vertices = [];\n\n      for (let i = 0; i <= 64 * arc; ++i) {\n        vertices.push(0, Math.cos(i / 32 * Math.PI) * radius, Math.sin(i / 32 * Math.PI) * radius);\n      }\n\n      geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      return geometry;\n    }; // Special geometry for transform helper. If scaled with position vector it spans from [0,0,0] to position\n\n\n    const TranslateHelperGeometry = () => {\n      const geometry = new BufferGeometry();\n      geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 1, 1, 1], 3));\n      return geometry;\n    }; // Gizmo definitions - custom hierarchy definitions for setupGizmo() function\n\n\n    const gizmoTranslate = {\n      X: [[new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, -Math.PI / 2], null, 'fwd'], [new Mesh(arrowGeometry, matRed), [1, 0, 0], [0, 0, Math.PI / 2], null, 'bwd'], [new Line(lineGeometry, matLineRed)]],\n      Y: [[new Mesh(arrowGeometry, matGreen), [0, 1, 0], null, null, 'fwd'], [new Mesh(arrowGeometry, matGreen), [0, 1, 0], [Math.PI, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2]]],\n      Z: [[new Mesh(arrowGeometry, matBlue), [0, 0, 1], [Math.PI / 2, 0, 0], null, 'fwd'], [new Mesh(arrowGeometry, matBlue), [0, 0, 1], [-Math.PI / 2, 0, 0], null, 'bwd'], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.1, 0), matWhiteTransparent.clone()), [0, 0, 0], [0, 0, 0]]],\n      XY: [[new Mesh(new PlaneGeometry(0.295, 0.295), matYellowTransparent.clone()), [0.15, 0.15, 0]], [new Line(lineGeometry, matLineYellow), [0.18, 0.3, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.3, 0.18, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matCyanTransparent.clone()), [0, 0.15, 0.15], [0, Math.PI / 2, 0]], [new Line(lineGeometry, matLineCyan), [0, 0.18, 0.3], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.3, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.295, 0.295), matMagentaTransparent.clone()), [0.15, 0, 0.15], [-Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineMagenta), [0.18, 0, 0.3], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.3, 0, 0.18], [0, -Math.PI / 2, 0], [0.125, 1, 1]]]\n    };\n    const pickerTranslate = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0.6, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0.6, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 1, 4, 1, false), matInvisible), [0, 0, 0.6], [Math.PI / 2, 0, 0]]],\n      XYZ: [[new Mesh(new OctahedronGeometry(0.2, 0), matInvisible)]],\n      XY: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0.2, 0]]],\n      YZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0, 0.2, 0.2], [0, Math.PI / 2, 0]]],\n      XZ: [[new Mesh(new PlaneGeometry(0.4, 0.4), matInvisible), [0.2, 0, 0.2], [-Math.PI / 2, 0, 0]]]\n    };\n    const helperTranslate = {\n      START: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      END: [[new Mesh(new OctahedronGeometry(0.01, 2), matHelper), null, null, null, 'helper']],\n      DELTA: [[new Line(TranslateHelperGeometry(), matHelper), null, null, null, 'helper']],\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    };\n    const gizmoRotate = {\n      X: [[new Line(CircleGeometry(1, 0.5), matLineRed)], [new Mesh(new OctahedronGeometry(0.04, 0), matRed), [0, 0, 0.99], null, [1, 3, 1]]],\n      Y: [[new Line(CircleGeometry(1, 0.5), matLineGreen), null, [0, 0, -Math.PI / 2]], [new Mesh(new OctahedronGeometry(0.04, 0), matGreen), [0, 0, 0.99], null, [3, 1, 1]]],\n      Z: [[new Line(CircleGeometry(1, 0.5), matLineBlue), null, [0, Math.PI / 2, 0]], [new Mesh(new OctahedronGeometry(0.04, 0), matBlue), [0.99, 0, 0], null, [1, 3, 1]]],\n      E: [[new Line(CircleGeometry(1.25, 1), matLineYellowTransparent), null, [0, Math.PI / 2, 0]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [1.17, 0, 0], [0, 0, -Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [-1.17, 0, 0], [0, 0, Math.PI / 2], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, -1.17, 0], [Math.PI, 0, 0], [1, 1, 0.001]], [new Mesh(new CylinderGeometry(0.03, 0, 0.15, 4, 1, false), matLineYellowTransparent), [0, 1.17, 0], [0, 0, 0], [1, 1, 0.001]]],\n      XYZE: [[new Line(CircleGeometry(1, 1), matLineGray), null, [0, Math.PI / 2, 0]]]\n    };\n    const helperRotate = {\n      AXIS: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']]\n    };\n    const pickerRotate = {\n      X: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, -Math.PI / 2, -Math.PI / 2]]],\n      Y: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [Math.PI / 2, 0, 0]]],\n      Z: [[new Mesh(new TorusGeometry(1, 0.1, 4, 24), matInvisible), [0, 0, 0], [0, 0, -Math.PI / 2]]],\n      E: [[new Mesh(new TorusGeometry(1.25, 0.1, 2, 24), matInvisible)]],\n      XYZE: [[new Mesh(new SphereGeometry(0.7, 10, 8), matInvisible)]]\n    };\n    const gizmoScale = {\n      X: [[new Mesh(scaleHandleGeometry, matRed), [0.8, 0, 0], [0, 0, -Math.PI / 2]], [new Line(lineGeometry, matLineRed), null, null, [0.8, 1, 1]]],\n      Y: [[new Mesh(scaleHandleGeometry, matGreen), [0, 0.8, 0]], [new Line(lineGeometry, matLineGreen), null, [0, 0, Math.PI / 2], [0.8, 1, 1]]],\n      Z: [[new Mesh(scaleHandleGeometry, matBlue), [0, 0, 0.8], [Math.PI / 2, 0, 0]], [new Line(lineGeometry, matLineBlue), null, [0, -Math.PI / 2, 0], [0.8, 1, 1]]],\n      XY: [[new Mesh(scaleHandleGeometry, matYellowTransparent), [0.85, 0.85, 0], null, [2, 2, 0.2]], [new Line(lineGeometry, matLineYellow), [0.855, 0.98, 0], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineYellow), [0.98, 0.855, 0], [0, 0, Math.PI / 2], [0.125, 1, 1]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matCyanTransparent), [0, 0.85, 0.85], null, [0.2, 2, 2]], [new Line(lineGeometry, matLineCyan), [0, 0.855, 0.98], [0, 0, Math.PI / 2], [0.125, 1, 1]], [new Line(lineGeometry, matLineCyan), [0, 0.98, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matMagentaTransparent), [0.85, 0, 0.85], null, [2, 0.2, 2]], [new Line(lineGeometry, matLineMagenta), [0.855, 0, 0.98], null, [0.125, 1, 1]], [new Line(lineGeometry, matLineMagenta), [0.98, 0, 0.855], [0, -Math.PI / 2, 0], [0.125, 1, 1]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.125, 0.125, 0.125), matWhiteTransparent.clone()), [0, 0, 1.1]]]\n    };\n    const pickerScale = {\n      X: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0.5, 0, 0], [0, 0, -Math.PI / 2]]],\n      Y: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0.5, 0]]],\n      Z: [[new Mesh(new CylinderGeometry(0.2, 0, 0.8, 4, 1, false), matInvisible), [0, 0, 0.5], [Math.PI / 2, 0, 0]]],\n      XY: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0.85, 0], null, [3, 3, 0.2]]],\n      YZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0, 0.85, 0.85], null, [0.2, 3, 3]]],\n      XZ: [[new Mesh(scaleHandleGeometry, matInvisible), [0.85, 0, 0.85], null, [3, 0.2, 3]]],\n      XYZX: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [1.1, 0, 0]]],\n      XYZY: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 1.1, 0]]],\n      XYZZ: [[new Mesh(new BoxGeometry(0.2, 0.2, 0.2), matInvisible), [0, 0, 1.1]]]\n    };\n    const helperScale = {\n      X: [[new Line(lineGeometry, matHelper.clone()), [-1e3, 0, 0], null, [1e6, 1, 1], 'helper']],\n      Y: [[new Line(lineGeometry, matHelper.clone()), [0, -1e3, 0], [0, 0, Math.PI / 2], [1e6, 1, 1], 'helper']],\n      Z: [[new Line(lineGeometry, matHelper.clone()), [0, 0, -1e3], [0, -Math.PI / 2, 0], [1e6, 1, 1], 'helper']]\n    }; // Creates an Object3D with gizmos described in custom hierarchy definition.\n    // this is nearly impossible to Type so i'm leaving it\n\n    const setupGizmo = gizmoMap => {\n      const gizmo = new Object3D();\n\n      for (let name in gizmoMap) {\n        for (let i = gizmoMap[name].length; i--;) {\n          const object = gizmoMap[name][i][0].clone();\n          const position = gizmoMap[name][i][1];\n          const rotation = gizmoMap[name][i][2];\n          const scale = gizmoMap[name][i][3];\n          const tag = gizmoMap[name][i][4]; // name and tag properties are essential for picking and updating logic.\n\n          object.name = name; // @ts-ignore\n\n          object.tag = tag;\n\n          if (position) {\n            object.position.set(position[0], position[1], position[2]);\n          }\n\n          if (rotation) {\n            object.rotation.set(rotation[0], rotation[1], rotation[2]);\n          }\n\n          if (scale) {\n            object.scale.set(scale[0], scale[1], scale[2]);\n          }\n\n          object.updateMatrix();\n          const tempGeometry = object.geometry.clone();\n          tempGeometry.applyMatrix4(object.matrix);\n          object.geometry = tempGeometry;\n          object.renderOrder = Infinity;\n          object.position.set(0, 0, 0);\n          object.rotation.set(0, 0, 0);\n          object.scale.set(1, 1, 1);\n          gizmo.add(object);\n        }\n      }\n\n      return gizmo;\n    };\n\n    this.gizmo = {};\n    this.picker = {};\n    this.helper = {};\n    this.add(this.gizmo['translate'] = setupGizmo(gizmoTranslate));\n    this.add(this.gizmo['rotate'] = setupGizmo(gizmoRotate));\n    this.add(this.gizmo['scale'] = setupGizmo(gizmoScale));\n    this.add(this.picker['translate'] = setupGizmo(pickerTranslate));\n    this.add(this.picker['rotate'] = setupGizmo(pickerRotate));\n    this.add(this.picker['scale'] = setupGizmo(pickerScale));\n    this.add(this.helper['translate'] = setupGizmo(helperTranslate));\n    this.add(this.helper['rotate'] = setupGizmo(helperRotate));\n    this.add(this.helper['scale'] = setupGizmo(helperScale)); // Pickers should be hidden always\n\n    this.picker['translate'].visible = false;\n    this.picker['rotate'].visible = false;\n    this.picker['scale'].visible = false;\n  } // updateMatrixWorld will update transformations and appearance of individual handles\n\n\n}\n\nclass TransformControlsPlane extends Mesh {\n  constructor() {\n    super(new PlaneGeometry(100000, 100000, 2, 2), new MeshBasicMaterial({\n      visible: false,\n      wireframe: true,\n      side: DoubleSide,\n      transparent: true,\n      opacity: 0.1,\n      toneMapped: false\n    }));\n\n    _defineProperty(this, \"isTransformControlsPlane\", true);\n\n    _defineProperty(this, \"type\", 'TransformControlsPlane');\n\n    _defineProperty(this, \"unitX\", new Vector3(1, 0, 0));\n\n    _defineProperty(this, \"unitY\", new Vector3(0, 1, 0));\n\n    _defineProperty(this, \"unitZ\", new Vector3(0, 0, 1));\n\n    _defineProperty(this, \"tempVector\", new Vector3());\n\n    _defineProperty(this, \"dirVector\", new Vector3());\n\n    _defineProperty(this, \"alignVector\", new Vector3());\n\n    _defineProperty(this, \"tempMatrix\", new Matrix4());\n\n    _defineProperty(this, \"identityQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"cameraQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"worldPosition\", new Vector3());\n\n    _defineProperty(this, \"worldQuaternion\", new Quaternion());\n\n    _defineProperty(this, \"eye\", new Vector3());\n\n    _defineProperty(this, \"axis\", null);\n\n    _defineProperty(this, \"mode\", 'translate');\n\n    _defineProperty(this, \"space\", 'world');\n\n    _defineProperty(this, \"updateMatrixWorld\", () => {\n      let space = this.space;\n      this.position.copy(this.worldPosition);\n      if (this.mode === 'scale') space = 'local'; // scale always oriented to local rotation\n\n      this.unitX.set(1, 0, 0).applyQuaternion(space === 'local' ? this.worldQuaternion : this.identityQuaternion);\n      this.unitY.set(0, 1, 0).applyQuaternion(space === 'local' ? this.worldQuaternion : this.identityQuaternion);\n      this.unitZ.set(0, 0, 1).applyQuaternion(space === 'local' ? this.worldQuaternion : this.identityQuaternion); // Align the plane for current transform mode, axis and space.\n\n      this.alignVector.copy(this.unitY);\n\n      switch (this.mode) {\n        case 'translate':\n        case 'scale':\n          switch (this.axis) {\n            case 'X':\n              this.alignVector.copy(this.eye).cross(this.unitX);\n              this.dirVector.copy(this.unitX).cross(this.alignVector);\n              break;\n\n            case 'Y':\n              this.alignVector.copy(this.eye).cross(this.unitY);\n              this.dirVector.copy(this.unitY).cross(this.alignVector);\n              break;\n\n            case 'Z':\n              this.alignVector.copy(this.eye).cross(this.unitZ);\n              this.dirVector.copy(this.unitZ).cross(this.alignVector);\n              break;\n\n            case 'XY':\n              this.dirVector.copy(this.unitZ);\n              break;\n\n            case 'YZ':\n              this.dirVector.copy(this.unitX);\n              break;\n\n            case 'XZ':\n              this.alignVector.copy(this.unitZ);\n              this.dirVector.copy(this.unitY);\n              break;\n\n            case 'XYZ':\n            case 'E':\n              this.dirVector.set(0, 0, 0);\n              break;\n          }\n\n          break;\n\n        case 'rotate':\n        default:\n          // special case for rotate\n          this.dirVector.set(0, 0, 0);\n      }\n\n      if (this.dirVector.length() === 0) {\n        // If in rotate mode, make the plane parallel to camera\n        this.quaternion.copy(this.cameraQuaternion);\n      } else {\n        this.tempMatrix.lookAt(this.tempVector.set(0, 0, 0), this.dirVector, this.alignVector);\n        this.quaternion.setFromRotationMatrix(this.tempMatrix);\n      }\n\n      super.updateMatrixWorld();\n    });\n  }\n\n}\n\nexport { TransformControls, TransformControlsGizmo, TransformControlsPlane };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}