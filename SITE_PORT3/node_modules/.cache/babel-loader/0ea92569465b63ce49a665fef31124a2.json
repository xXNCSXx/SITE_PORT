{"ast":null,"code":"import { InputNode } from '../core/InputNode.js';\nimport { UVNode } from '../accessors/UVNode.js';\nimport { ColorSpaceNode } from '../utils/ColorSpaceNode.js';\nimport { ExpressionNode } from '../core/ExpressionNode.js';\nfunction TextureNode(value, uv, bias, project) {\n  InputNode.call(this, 'v4', {\n    shared: true\n  });\n  this.value = value;\n  this.uv = uv || new UVNode();\n  this.bias = bias;\n  this.project = project !== undefined ? project : false;\n}\nTextureNode.prototype = Object.create(InputNode.prototype);\nTextureNode.prototype.constructor = TextureNode;\nTextureNode.prototype.nodeType = 'Texture';\nTextureNode.prototype.getTexture = function (builder, output) {\n  return InputNode.prototype.generate.call(this, builder, output, this.value.uuid, 't');\n};\nTextureNode.prototype.generate = function (builder, output) {\n  if (output === 'sampler2D') {\n    return this.getTexture(builder, output);\n  }\n  var tex = this.getTexture(builder, output),\n    uv = this.uv.build(builder, this.project ? 'v4' : 'v2'),\n    bias = this.bias ? this.bias.build(builder, 'f') : undefined;\n  if (bias === undefined && builder.context.bias) {\n    bias = builder.context.bias.setTexture(this).build(builder, 'f');\n  }\n  var method, code;\n  if (this.project) method = 'texture2DProj';else method = bias ? 'tex2DBias' : 'tex2D';\n  if (bias) code = method + '( ' + tex + ', ' + uv + ', ' + bias + ' )';else code = method + '( ' + tex + ', ' + uv + ' )'; // add a custom context for fix incompatibility with the core\n  // include ColorSpace function only for vertex shader (in fragment shader color space functions is added automatically by core)\n  // this should be removed in the future\n  // context.include is used to include or not functions if used FunctionNode\n  // context.ignoreCache =: not create temp variables nodeT0..9 to optimize the code\n\n  var context = {\n    include: builder.isShader('vertex'),\n    ignoreCache: true\n  };\n  var outputType = this.getType(builder);\n  builder.addContext(context);\n  this.colorSpace = this.colorSpace || new ColorSpaceNode(new ExpressionNode('', outputType));\n  this.colorSpace.fromDecoding(builder.getTextureEncodingFromMap(this.value));\n  this.colorSpace.input.parse(code);\n  code = this.colorSpace.build(builder, outputType); // end custom context\n\n  builder.removeContext();\n  return builder.format(code, outputType, output);\n};\nTextureNode.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  if (source.value) this.value = source.value;\n  this.uv = source.uv;\n  if (source.bias) this.bias = source.bias;\n  if (source.project !== undefined) this.project = source.project;\n  return this;\n};\nTextureNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    if (this.value) data.value = this.value.uuid;\n    data.uv = this.uv.toJSON(meta).uuid;\n    data.project = this.project;\n    if (this.bias) data.bias = this.bias.toJSON(meta).uuid;\n  }\n  return data;\n};\nexport { TextureNode };","map":{"version":3,"names":["InputNode","UVNode","ColorSpaceNode","ExpressionNode","TextureNode","value","uv","bias","project","call","shared","undefined","prototype","Object","create","constructor","nodeType","getTexture","builder","output","generate","uuid","tex","build","context","setTexture","method","code","include","isShader","ignoreCache","outputType","getType","addContext","colorSpace","fromDecoding","getTextureEncodingFromMap","input","parse","removeContext","format","copy","source","toJSON","meta","data","getJSONNode","createJSONNode"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/inputs/TextureNode.js"],"sourcesContent":["import { InputNode } from '../core/InputNode.js';\nimport { UVNode } from '../accessors/UVNode.js';\nimport { ColorSpaceNode } from '../utils/ColorSpaceNode.js';\nimport { ExpressionNode } from '../core/ExpressionNode.js';\n\nfunction TextureNode(value, uv, bias, project) {\n  InputNode.call(this, 'v4', {\n    shared: true\n  });\n  this.value = value;\n  this.uv = uv || new UVNode();\n  this.bias = bias;\n  this.project = project !== undefined ? project : false;\n}\n\nTextureNode.prototype = Object.create(InputNode.prototype);\nTextureNode.prototype.constructor = TextureNode;\nTextureNode.prototype.nodeType = 'Texture';\n\nTextureNode.prototype.getTexture = function (builder, output) {\n  return InputNode.prototype.generate.call(this, builder, output, this.value.uuid, 't');\n};\n\nTextureNode.prototype.generate = function (builder, output) {\n  if (output === 'sampler2D') {\n    return this.getTexture(builder, output);\n  }\n\n  var tex = this.getTexture(builder, output),\n      uv = this.uv.build(builder, this.project ? 'v4' : 'v2'),\n      bias = this.bias ? this.bias.build(builder, 'f') : undefined;\n\n  if (bias === undefined && builder.context.bias) {\n    bias = builder.context.bias.setTexture(this).build(builder, 'f');\n  }\n\n  var method, code;\n  if (this.project) method = 'texture2DProj';else method = bias ? 'tex2DBias' : 'tex2D';\n  if (bias) code = method + '( ' + tex + ', ' + uv + ', ' + bias + ' )';else code = method + '( ' + tex + ', ' + uv + ' )'; // add a custom context for fix incompatibility with the core\n  // include ColorSpace function only for vertex shader (in fragment shader color space functions is added automatically by core)\n  // this should be removed in the future\n  // context.include is used to include or not functions if used FunctionNode\n  // context.ignoreCache =: not create temp variables nodeT0..9 to optimize the code\n\n  var context = {\n    include: builder.isShader('vertex'),\n    ignoreCache: true\n  };\n  var outputType = this.getType(builder);\n  builder.addContext(context);\n  this.colorSpace = this.colorSpace || new ColorSpaceNode(new ExpressionNode('', outputType));\n  this.colorSpace.fromDecoding(builder.getTextureEncodingFromMap(this.value));\n  this.colorSpace.input.parse(code);\n  code = this.colorSpace.build(builder, outputType); // end custom context\n\n  builder.removeContext();\n  return builder.format(code, outputType, output);\n};\n\nTextureNode.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  if (source.value) this.value = source.value;\n  this.uv = source.uv;\n  if (source.bias) this.bias = source.bias;\n  if (source.project !== undefined) this.project = source.project;\n  return this;\n};\n\nTextureNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    if (this.value) data.value = this.value.uuid;\n    data.uv = this.uv.toJSON(meta).uuid;\n    data.project = this.project;\n    if (this.bias) data.bias = this.bias.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { TextureNode };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}