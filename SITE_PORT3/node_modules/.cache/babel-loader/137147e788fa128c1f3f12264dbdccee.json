{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nimport { ResolutionNode } from './ResolutionNode.js';\nfunction ScreenUVNode(resolution) {\n  TempNode.call(this, 'v2');\n  this.resolution = resolution || new ResolutionNode();\n}\nScreenUVNode.prototype = Object.create(TempNode.prototype);\nScreenUVNode.prototype.constructor = ScreenUVNode;\nScreenUVNode.prototype.nodeType = 'ScreenUV';\nScreenUVNode.prototype.generate = function (builder, output) {\n  var result;\n  if (builder.isShader('fragment')) {\n    result = '( gl_FragCoord.xy / ' + this.resolution.build(builder, 'v2') + ')';\n  } else {\n    console.warn('THREE.ScreenUVNode is not compatible with ' + builder.shader + ' shader.');\n    result = 'vec2( 0.0 )';\n  }\n  return builder.format(result, this.getType(builder), output);\n};\nScreenUVNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.resolution = source.resolution;\n  return this;\n};\nScreenUVNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.resolution = this.resolution.toJSON(meta).uuid;\n  }\n  return data;\n};\nexport { ScreenUVNode };","map":{"version":3,"names":["TempNode","ResolutionNode","ScreenUVNode","resolution","call","prototype","Object","create","constructor","nodeType","generate","builder","output","result","isShader","build","console","warn","shader","format","getType","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/accessors/ScreenUVNode.js"],"sourcesContent":["import { TempNode } from '../core/TempNode.js';\nimport { ResolutionNode } from './ResolutionNode.js';\n\nfunction ScreenUVNode(resolution) {\n  TempNode.call(this, 'v2');\n  this.resolution = resolution || new ResolutionNode();\n}\n\nScreenUVNode.prototype = Object.create(TempNode.prototype);\nScreenUVNode.prototype.constructor = ScreenUVNode;\nScreenUVNode.prototype.nodeType = 'ScreenUV';\n\nScreenUVNode.prototype.generate = function (builder, output) {\n  var result;\n\n  if (builder.isShader('fragment')) {\n    result = '( gl_FragCoord.xy / ' + this.resolution.build(builder, 'v2') + ')';\n  } else {\n    console.warn('THREE.ScreenUVNode is not compatible with ' + builder.shader + ' shader.');\n    result = 'vec2( 0.0 )';\n  }\n\n  return builder.format(result, this.getType(builder), output);\n};\n\nScreenUVNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.resolution = source.resolution;\n  return this;\n};\n\nScreenUVNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.resolution = this.resolution.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { ScreenUVNode };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,qBAAqB;AAC9C,SAASC,cAAc,QAAQ,qBAAqB;AAEpD,SAASC,YAAYA,CAACC,UAAU,EAAE;EAChCH,QAAQ,CAACI,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;EACzB,IAAI,CAACD,UAAU,GAAGA,UAAU,IAAI,IAAIF,cAAc,CAAC,CAAC;AACtD;AAEAC,YAAY,CAACG,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACP,QAAQ,CAACK,SAAS,CAAC;AAC1DH,YAAY,CAACG,SAAS,CAACG,WAAW,GAAGN,YAAY;AACjDA,YAAY,CAACG,SAAS,CAACI,QAAQ,GAAG,UAAU;AAE5CP,YAAY,CAACG,SAAS,CAACK,QAAQ,GAAG,UAAUC,OAAO,EAAEC,MAAM,EAAE;EAC3D,IAAIC,MAAM;EAEV,IAAIF,OAAO,CAACG,QAAQ,CAAC,UAAU,CAAC,EAAE;IAChCD,MAAM,GAAG,sBAAsB,GAAG,IAAI,CAACV,UAAU,CAACY,KAAK,CAACJ,OAAO,EAAE,IAAI,CAAC,GAAG,GAAG;EAC9E,CAAC,MAAM;IACLK,OAAO,CAACC,IAAI,CAAC,4CAA4C,GAAGN,OAAO,CAACO,MAAM,GAAG,UAAU,CAAC;IACxFL,MAAM,GAAG,aAAa;EACxB;EAEA,OAAOF,OAAO,CAACQ,MAAM,CAACN,MAAM,EAAE,IAAI,CAACO,OAAO,CAACT,OAAO,CAAC,EAAEC,MAAM,CAAC;AAC9D,CAAC;AAEDV,YAAY,CAACG,SAAS,CAACgB,IAAI,GAAG,UAAUC,MAAM,EAAE;EAC9CtB,QAAQ,CAACK,SAAS,CAACgB,IAAI,CAACjB,IAAI,CAAC,IAAI,EAAEkB,MAAM,CAAC;EAC1C,IAAI,CAACnB,UAAU,GAAGmB,MAAM,CAACnB,UAAU;EACnC,OAAO,IAAI;AACb,CAAC;AAEDD,YAAY,CAACG,SAAS,CAACkB,MAAM,GAAG,UAAUC,IAAI,EAAE;EAC9C,IAAIC,IAAI,GAAG,IAAI,CAACC,WAAW,CAACF,IAAI,CAAC;EAEjC,IAAI,CAACC,IAAI,EAAE;IACTA,IAAI,GAAG,IAAI,CAACE,cAAc,CAACH,IAAI,CAAC;IAChCC,IAAI,CAACtB,UAAU,GAAG,IAAI,CAACA,UAAU,CAACoB,MAAM,CAACC,IAAI,CAAC,CAACI,IAAI;EACrD;EAEA,OAAOH,IAAI;AACb,CAAC;AAED,SAASvB,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}