{"ast":null,"code":"import { TempNode } from './TempNode.js';\nvar declarationRegexp = /^struct\\s*([a-z_0-9]+)\\s*{\\s*((.|\\n)*?)}/gim,\n  propertiesRegexp = /\\s*(\\w*?)\\s*(\\w*?)(\\=|\\;)/gim;\nfunction StructNode(src) {\n  TempNode.call(this);\n  this.parse(src);\n}\nStructNode.prototype = Object.create(TempNode.prototype);\nStructNode.prototype.constructor = StructNode;\nStructNode.prototype.nodeType = 'Struct';\nStructNode.prototype.getType = function (builder) {\n  return builder.getTypeByFormat(this.name);\n};\nStructNode.prototype.getInputByName = function (name) {\n  var i = this.inputs.length;\n  while (i--) {\n    if (this.inputs[i].name === name) {\n      return this.inputs[i];\n    }\n  }\n};\nStructNode.prototype.generate = function (builder, output) {\n  if (output === 'source') {\n    return this.src + ';';\n  } else {\n    return builder.format('( ' + this.src + ' )', this.getType(builder), output);\n  }\n};\nStructNode.prototype.parse = function (src) {\n  this.src = src || '';\n  this.inputs = [];\n  var declaration = declarationRegexp.exec(this.src);\n  if (declaration) {\n    var properties = declaration[2],\n      match;\n    while (match = propertiesRegexp.exec(properties)) {\n      this.inputs.push({\n        type: match[1],\n        name: match[2]\n      });\n    }\n    this.name = declaration[1];\n  } else {\n    this.name = '';\n  }\n  this.type = this.name;\n};\nStructNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.src = this.src;\n  }\n  return data;\n};\nexport { StructNode };","map":{"version":3,"names":["TempNode","declarationRegexp","propertiesRegexp","StructNode","src","call","parse","prototype","Object","create","constructor","nodeType","getType","builder","getTypeByFormat","name","getInputByName","i","inputs","length","generate","output","format","declaration","exec","properties","match","push","type","toJSON","meta","data","getJSONNode","createJSONNode"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/core/StructNode.js"],"sourcesContent":["import { TempNode } from './TempNode.js';\n\nvar declarationRegexp = /^struct\\s*([a-z_0-9]+)\\s*{\\s*((.|\\n)*?)}/gim,\n    propertiesRegexp = /\\s*(\\w*?)\\s*(\\w*?)(\\=|\\;)/gim;\n\nfunction StructNode(src) {\n  TempNode.call(this);\n  this.parse(src);\n}\n\nStructNode.prototype = Object.create(TempNode.prototype);\nStructNode.prototype.constructor = StructNode;\nStructNode.prototype.nodeType = 'Struct';\n\nStructNode.prototype.getType = function (builder) {\n  return builder.getTypeByFormat(this.name);\n};\n\nStructNode.prototype.getInputByName = function (name) {\n  var i = this.inputs.length;\n\n  while (i--) {\n    if (this.inputs[i].name === name) {\n      return this.inputs[i];\n    }\n  }\n};\n\nStructNode.prototype.generate = function (builder, output) {\n  if (output === 'source') {\n    return this.src + ';';\n  } else {\n    return builder.format('( ' + this.src + ' )', this.getType(builder), output);\n  }\n};\n\nStructNode.prototype.parse = function (src) {\n  this.src = src || '';\n  this.inputs = [];\n  var declaration = declarationRegexp.exec(this.src);\n\n  if (declaration) {\n    var properties = declaration[2],\n        match;\n\n    while (match = propertiesRegexp.exec(properties)) {\n      this.inputs.push({\n        type: match[1],\n        name: match[2]\n      });\n    }\n\n    this.name = declaration[1];\n  } else {\n    this.name = '';\n  }\n\n  this.type = this.name;\n};\n\nStructNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.src = this.src;\n  }\n\n  return data;\n};\n\nexport { StructNode };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,eAAe;AAExC,IAAIC,iBAAiB,GAAG,6CAA6C;EACjEC,gBAAgB,GAAG,8BAA8B;AAErD,SAASC,UAAUA,CAACC,GAAG,EAAE;EACvBJ,QAAQ,CAACK,IAAI,CAAC,IAAI,CAAC;EACnB,IAAI,CAACC,KAAK,CAACF,GAAG,CAAC;AACjB;AAEAD,UAAU,CAACI,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACT,QAAQ,CAACO,SAAS,CAAC;AACxDJ,UAAU,CAACI,SAAS,CAACG,WAAW,GAAGP,UAAU;AAC7CA,UAAU,CAACI,SAAS,CAACI,QAAQ,GAAG,QAAQ;AAExCR,UAAU,CAACI,SAAS,CAACK,OAAO,GAAG,UAAUC,OAAO,EAAE;EAChD,OAAOA,OAAO,CAACC,eAAe,CAAC,IAAI,CAACC,IAAI,CAAC;AAC3C,CAAC;AAEDZ,UAAU,CAACI,SAAS,CAACS,cAAc,GAAG,UAAUD,IAAI,EAAE;EACpD,IAAIE,CAAC,GAAG,IAAI,CAACC,MAAM,CAACC,MAAM;EAE1B,OAAOF,CAAC,EAAE,EAAE;IACV,IAAI,IAAI,CAACC,MAAM,CAACD,CAAC,CAAC,CAACF,IAAI,KAAKA,IAAI,EAAE;MAChC,OAAO,IAAI,CAACG,MAAM,CAACD,CAAC,CAAC;IACvB;EACF;AACF,CAAC;AAEDd,UAAU,CAACI,SAAS,CAACa,QAAQ,GAAG,UAAUP,OAAO,EAAEQ,MAAM,EAAE;EACzD,IAAIA,MAAM,KAAK,QAAQ,EAAE;IACvB,OAAO,IAAI,CAACjB,GAAG,GAAG,GAAG;EACvB,CAAC,MAAM;IACL,OAAOS,OAAO,CAACS,MAAM,CAAC,IAAI,GAAG,IAAI,CAAClB,GAAG,GAAG,IAAI,EAAE,IAAI,CAACQ,OAAO,CAACC,OAAO,CAAC,EAAEQ,MAAM,CAAC;EAC9E;AACF,CAAC;AAEDlB,UAAU,CAACI,SAAS,CAACD,KAAK,GAAG,UAAUF,GAAG,EAAE;EAC1C,IAAI,CAACA,GAAG,GAAGA,GAAG,IAAI,EAAE;EACpB,IAAI,CAACc,MAAM,GAAG,EAAE;EAChB,IAAIK,WAAW,GAAGtB,iBAAiB,CAACuB,IAAI,CAAC,IAAI,CAACpB,GAAG,CAAC;EAElD,IAAImB,WAAW,EAAE;IACf,IAAIE,UAAU,GAAGF,WAAW,CAAC,CAAC,CAAC;MAC3BG,KAAK;IAET,OAAOA,KAAK,GAAGxB,gBAAgB,CAACsB,IAAI,CAACC,UAAU,CAAC,EAAE;MAChD,IAAI,CAACP,MAAM,CAACS,IAAI,CAAC;QACfC,IAAI,EAAEF,KAAK,CAAC,CAAC,CAAC;QACdX,IAAI,EAAEW,KAAK,CAAC,CAAC;MACf,CAAC,CAAC;IACJ;IAEA,IAAI,CAACX,IAAI,GAAGQ,WAAW,CAAC,CAAC,CAAC;EAC5B,CAAC,MAAM;IACL,IAAI,CAACR,IAAI,GAAG,EAAE;EAChB;EAEA,IAAI,CAACa,IAAI,GAAG,IAAI,CAACb,IAAI;AACvB,CAAC;AAEDZ,UAAU,CAACI,SAAS,CAACsB,MAAM,GAAG,UAAUC,IAAI,EAAE;EAC5C,IAAIC,IAAI,GAAG,IAAI,CAACC,WAAW,CAACF,IAAI,CAAC;EAEjC,IAAI,CAACC,IAAI,EAAE;IACTA,IAAI,GAAG,IAAI,CAACE,cAAc,CAACH,IAAI,CAAC;IAChCC,IAAI,CAAC3B,GAAG,GAAG,IAAI,CAACA,GAAG;EACrB;EAEA,OAAO2B,IAAI;AACb,CAAC;AAED,SAAS5B,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module"}