{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useState, createElement } from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n    _defineProperty(this, \"_time\", void 0);\n    _defineProperty(this, \"_distort\", void 0);\n    _defineProperty(this, \"_radius\", void 0);\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = \"\\n      uniform float time;\\n      uniform float radius;\\n      uniform float distort;\\n      \" + distort + \"\\n      \" + shader.vertexShader + \"\\n    \";\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', \"\\n        float updateTime = time / 50.0;\\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\\n        \");\n  }\n  get time() {\n    return this._time.value;\n  }\n  set time(v) {\n    this._time.value = v;\n  }\n  get distort() {\n    return this._distort.value;\n  }\n  set distort(v) {\n    this._distort.value = v;\n  }\n  get radius() {\n    return this._radius.value;\n  }\n  set radius(v) {\n    this._radius.value = v;\n  }\n}\nconst MeshDistortMaterial = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n      speed = 1\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, [\"speed\"]);\n  const [material] = useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\nexport { MeshDistortMaterial };","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","forwardRef","useState","createElement","MeshPhysicalMaterial","useFrame","_defineProperty","distort","DistortMaterialImpl","constructor","parameters","setValues","_time","value","_distort","_radius","onBeforeCompile","shader","uniforms","time","radius","vertexShader","replace","v","MeshDistortMaterial","_ref","ref","speed","props","material","state","clock","getElapsedTime","dispose","undefined","object","attach"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/@react-three/drei/core/MeshDistortMaterial.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\nimport { forwardRef, useState, createElement } from 'react';\nimport { MeshPhysicalMaterial } from 'three';\nimport { useFrame } from '@react-three/fiber';\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport distort from '../helpers/glsl/distort.vert.glsl.js';\n\nclass DistortMaterialImpl extends MeshPhysicalMaterial {\n  constructor(parameters = {}) {\n    super(parameters);\n\n    _defineProperty(this, \"_time\", void 0);\n\n    _defineProperty(this, \"_distort\", void 0);\n\n    _defineProperty(this, \"_radius\", void 0);\n\n    this.setValues(parameters);\n    this._time = {\n      value: 0\n    };\n    this._distort = {\n      value: 0.4\n    };\n    this._radius = {\n      value: 1\n    };\n  }\n\n  onBeforeCompile(shader) {\n    shader.uniforms.time = this._time;\n    shader.uniforms.radius = this._radius;\n    shader.uniforms.distort = this._distort;\n    shader.vertexShader = \"\\n      uniform float time;\\n      uniform float radius;\\n      uniform float distort;\\n      \" + distort + \"\\n      \" + shader.vertexShader + \"\\n    \";\n    shader.vertexShader = shader.vertexShader.replace('#include <begin_vertex>', \"\\n        float updateTime = time / 50.0;\\n        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));\\n        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));\\n        \");\n  }\n\n  get time() {\n    return this._time.value;\n  }\n\n  set time(v) {\n    this._time.value = v;\n  }\n\n  get distort() {\n    return this._distort.value;\n  }\n\n  set distort(v) {\n    this._distort.value = v;\n  }\n\n  get radius() {\n    return this._radius.value;\n  }\n\n  set radius(v) {\n    this._radius.value = v;\n  }\n\n}\n\nconst MeshDistortMaterial = /*#__PURE__*/forwardRef((_ref, ref) => {\n  let {\n    speed = 1\n  } = _ref,\n      props = _objectWithoutPropertiesLoose(_ref, [\"speed\"]);\n\n  const [material] = useState(() => new DistortMaterialImpl());\n  useFrame(state => material && (material.time = state.clock.getElapsedTime() * speed));\n  return /*#__PURE__*/createElement(\"primitive\", _extends({\n    dispose: undefined,\n    object: material,\n    ref: ref,\n    attach: \"material\"\n  }, props));\n});\n\nexport { MeshDistortMaterial };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}