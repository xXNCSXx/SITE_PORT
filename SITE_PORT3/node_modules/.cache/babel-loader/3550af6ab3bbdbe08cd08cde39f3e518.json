{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, PerspectiveCamera, Quaternion, Spherical, Vector2, OrthographicCamera } from 'three';\n\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nclass OrbitControls extends EventDispatcher {\n  // Set to false to disable this control\n  // \"target\" sets the location of focus, where the object orbits around\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // radians\n  // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  // radians\n  // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // Set to false to disable rotating\n  // Set to false to disable panning\n  // if false, pan orthogonal to world-space direction camera.up\n  // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  // 30 seconds per orbit when fps is 60\n  // The four arrow keys\n  // Mouse buttons\n  // Touch fingers\n  // the target DOM element for key events\n  constructor(object, domElement) {\n    super();\n    _defineProperty(this, \"object\", void 0);\n    _defineProperty(this, \"domElement\", void 0);\n    _defineProperty(this, \"enabled\", true);\n    _defineProperty(this, \"target\", new Vector3());\n    _defineProperty(this, \"minDistance\", 0);\n    _defineProperty(this, \"maxDistance\", Infinity);\n    _defineProperty(this, \"minZoom\", 0);\n    _defineProperty(this, \"maxZoom\", Infinity);\n    _defineProperty(this, \"minPolarAngle\", 0);\n    _defineProperty(this, \"maxPolarAngle\", Math.PI);\n    _defineProperty(this, \"minAzimuthAngle\", -Infinity);\n    _defineProperty(this, \"maxAzimuthAngle\", Infinity);\n    _defineProperty(this, \"enableDamping\", false);\n    _defineProperty(this, \"dampingFactor\", 0.05);\n    _defineProperty(this, \"enableZoom\", true);\n    _defineProperty(this, \"zoomSpeed\", 1.0);\n    _defineProperty(this, \"enableRotate\", true);\n    _defineProperty(this, \"rotateSpeed\", 1.0);\n    _defineProperty(this, \"enablePan\", true);\n    _defineProperty(this, \"panSpeed\", 1.0);\n    _defineProperty(this, \"screenSpacePanning\", true);\n    _defineProperty(this, \"keyPanSpeed\", 7.0);\n    _defineProperty(this, \"autoRotate\", false);\n    _defineProperty(this, \"autoRotateSpeed\", 2.0);\n    _defineProperty(this, \"keys\", {\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      BOTTOM: 40\n    });\n    _defineProperty(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n    _defineProperty(this, \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n    _defineProperty(this, \"target0\", void 0);\n    _defineProperty(this, \"position0\", void 0);\n    _defineProperty(this, \"zoom0\", void 0);\n    _defineProperty(this, \"_domElementKeyEvents\", null);\n    _defineProperty(this, \"getPolarAngle\", void 0);\n    _defineProperty(this, \"getAzimuthalAngle\", void 0);\n    _defineProperty(this, \"listenToKeyEvents\", void 0);\n    _defineProperty(this, \"saveState\", void 0);\n    _defineProperty(this, \"reset\", void 0);\n    _defineProperty(this, \"update\", void 0);\n    _defineProperty(this, \"connect\", void 0);\n    _defineProperty(this, \"dispose\", void 0);\n    this.object = object;\n    this.domElement = domElement; // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object instanceof PerspectiveCamera ? this.object.zoom : 1; //\n    // public methods\n    //\n\n    this.getPolarAngle = () => spherical.phi;\n    this.getAzimuthalAngle = () => spherical.theta;\n    this.listenToKeyEvents = domElement => {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object instanceof PerspectiveCamera ? scope.object.zoom : 1;\n    };\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n      if (scope.object instanceof PerspectiveCamera) {\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n      }\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n    this.update = (() => {\n      const offset = new Vector3(); // so camera.up is the orbit axis\n\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n        return false;\n      };\n    })(); // https://github.com/mrdoob/three.js/issues/20575\n\n    this.connect = domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n      scope.domElement = domElement;\n      scope.domElement.addEventListener('contextmenu', onContextMenu);\n      scope.domElement.addEventListener('pointerdown', onPointerDown);\n      scope.domElement.addEventListener('wheel', onMouseWheel);\n      scope.domElement.addEventListener('touchstart', onTouchStart);\n      scope.domElement.addEventListener('touchend', onTouchEnd);\n      scope.domElement.addEventListener('touchmove', onTouchMove);\n    };\n    this.dispose = () => {\n      var _scope$domElement, _scope$domElement2, _scope$domElement3, _scope$domElement4, _scope$domElement5, _scope$domElement6, _scope$domElement7, _scope$domElement8;\n      (_scope$domElement = scope.domElement) === null || _scope$domElement === void 0 ? void 0 : _scope$domElement.removeEventListener('contextmenu', onContextMenu);\n      (_scope$domElement2 = scope.domElement) === null || _scope$domElement2 === void 0 ? void 0 : _scope$domElement2.removeEventListener('pointerdown', onPointerDown);\n      (_scope$domElement3 = scope.domElement) === null || _scope$domElement3 === void 0 ? void 0 : _scope$domElement3.removeEventListener('wheel', onMouseWheel);\n      (_scope$domElement4 = scope.domElement) === null || _scope$domElement4 === void 0 ? void 0 : _scope$domElement4.removeEventListener('touchstart', onTouchStart);\n      (_scope$domElement5 = scope.domElement) === null || _scope$domElement5 === void 0 ? void 0 : _scope$domElement5.removeEventListener('touchend', onTouchEnd);\n      (_scope$domElement6 = scope.domElement) === null || _scope$domElement6 === void 0 ? void 0 : _scope$domElement6.removeEventListener('touchmove', onTouchMove);\n      (_scope$domElement7 = scope.domElement) === null || _scope$domElement7 === void 0 ? void 0 : _scope$domElement7.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement8 = scope.domElement) === null || _scope$domElement8 === void 0 ? void 0 : _scope$domElement8.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n    }; //\n    // internals\n    //\n\n    const scope = this;\n    const changeEvent = {\n      type: 'change'\n    };\n    const startEvent = {\n      type: 'start'\n    };\n    const endEvent = {\n      type: 'end'\n    };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001; // current position in spherical coordinates\n\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })(); // deltaX and deltaY are in pixels; right and down are positive\n\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    })();\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n      scope.update();\n    }\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n      switch (event.keyCode) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n    function handleTouchStartRotate(event) {\n      if (event.touches.length == 1) {\n        rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n    function handleTouchStartPan(event) {\n      if (event.touches.length == 1) {\n        panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n    function handleTouchStartDolly(event) {\n      const dx = event.touches[0].pageX - event.touches[1].pageX;\n      const dy = event.touches[0].pageY - event.touches[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n    function handleTouchStartDollyPan(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enablePan) handleTouchStartPan(event);\n    }\n    function handleTouchStartDollyRotate(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enableRotate) handleTouchStartRotate(event);\n    }\n    function handleTouchMoveRotate(event) {\n      if (event.touches.length == 1) {\n        rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateEnd.set(x, y);\n      }\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n      rotateStart.copy(rotateEnd);\n    }\n    function handleTouchMovePan(event) {\n      if (event.touches.length == 1) {\n        panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panEnd.set(x, y);\n      }\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n    function handleTouchMoveDolly(event) {\n      const dx = event.touches[0].pageX - event.touches[1].pageX;\n      const dy = event.touches[0].pageY - event.touches[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n    // event handlers - FSM: listen for events and reset state\n    //\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseDown(event);\n          break;\n        // TODO touch\n      }\n    }\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseMove(event);\n          break;\n        // TODO touch\n      }\n    }\n    function onPointerUp(event) {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseUp();\n          break;\n        // TODO touch\n      }\n    }\n    function onMouseDown(event) {\n      var _scope$domElement9;\n\n      // Prevent the browser from scrolling.\n      event.preventDefault(); // Manually set the focus since calling preventDefault above\n      // prevents the browser from setting it automatically.\n\n      (_scope$domElement9 = scope.domElement) !== null && _scope$domElement9 !== void 0 && _scope$domElement9.focus ? scope.domElement.focus() : window.focus();\n      let mouseAction;\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n        default:\n          mouseAction = -1;\n      }\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n          break;\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        var _scope$domElement10, _scope$domElement11;\n        (_scope$domElement10 = scope.domElement) === null || _scope$domElement10 === void 0 ? void 0 : _scope$domElement10.ownerDocument.addEventListener('pointermove', onPointerMove);\n        (_scope$domElement11 = scope.domElement) === null || _scope$domElement11 === void 0 ? void 0 : _scope$domElement11.ownerDocument.addEventListener('pointerup', onPointerUp);\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n    function onMouseUp() {\n      var _scope$domElement12, _scope$domElement13;\n      (_scope$domElement12 = scope.domElement) === null || _scope$domElement12 === void 0 ? void 0 : _scope$domElement12.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement13 = scope.domElement) === null || _scope$domElement13 === void 0 ? void 0 : _scope$domElement13.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      if (scope.enabled === false) return;\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (event.touches.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate(event);\n              state = STATE.TOUCH_ROTATE;\n              break;\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan(event);\n              state = STATE.TOUCH_PAN;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan(event);\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate(event);\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n            default:\n              state = STATE.NONE;\n          }\n          break;\n        default:\n          state = STATE.NONE;\n      }\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n        default:\n          state = STATE.NONE;\n      }\n    }\n    function onTouchEnd() {\n      if (scope.enabled === false) return;\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    } // connect events\n\n    if (domElement !== undefined) this.connect(domElement); // force an update at start\n\n    this.update();\n  }\n} // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n}\nexport { MapControls, OrbitControls };","map":{"version":3,"names":["_defineProperty","EventDispatcher","Vector3","MOUSE","TOUCH","PerspectiveCamera","Quaternion","Spherical","Vector2","OrthographicCamera","OrbitControls","constructor","object","domElement","Infinity","Math","PI","LEFT","UP","RIGHT","BOTTOM","ROTATE","MIDDLE","DOLLY","PAN","ONE","TWO","DOLLY_PAN","target0","target","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","_domElementKeyEvents","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","getAutoRotationAngle","enableDamping","sphericalDelta","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","radius","scale","minDistance","maxDistance","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","connect","document","console","error","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","dispose","_scope$domElement","_scope$domElement2","_scope$domElement3","_scope$domElement4","_scope$domElement5","_scope$domElement6","_scope$domElement7","_scope$domElement8","removeEventListener","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","autoRotateSpeed","getZoomScale","pow","zoomSpeed","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","screenSpacePanning","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","warn","enablePan","dollyOut","dollyScale","minZoom","maxZoom","enableZoom","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","rotateSpeed","x","y","handleMouseMoveDolly","handleMouseMovePan","panSpeed","handleMouseWheel","handleKeyDown","needsUpdate","keyCode","keys","keyPanSpeed","preventDefault","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","enableRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","enabled","pointerType","onMouseDown","onMouseMove","onMouseUp","_scope$domElement9","focus","window","mouseAction","button","mouseButtons","ctrlKey","metaKey","shiftKey","_scope$domElement10","_scope$domElement11","_scope$domElement12","_scope$domElement13","DOLLY_ROTATE","undefined","MapControls"],"sources":["C:/Users/drncs/OneDrive/Área de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/controls/OrbitControls.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, PerspectiveCamera, Quaternion, Spherical, Vector2, OrthographicCamera } from 'three';\n\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nclass OrbitControls extends EventDispatcher {\n  // Set to false to disable this control\n  // \"target\" sets the location of focus, where the object orbits around\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // radians\n  // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  // radians\n  // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // Set to false to disable rotating\n  // Set to false to disable panning\n  // if false, pan orthogonal to world-space direction camera.up\n  // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  // 30 seconds per orbit when fps is 60\n  // The four arrow keys\n  // Mouse buttons\n  // Touch fingers\n  // the target DOM element for key events\n  constructor(object, domElement) {\n    super();\n\n    _defineProperty(this, \"object\", void 0);\n\n    _defineProperty(this, \"domElement\", void 0);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"target\", new Vector3());\n\n    _defineProperty(this, \"minDistance\", 0);\n\n    _defineProperty(this, \"maxDistance\", Infinity);\n\n    _defineProperty(this, \"minZoom\", 0);\n\n    _defineProperty(this, \"maxZoom\", Infinity);\n\n    _defineProperty(this, \"minPolarAngle\", 0);\n\n    _defineProperty(this, \"maxPolarAngle\", Math.PI);\n\n    _defineProperty(this, \"minAzimuthAngle\", -Infinity);\n\n    _defineProperty(this, \"maxAzimuthAngle\", Infinity);\n\n    _defineProperty(this, \"enableDamping\", false);\n\n    _defineProperty(this, \"dampingFactor\", 0.05);\n\n    _defineProperty(this, \"enableZoom\", true);\n\n    _defineProperty(this, \"zoomSpeed\", 1.0);\n\n    _defineProperty(this, \"enableRotate\", true);\n\n    _defineProperty(this, \"rotateSpeed\", 1.0);\n\n    _defineProperty(this, \"enablePan\", true);\n\n    _defineProperty(this, \"panSpeed\", 1.0);\n\n    _defineProperty(this, \"screenSpacePanning\", true);\n\n    _defineProperty(this, \"keyPanSpeed\", 7.0);\n\n    _defineProperty(this, \"autoRotate\", false);\n\n    _defineProperty(this, \"autoRotateSpeed\", 2.0);\n\n    _defineProperty(this, \"keys\", {\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      BOTTOM: 40\n    });\n\n    _defineProperty(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n\n    _defineProperty(this, \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n\n    _defineProperty(this, \"target0\", void 0);\n\n    _defineProperty(this, \"position0\", void 0);\n\n    _defineProperty(this, \"zoom0\", void 0);\n\n    _defineProperty(this, \"_domElementKeyEvents\", null);\n\n    _defineProperty(this, \"getPolarAngle\", void 0);\n\n    _defineProperty(this, \"getAzimuthalAngle\", void 0);\n\n    _defineProperty(this, \"listenToKeyEvents\", void 0);\n\n    _defineProperty(this, \"saveState\", void 0);\n\n    _defineProperty(this, \"reset\", void 0);\n\n    _defineProperty(this, \"update\", void 0);\n\n    _defineProperty(this, \"connect\", void 0);\n\n    _defineProperty(this, \"dispose\", void 0);\n\n    this.object = object;\n    this.domElement = domElement; // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object instanceof PerspectiveCamera ? this.object.zoom : 1; //\n    // public methods\n    //\n\n    this.getPolarAngle = () => spherical.phi;\n\n    this.getAzimuthalAngle = () => spherical.theta;\n\n    this.listenToKeyEvents = domElement => {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object instanceof PerspectiveCamera ? scope.object.zoom : 1;\n    };\n\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n\n      if (scope.object instanceof PerspectiveCamera) {\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n      }\n\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    this.update = (() => {\n      const offset = new Vector3(); // so camera.up is the orbit axis\n\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    })(); // https://github.com/mrdoob/three.js/issues/20575\n\n\n    this.connect = domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      scope.domElement = domElement;\n      scope.domElement.addEventListener('contextmenu', onContextMenu);\n      scope.domElement.addEventListener('pointerdown', onPointerDown);\n      scope.domElement.addEventListener('wheel', onMouseWheel);\n      scope.domElement.addEventListener('touchstart', onTouchStart);\n      scope.domElement.addEventListener('touchend', onTouchEnd);\n      scope.domElement.addEventListener('touchmove', onTouchMove);\n    };\n\n    this.dispose = () => {\n      var _scope$domElement, _scope$domElement2, _scope$domElement3, _scope$domElement4, _scope$domElement5, _scope$domElement6, _scope$domElement7, _scope$domElement8;\n\n      (_scope$domElement = scope.domElement) === null || _scope$domElement === void 0 ? void 0 : _scope$domElement.removeEventListener('contextmenu', onContextMenu);\n      (_scope$domElement2 = scope.domElement) === null || _scope$domElement2 === void 0 ? void 0 : _scope$domElement2.removeEventListener('pointerdown', onPointerDown);\n      (_scope$domElement3 = scope.domElement) === null || _scope$domElement3 === void 0 ? void 0 : _scope$domElement3.removeEventListener('wheel', onMouseWheel);\n      (_scope$domElement4 = scope.domElement) === null || _scope$domElement4 === void 0 ? void 0 : _scope$domElement4.removeEventListener('touchstart', onTouchStart);\n      (_scope$domElement5 = scope.domElement) === null || _scope$domElement5 === void 0 ? void 0 : _scope$domElement5.removeEventListener('touchend', onTouchEnd);\n      (_scope$domElement6 = scope.domElement) === null || _scope$domElement6 === void 0 ? void 0 : _scope$domElement6.removeEventListener('touchmove', onTouchMove);\n      (_scope$domElement7 = scope.domElement) === null || _scope$domElement7 === void 0 ? void 0 : _scope$domElement7.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement8 = scope.domElement) === null || _scope$domElement8 === void 0 ? void 0 : _scope$domElement8.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    const scope = this;\n    const changeEvent = {\n      type: 'change'\n    };\n    const startEvent = {\n      type: 'start'\n    };\n    const endEvent = {\n      type: 'end'\n    };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001; // current position in spherical coordinates\n\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n\n      switch (event.keyCode) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate(event) {\n      if (event.touches.length == 1) {\n        rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan(event) {\n      if (event.touches.length == 1) {\n        panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly(event) {\n      const dx = event.touches[0].pageX - event.touches[1].pageX;\n      const dy = event.touches[0].pageY - event.touches[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enablePan) handleTouchStartPan(event);\n    }\n\n    function handleTouchStartDollyRotate(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enableRotate) handleTouchStartRotate(event);\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (event.touches.length == 1) {\n        rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (event.touches.length == 1) {\n        panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      const dx = event.touches[0].pageX - event.touches[1].pageX;\n      const dy = event.touches[0].pageY - event.touches[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseDown(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseMove(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerUp(event) {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseUp();\n          break;\n        // TODO touch\n      }\n    }\n\n    function onMouseDown(event) {\n      var _scope$domElement9;\n\n      // Prevent the browser from scrolling.\n      event.preventDefault(); // Manually set the focus since calling preventDefault above\n      // prevents the browser from setting it automatically.\n\n      (_scope$domElement9 = scope.domElement) !== null && _scope$domElement9 !== void 0 && _scope$domElement9.focus ? scope.domElement.focus() : window.focus();\n      let mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        var _scope$domElement10, _scope$domElement11;\n\n        (_scope$domElement10 = scope.domElement) === null || _scope$domElement10 === void 0 ? void 0 : _scope$domElement10.ownerDocument.addEventListener('pointermove', onPointerMove);\n        (_scope$domElement11 = scope.domElement) === null || _scope$domElement11 === void 0 ? void 0 : _scope$domElement11.ownerDocument.addEventListener('pointerup', onPointerUp);\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseUp() {\n      var _scope$domElement12, _scope$domElement13;\n\n      (_scope$domElement12 = scope.domElement) === null || _scope$domElement12 === void 0 ? void 0 : _scope$domElement12.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement13 = scope.domElement) === null || _scope$domElement13 === void 0 ? void 0 : _scope$domElement13.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      if (scope.enabled === false) return;\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (event.touches.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate(event);\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan(event);\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan(event);\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate(event);\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd() {\n      if (scope.enabled === false) return;\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    } // connect events\n\n\n    if (domElement !== undefined) this.connect(domElement); // force an update at start\n\n    this.update();\n  }\n\n} // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n\n}\n\nexport { MapControls, OrbitControls };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}