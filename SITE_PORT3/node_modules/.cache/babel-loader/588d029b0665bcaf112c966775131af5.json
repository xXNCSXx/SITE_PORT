{"ast":null,"code":"import { WebGLRenderTarget, OrthographicCamera, Scene, Mesh, PlaneGeometry } from 'three';\nimport { NodeBuilder } from '../core/NodeBuilder.js';\nimport { NodeMaterial } from '../materials/NodeMaterial.js';\nimport { TextureNode } from './TextureNode.js';\nfunction RTTNode(width, height, input, options) {\n  options = options || {};\n  this.input = input;\n  this.clear = options.clear !== undefined ? options.clear : true;\n  this.renderTarget = new WebGLRenderTarget(width, height, options);\n  this.material = new NodeMaterial();\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n  this.scene = new Scene();\n  this.quad = new Mesh(new PlaneGeometry(2, 2), this.material);\n  this.quad.frustumCulled = false; // Avoid getting clipped\n\n  this.scene.add(this.quad);\n  this.render = true;\n  TextureNode.call(this, this.renderTarget.texture);\n}\nRTTNode.prototype = Object.create(TextureNode.prototype);\nRTTNode.prototype.constructor = RTTNode;\nRTTNode.prototype.nodeType = 'RTT';\nRTTNode.prototype.build = function (builder, output, uuid) {\n  var rttBuilder = new NodeBuilder();\n  rttBuilder.nodes = builder.nodes;\n  rttBuilder.updaters = builder.updaters;\n  this.material.fragment.value = this.input;\n  this.material.build({\n    builder: rttBuilder\n  });\n  return TextureNode.prototype.build.call(this, builder, output, uuid);\n};\nRTTNode.prototype.updateFramesaveTo = function (frame) {\n  this.saveTo.render = false;\n  if (this.saveTo !== this.saveToCurrent) {\n    if (this.saveToMaterial) this.saveToMaterial.dispose();\n    var material = new NodeMaterial();\n    material.fragment.value = this;\n    material.build();\n    var scene = new Scene();\n    var quad = new Mesh(new PlaneGeometry(2, 2), material);\n    quad.frustumCulled = false; // Avoid getting clipped\n\n    scene.add(quad);\n    this.saveToScene = scene;\n    this.saveToMaterial = material;\n  }\n  this.saveToCurrent = this.saveTo;\n  frame.renderer.setRenderTarget(this.saveTo.renderTarget);\n  if (this.saveTo.clear) frame.renderer.clear();\n  frame.renderer.render(this.saveToScene, this.camera);\n};\nRTTNode.prototype.updateFrame = function (frame) {\n  if (frame.renderer) {\n    // from the second frame\n    if (this.saveTo && this.saveTo.render === false) {\n      this.updateFramesaveTo(frame);\n    }\n    if (this.render) {\n      if (this.material.uniforms.renderTexture) {\n        this.material.uniforms.renderTexture.value = frame.renderTexture;\n      }\n      frame.renderer.setRenderTarget(this.renderTarget);\n      if (this.clear) frame.renderer.clear();\n      frame.renderer.render(this.scene, this.camera);\n    } // first frame\n\n    if (this.saveTo && this.saveTo.render === true) {\n      this.updateFramesaveTo(frame);\n    }\n  } else {\n    console.warn('RTTNode need a renderer in NodeFrame');\n  }\n};\nRTTNode.prototype.copy = function (source) {\n  TextureNode.prototype.copy.call(this, source);\n  this.saveTo = source.saveTo;\n  return this;\n};\nRTTNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = TextureNode.prototype.toJSON.call(this, meta);\n    if (this.saveTo) data.saveTo = this.saveTo.toJSON(meta).uuid;\n  }\n  return data;\n};\nexport { RTTNode };","map":{"version":3,"names":["WebGLRenderTarget","OrthographicCamera","Scene","Mesh","PlaneGeometry","NodeBuilder","NodeMaterial","TextureNode","RTTNode","width","height","input","options","clear","undefined","renderTarget","material","camera","scene","quad","frustumCulled","add","render","call","texture","prototype","Object","create","constructor","nodeType","build","builder","output","uuid","rttBuilder","nodes","updaters","fragment","value","updateFramesaveTo","frame","saveTo","saveToCurrent","saveToMaterial","dispose","saveToScene","renderer","setRenderTarget","updateFrame","uniforms","renderTexture","console","warn","copy","source","toJSON","meta","data","getJSONNode"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/inputs/RTTNode.js"],"sourcesContent":["import { WebGLRenderTarget, OrthographicCamera, Scene, Mesh, PlaneGeometry } from 'three';\nimport { NodeBuilder } from '../core/NodeBuilder.js';\nimport { NodeMaterial } from '../materials/NodeMaterial.js';\nimport { TextureNode } from './TextureNode.js';\n\nfunction RTTNode(width, height, input, options) {\n  options = options || {};\n  this.input = input;\n  this.clear = options.clear !== undefined ? options.clear : true;\n  this.renderTarget = new WebGLRenderTarget(width, height, options);\n  this.material = new NodeMaterial();\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n  this.scene = new Scene();\n  this.quad = new Mesh(new PlaneGeometry(2, 2), this.material);\n  this.quad.frustumCulled = false; // Avoid getting clipped\n\n  this.scene.add(this.quad);\n  this.render = true;\n  TextureNode.call(this, this.renderTarget.texture);\n}\n\nRTTNode.prototype = Object.create(TextureNode.prototype);\nRTTNode.prototype.constructor = RTTNode;\nRTTNode.prototype.nodeType = 'RTT';\n\nRTTNode.prototype.build = function (builder, output, uuid) {\n  var rttBuilder = new NodeBuilder();\n  rttBuilder.nodes = builder.nodes;\n  rttBuilder.updaters = builder.updaters;\n  this.material.fragment.value = this.input;\n  this.material.build({\n    builder: rttBuilder\n  });\n  return TextureNode.prototype.build.call(this, builder, output, uuid);\n};\n\nRTTNode.prototype.updateFramesaveTo = function (frame) {\n  this.saveTo.render = false;\n\n  if (this.saveTo !== this.saveToCurrent) {\n    if (this.saveToMaterial) this.saveToMaterial.dispose();\n    var material = new NodeMaterial();\n    material.fragment.value = this;\n    material.build();\n    var scene = new Scene();\n    var quad = new Mesh(new PlaneGeometry(2, 2), material);\n    quad.frustumCulled = false; // Avoid getting clipped\n\n    scene.add(quad);\n    this.saveToScene = scene;\n    this.saveToMaterial = material;\n  }\n\n  this.saveToCurrent = this.saveTo;\n  frame.renderer.setRenderTarget(this.saveTo.renderTarget);\n  if (this.saveTo.clear) frame.renderer.clear();\n  frame.renderer.render(this.saveToScene, this.camera);\n};\n\nRTTNode.prototype.updateFrame = function (frame) {\n  if (frame.renderer) {\n    // from the second frame\n    if (this.saveTo && this.saveTo.render === false) {\n      this.updateFramesaveTo(frame);\n    }\n\n    if (this.render) {\n      if (this.material.uniforms.renderTexture) {\n        this.material.uniforms.renderTexture.value = frame.renderTexture;\n      }\n\n      frame.renderer.setRenderTarget(this.renderTarget);\n      if (this.clear) frame.renderer.clear();\n      frame.renderer.render(this.scene, this.camera);\n    } // first frame\n\n\n    if (this.saveTo && this.saveTo.render === true) {\n      this.updateFramesaveTo(frame);\n    }\n  } else {\n    console.warn('RTTNode need a renderer in NodeFrame');\n  }\n};\n\nRTTNode.prototype.copy = function (source) {\n  TextureNode.prototype.copy.call(this, source);\n  this.saveTo = source.saveTo;\n  return this;\n};\n\nRTTNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = TextureNode.prototype.toJSON.call(this, meta);\n    if (this.saveTo) data.saveTo = this.saveTo.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { RTTNode };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}