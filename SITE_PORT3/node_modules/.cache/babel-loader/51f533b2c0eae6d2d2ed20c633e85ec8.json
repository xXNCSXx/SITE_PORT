{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nimport { FunctionNode } from '../core/FunctionNode.js';\nimport { MaxMIPLevelNode } from './MaxMIPLevelNode.js';\nfunction SpecularMIPLevelNode(roughness, texture) {\n  TempNode.call(this, 'f');\n  this.roughness = roughness;\n  this.texture = texture;\n  this.maxMIPLevel = undefined;\n}\nSpecularMIPLevelNode.Nodes = function () {\n  var getSpecularMIPLevel = new FunctionNode([\n  // taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n  'float getSpecularMIPLevel( const in float roughness, const in float maxMIPLevelScalar ) {', '\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );', '\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );',\n  // clamp to allowable LOD ranges.\n  '\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );', '}'].join('\\n'));\n  return {\n    getSpecularMIPLevel: getSpecularMIPLevel\n  };\n}();\nSpecularMIPLevelNode.prototype = Object.create(TempNode.prototype);\nSpecularMIPLevelNode.prototype.constructor = SpecularMIPLevelNode;\nSpecularMIPLevelNode.prototype.nodeType = 'SpecularMIPLevel';\nSpecularMIPLevelNode.prototype.setTexture = function (texture) {\n  this.texture = texture;\n  return this;\n};\nSpecularMIPLevelNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    this.maxMIPLevel = this.maxMIPLevel || new MaxMIPLevelNode();\n    this.maxMIPLevel.texture = this.texture;\n    var getSpecularMIPLevel = builder.include(SpecularMIPLevelNode.Nodes.getSpecularMIPLevel);\n    return builder.format(getSpecularMIPLevel + '( ' + this.roughness.build(builder, 'f') + ', ' + this.maxMIPLevel.build(builder, 'f') + ' )', this.type, output);\n  } else {\n    console.warn('THREE.SpecularMIPLevelNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('0.0', this.type, output);\n  }\n};\nSpecularMIPLevelNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.texture = source.texture;\n  this.roughness = source.roughness;\n  return this;\n};\nSpecularMIPLevelNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.texture = this.texture;\n    data.roughness = this.roughness;\n  }\n  return data;\n};\nexport { SpecularMIPLevelNode };","map":{"version":3,"names":["TempNode","FunctionNode","MaxMIPLevelNode","SpecularMIPLevelNode","roughness","texture","call","maxMIPLevel","undefined","Nodes","getSpecularMIPLevel","join","prototype","Object","create","constructor","nodeType","setTexture","generate","builder","output","isShader","include","format","build","type","console","warn","shader","copy","source","toJSON","meta","data","getJSONNode","createJSONNode"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/utils/SpecularMIPLevelNode.js"],"sourcesContent":["import { TempNode } from '../core/TempNode.js';\nimport { FunctionNode } from '../core/FunctionNode.js';\nimport { MaxMIPLevelNode } from './MaxMIPLevelNode.js';\n\nfunction SpecularMIPLevelNode(roughness, texture) {\n  TempNode.call(this, 'f');\n  this.roughness = roughness;\n  this.texture = texture;\n  this.maxMIPLevel = undefined;\n}\n\nSpecularMIPLevelNode.Nodes = function () {\n  var getSpecularMIPLevel = new FunctionNode([// taken from here: http://casual-effects.blogspot.ca/2011/08/plausible-environment-lighting-in-two.html\n  'float getSpecularMIPLevel( const in float roughness, const in float maxMIPLevelScalar ) {', '\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );', '\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );', // clamp to allowable LOD ranges.\n  '\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );', '}'].join('\\n'));\n  return {\n    getSpecularMIPLevel: getSpecularMIPLevel\n  };\n}();\n\nSpecularMIPLevelNode.prototype = Object.create(TempNode.prototype);\nSpecularMIPLevelNode.prototype.constructor = SpecularMIPLevelNode;\nSpecularMIPLevelNode.prototype.nodeType = 'SpecularMIPLevel';\n\nSpecularMIPLevelNode.prototype.setTexture = function (texture) {\n  this.texture = texture;\n  return this;\n};\n\nSpecularMIPLevelNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    this.maxMIPLevel = this.maxMIPLevel || new MaxMIPLevelNode();\n    this.maxMIPLevel.texture = this.texture;\n    var getSpecularMIPLevel = builder.include(SpecularMIPLevelNode.Nodes.getSpecularMIPLevel);\n    return builder.format(getSpecularMIPLevel + '( ' + this.roughness.build(builder, 'f') + ', ' + this.maxMIPLevel.build(builder, 'f') + ' )', this.type, output);\n  } else {\n    console.warn('THREE.SpecularMIPLevelNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('0.0', this.type, output);\n  }\n};\n\nSpecularMIPLevelNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.texture = source.texture;\n  this.roughness = source.roughness;\n  return this;\n};\n\nSpecularMIPLevelNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.texture = this.texture;\n    data.roughness = this.roughness;\n  }\n\n  return data;\n};\n\nexport { SpecularMIPLevelNode };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}