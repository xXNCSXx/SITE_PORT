{"ast":null,"code":"import { defaults, forEach } from \"../../../utils/utils\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider } from \"../../errors_public\";\nimport { DslMethodsCollectorVisitor } from \"./gast\";\nexport function resolveGrammar(options) {\n  options = defaults(options, {\n    errMsgProvider: defaultGrammarResolverErrorProvider\n  });\n  var topRulesTable = {};\n  forEach(options.rules, function (rule) {\n    topRulesTable[rule.name] = rule;\n  });\n  return orgResolveGrammar(topRulesTable, options.errMsgProvider);\n}\nexport function validateGrammar(options) {\n  options = defaults(options, {\n    errMsgProvider: defaultGrammarValidatorErrorProvider\n  });\n  return orgValidateGrammar(options.rules, options.maxLookahead, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\nexport function assignOccurrenceIndices(options) {\n  forEach(options.rules, function (currRule) {\n    var methodsCollector = new DslMethodsCollectorVisitor();\n    currRule.accept(methodsCollector);\n    forEach(methodsCollector.dslMethods, function (methods) {\n      forEach(methods, function (currMethod, arrIdx) {\n        currMethod.idx = arrIdx + 1;\n      });\n    });\n  });\n}","map":{"version":3,"sources":["../../../../../src/parse/grammar/gast/gast_resolver_public.ts"],"names":[],"mappings":"AAEA,SAAS,QAAQ,EAAE,OAAO,QAAQ,sBAAsB;AACxD,SAAS,cAAc,IAAI,iBAAiB,QAAQ,aAAa;AACjE,SAAS,eAAe,IAAI,kBAAkB,QAAQ,WAAW;AACjE,SACE,mCAAmC,EACnC,oCAAoC,QAC/B,qBAAqB;AAC5B,SAAS,0BAA0B,QAAQ,QAAQ;AASnD,OAAM,SAAU,cAAc,CAAC,OAG9B,EAAA;EACC,OAAO,GAAG,QAAQ,CAAC,OAAO,EAAE;IAC1B,cAAc,EAAE;GACjB,CAAC;EAEF,IAAM,aAAa,GAAG,CAAA,CAAE;EACxB,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,UAAC,IAAI,EAAA;IAC1B,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI;EACjC,CAAC,CAAC;EACF,OAAO,iBAAiB,CAAC,aAAa,EAAE,OAAO,CAAC,cAAc,CAAC;AACjE;AAEA,OAAM,SAAU,eAAe,CAAC,OAM/B,EAAA;EACC,OAAO,GAAG,QAAQ,CAAC,OAAO,EAAE;IAC1B,cAAc,EAAE;GACjB,CAAC;EAEF,OAAO,kBAAkB,CACvB,OAAO,CAAC,KAAK,EACb,OAAO,CAAC,YAAY,EACpB,OAAO,CAAC,UAAU,EAClB,OAAO,CAAC,cAAc,EACtB,OAAO,CAAC,WAAW,CACpB;AACH;AAEA,OAAM,SAAU,uBAAuB,CAAC,OAA0B,EAAA;EAChE,OAAO,CAAC,OAAO,CAAC,KAAK,EAAE,UAAC,QAAQ,EAAA;IAC9B,IAAM,gBAAgB,GAAG,IAAI,0BAA0B,CAAA,CAAE;IACzD,QAAQ,CAAC,MAAM,CAAC,gBAAgB,CAAC;IACjC,OAAO,CAAC,gBAAgB,CAAC,UAAU,EAAE,UAAC,OAAO,EAAA;MAC3C,OAAO,CAAC,OAAO,EAAE,UAAC,UAAqC,EAAE,MAAM,EAAA;QAC7D,UAAU,CAAC,GAAG,GAAG,MAAM,GAAG,CAAC;MAC7B,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ","sourceRoot":"","sourcesContent":["import { defaults, forEach } from \"../../../utils/utils\";\nimport { resolveGrammar as orgResolveGrammar } from \"../resolver\";\nimport { validateGrammar as orgValidateGrammar } from \"../checks\";\nimport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider } from \"../../errors_public\";\nimport { DslMethodsCollectorVisitor } from \"./gast\";\nexport function resolveGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarResolverErrorProvider\n    });\n    var topRulesTable = {};\n    forEach(options.rules, function (rule) {\n        topRulesTable[rule.name] = rule;\n    });\n    return orgResolveGrammar(topRulesTable, options.errMsgProvider);\n}\nexport function validateGrammar(options) {\n    options = defaults(options, {\n        errMsgProvider: defaultGrammarValidatorErrorProvider\n    });\n    return orgValidateGrammar(options.rules, options.maxLookahead, options.tokenTypes, options.errMsgProvider, options.grammarName);\n}\nexport function assignOccurrenceIndices(options) {\n    forEach(options.rules, function (currRule) {\n        var methodsCollector = new DslMethodsCollectorVisitor();\n        currRule.accept(methodsCollector);\n        forEach(methodsCollector.dslMethods, function (methods) {\n            forEach(methods, function (currMethod, arrIdx) {\n                currMethod.idx = arrIdx + 1;\n            });\n        });\n    });\n}\n//# sourceMappingURL=gast_resolver_public.js.map"]},"metadata":{},"sourceType":"module"}