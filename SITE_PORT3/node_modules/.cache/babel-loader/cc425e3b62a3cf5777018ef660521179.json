{"ast":null,"code":"import { Vector2, WebGLRenderTarget, OrthographicCamera, Scene, Mesh, PlaneGeometry, LinearFilter, RGBAFormat } from 'three';\nimport { NodeMaterial } from '../materials/NodeMaterial.js';\nimport { ScreenNode } from '../inputs/ScreenNode.js';\nfunction NodePostProcessing(renderer, renderTarget) {\n  if (renderTarget === undefined) {\n    var parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBAFormat\n    };\n    var size = renderer.getDrawingBufferSize(new Vector2());\n    renderTarget = new WebGLRenderTarget(size.width, size.height, parameters);\n  }\n  this.renderer = renderer;\n  this.renderTarget = renderTarget;\n  this.output = new ScreenNode();\n  this.material = new NodeMaterial();\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n  this.scene = new Scene();\n  this.quad = new Mesh(new PlaneGeometry(2, 2), this.material);\n  this.quad.frustumCulled = false; // Avoid getting clipped\n\n  this.scene.add(this.quad);\n  this.needsUpdate = true;\n}\nNodePostProcessing.prototype = {\n  constructor: NodePostProcessing,\n  render: function (scene, camera, frame) {\n    if (this.needsUpdate) {\n      this.material.dispose();\n      this.material.fragment.value = this.output;\n      this.material.build();\n      if (this.material.uniforms.renderTexture) {\n        this.material.uniforms.renderTexture.value = this.renderTarget.texture;\n      }\n      this.needsUpdate = false;\n    }\n    frame.setRenderer(this.renderer).setRenderTexture(this.renderTarget.texture);\n    this.renderer.setRenderTarget(this.renderTarget);\n    this.renderer.render(scene, camera);\n    frame.updateNode(this.material);\n    this.renderer.setRenderTarget(null);\n    this.renderer.render(this.scene, this.camera);\n  },\n  setPixelRatio: function (value) {\n    this.renderer.setPixelRatio(value);\n    var size = this.renderer.getSize(new Vector2());\n    this.setSize(size.width, size.height);\n  },\n  setSize: function (width, height) {\n    var pixelRatio = this.renderer.getPixelRatio();\n    this.renderTarget.setSize(width * pixelRatio, height * pixelRatio);\n    this.renderer.setSize(width, height);\n  },\n  copy: function (source) {\n    this.output = source.output;\n    return this;\n  },\n  toJSON: function (meta) {\n    var isRootObject = meta === undefined || typeof meta === 'string';\n    if (isRootObject) {\n      meta = {\n        nodes: {}\n      };\n    }\n    if (meta && !meta.post) meta.post = {};\n    if (!meta.post[this.uuid]) {\n      var data = {};\n      data.uuid = this.uuid;\n      data.type = 'NodePostProcessing';\n      meta.post[this.uuid] = data;\n      if (this.name !== '') data.name = this.name;\n      if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData;\n      data.output = this.output.toJSON(meta).uuid;\n    }\n    meta.post = this.uuid;\n    return meta;\n  }\n};\nexport { NodePostProcessing };","map":{"version":3,"names":["Vector2","WebGLRenderTarget","OrthographicCamera","Scene","Mesh","PlaneGeometry","LinearFilter","RGBAFormat","NodeMaterial","ScreenNode","NodePostProcessing","renderer","renderTarget","undefined","parameters","minFilter","magFilter","format","size","getDrawingBufferSize","width","height","output","material","camera","scene","quad","frustumCulled","add","needsUpdate","prototype","constructor","render","frame","dispose","fragment","value","build","uniforms","renderTexture","texture","setRenderer","setRenderTexture","setRenderTarget","updateNode","setPixelRatio","getSize","setSize","pixelRatio","getPixelRatio","copy","source","toJSON","meta","isRootObject","nodes","post","uuid","data","type","name","JSON","stringify","userData"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/postprocessing/NodePostProcessing.js"],"sourcesContent":["import { Vector2, WebGLRenderTarget, OrthographicCamera, Scene, Mesh, PlaneGeometry, LinearFilter, RGBAFormat } from 'three';\nimport { NodeMaterial } from '../materials/NodeMaterial.js';\nimport { ScreenNode } from '../inputs/ScreenNode.js';\n\nfunction NodePostProcessing(renderer, renderTarget) {\n  if (renderTarget === undefined) {\n    var parameters = {\n      minFilter: LinearFilter,\n      magFilter: LinearFilter,\n      format: RGBAFormat\n    };\n    var size = renderer.getDrawingBufferSize(new Vector2());\n    renderTarget = new WebGLRenderTarget(size.width, size.height, parameters);\n  }\n\n  this.renderer = renderer;\n  this.renderTarget = renderTarget;\n  this.output = new ScreenNode();\n  this.material = new NodeMaterial();\n  this.camera = new OrthographicCamera(-1, 1, 1, -1, 0, 1);\n  this.scene = new Scene();\n  this.quad = new Mesh(new PlaneGeometry(2, 2), this.material);\n  this.quad.frustumCulled = false; // Avoid getting clipped\n\n  this.scene.add(this.quad);\n  this.needsUpdate = true;\n}\n\nNodePostProcessing.prototype = {\n  constructor: NodePostProcessing,\n  render: function (scene, camera, frame) {\n    if (this.needsUpdate) {\n      this.material.dispose();\n      this.material.fragment.value = this.output;\n      this.material.build();\n\n      if (this.material.uniforms.renderTexture) {\n        this.material.uniforms.renderTexture.value = this.renderTarget.texture;\n      }\n\n      this.needsUpdate = false;\n    }\n\n    frame.setRenderer(this.renderer).setRenderTexture(this.renderTarget.texture);\n    this.renderer.setRenderTarget(this.renderTarget);\n    this.renderer.render(scene, camera);\n    frame.updateNode(this.material);\n    this.renderer.setRenderTarget(null);\n    this.renderer.render(this.scene, this.camera);\n  },\n  setPixelRatio: function (value) {\n    this.renderer.setPixelRatio(value);\n    var size = this.renderer.getSize(new Vector2());\n    this.setSize(size.width, size.height);\n  },\n  setSize: function (width, height) {\n    var pixelRatio = this.renderer.getPixelRatio();\n    this.renderTarget.setSize(width * pixelRatio, height * pixelRatio);\n    this.renderer.setSize(width, height);\n  },\n  copy: function (source) {\n    this.output = source.output;\n    return this;\n  },\n  toJSON: function (meta) {\n    var isRootObject = meta === undefined || typeof meta === 'string';\n\n    if (isRootObject) {\n      meta = {\n        nodes: {}\n      };\n    }\n\n    if (meta && !meta.post) meta.post = {};\n\n    if (!meta.post[this.uuid]) {\n      var data = {};\n      data.uuid = this.uuid;\n      data.type = 'NodePostProcessing';\n      meta.post[this.uuid] = data;\n      if (this.name !== '') data.name = this.name;\n      if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData;\n      data.output = this.output.toJSON(meta).uuid;\n    }\n\n    meta.post = this.uuid;\n    return meta;\n  }\n};\n\nexport { NodePostProcessing };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}