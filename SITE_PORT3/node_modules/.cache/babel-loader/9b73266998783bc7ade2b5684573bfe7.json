{"ast":null,"code":"import { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, PROD_TYPE } from \"../../grammar/lookahead\";\nimport { forEach, has, isES2015MapSupported } from \"../../../utils/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX } from \"../../grammar/keys\";\nimport { collectMethods, getProductionDslName } from \"../../grammar/gast/gast\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nvar LooksAhead = /** @class */function () {\n  function LooksAhead() {}\n  LooksAhead.prototype.initLooksAhead = function (config) {\n    this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\") ? config.dynamicTokensEnabled : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n    this.maxLookahead = has(config, \"maxLookahead\") ? config.maxLookahead : DEFAULT_PARSER_CONFIG.maxLookahead;\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    this.lookAheadFuncsCache = isES2015MapSupported() ? new Map() : [];\n    // Performance optimization on newer engines that support ES6 Map\n    // For larger Maps this is slightly faster than using a plain object (array in our case).\n    /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */\n    if (isES2015MapSupported()) {\n      this.getLaFuncFromCache = this.getLaFuncFromMap;\n      this.setLaFuncCache = this.setLaFuncCacheUsingMap;\n    } else {\n      this.getLaFuncFromCache = this.getLaFuncFromObj;\n      this.setLaFuncCache = this.setLaFuncUsingObj;\n    }\n  };\n  LooksAhead.prototype.preComputeLookaheadFunctions = function (rules) {\n    var _this = this;\n    forEach(rules, function (currRule) {\n      _this.TRACE_INIT(currRule.name + \" Rule Lookahead\", function () {\n        var _a = collectMethods(currRule),\n          alternation = _a.alternation,\n          repetition = _a.repetition,\n          option = _a.option,\n          repetitionMandatory = _a.repetitionMandatory,\n          repetitionMandatoryWithSeparator = _a.repetitionMandatoryWithSeparator,\n          repetitionWithSeparator = _a.repetitionWithSeparator;\n        forEach(alternation, function (currProd) {\n          var prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n          _this.TRACE_INIT(\"\" + getProductionDslName(currProd) + prodIdx, function () {\n            var laFunc = buildLookaheadFuncForOr(currProd.idx, currRule, currProd.maxLookahead || _this.maxLookahead, currProd.hasPredicates, _this.dynamicTokensEnabled, _this.lookAheadBuilderForAlternatives);\n            var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n            _this.setLaFuncCache(key, laFunc);\n          });\n        });\n        forEach(repetition, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, PROD_TYPE.REPETITION, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(option, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, PROD_TYPE.OPTION, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionMandatory, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, PROD_TYPE.REPETITION_MANDATORY, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionMandatoryWithSeparator, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionWithSeparator, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, PROD_TYPE.REPETITION_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n      });\n    });\n  };\n  LooksAhead.prototype.computeLookaheadFunc = function (rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n    var _this = this;\n    this.TRACE_INIT(\"\" + dslMethodName + (prodOccurrence === 0 ? \"\" : prodOccurrence), function () {\n      var laFunc = buildLookaheadFuncForOptionalProd(prodOccurrence, rule, prodMaxLookahead || _this.maxLookahead, _this.dynamicTokensEnabled, prodType, _this.lookAheadBuilderForOptional);\n      var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n      _this.setLaFuncCache(key, laFunc);\n    });\n  };\n  LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {\n    return buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled);\n  };\n  LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    return buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n  };\n  // this actually returns a number, but it is always used as a string (object prop key)\n  LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {\n    var currRuleShortName = this.getLastExplicitRuleShortName();\n    return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n  };\n  /* istanbul ignore next */\n  LooksAhead.prototype.getLaFuncFromCache = function (key) {\n    return undefined;\n  };\n  LooksAhead.prototype.getLaFuncFromMap = function (key) {\n    return this.lookAheadFuncsCache.get(key);\n  };\n  /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n  LooksAhead.prototype.getLaFuncFromObj = function (key) {\n    return this.lookAheadFuncsCache[key];\n  };\n  /* istanbul ignore next */\n  LooksAhead.prototype.setLaFuncCache = function (key, value) {};\n  LooksAhead.prototype.setLaFuncCacheUsingMap = function (key, value) {\n    this.lookAheadFuncsCache.set(key, value);\n  };\n  /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n  LooksAhead.prototype.setLaFuncUsingObj = function (key, value) {\n    this.lookAheadFuncsCache[key] = value;\n  };\n  return LooksAhead;\n}();\nexport { LooksAhead };","map":{"version":3,"sources":["../../../../../src/parse/parser/traits/looksahead.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["import { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, PROD_TYPE } from \"../../grammar/lookahead\";\nimport { forEach, has, isES2015MapSupported } from \"../../../utils/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX } from \"../../grammar/keys\";\nimport { collectMethods, getProductionDslName } from \"../../grammar/gast/gast\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\nvar LooksAhead = /** @class */ (function () {\n    function LooksAhead() {\n    }\n    LooksAhead.prototype.initLooksAhead = function (config) {\n        this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\")\n            ? config.dynamicTokensEnabled\n            : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n        this.maxLookahead = has(config, \"maxLookahead\")\n            ? config.maxLookahead\n            : DEFAULT_PARSER_CONFIG.maxLookahead;\n        /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n        this.lookAheadFuncsCache = isES2015MapSupported() ? new Map() : [];\n        // Performance optimization on newer engines that support ES6 Map\n        // For larger Maps this is slightly faster than using a plain object (array in our case).\n        /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */\n        if (isES2015MapSupported()) {\n            this.getLaFuncFromCache = this.getLaFuncFromMap;\n            this.setLaFuncCache = this.setLaFuncCacheUsingMap;\n        }\n        else {\n            this.getLaFuncFromCache = this.getLaFuncFromObj;\n            this.setLaFuncCache = this.setLaFuncUsingObj;\n        }\n    };\n    LooksAhead.prototype.preComputeLookaheadFunctions = function (rules) {\n        var _this = this;\n        forEach(rules, function (currRule) {\n            _this.TRACE_INIT(currRule.name + \" Rule Lookahead\", function () {\n                var _a = collectMethods(currRule), alternation = _a.alternation, repetition = _a.repetition, option = _a.option, repetitionMandatory = _a.repetitionMandatory, repetitionMandatoryWithSeparator = _a.repetitionMandatoryWithSeparator, repetitionWithSeparator = _a.repetitionWithSeparator;\n                forEach(alternation, function (currProd) {\n                    var prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n                    _this.TRACE_INIT(\"\" + getProductionDslName(currProd) + prodIdx, function () {\n                        var laFunc = buildLookaheadFuncForOr(currProd.idx, currRule, currProd.maxLookahead || _this.maxLookahead, currProd.hasPredicates, _this.dynamicTokensEnabled, _this.lookAheadBuilderForAlternatives);\n                        var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n                        _this.setLaFuncCache(key, laFunc);\n                    });\n                });\n                forEach(repetition, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, PROD_TYPE.REPETITION, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(option, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, PROD_TYPE.OPTION, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatory, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, PROD_TYPE.REPETITION_MANDATORY, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionMandatoryWithSeparator, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n                forEach(repetitionWithSeparator, function (currProd) {\n                    _this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, PROD_TYPE.REPETITION_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n                });\n            });\n        });\n    };\n    LooksAhead.prototype.computeLookaheadFunc = function (rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n        var _this = this;\n        this.TRACE_INIT(\"\" + dslMethodName + (prodOccurrence === 0 ? \"\" : prodOccurrence), function () {\n            var laFunc = buildLookaheadFuncForOptionalProd(prodOccurrence, rule, prodMaxLookahead || _this.maxLookahead, _this.dynamicTokensEnabled, prodType, _this.lookAheadBuilderForOptional);\n            var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n            _this.setLaFuncCache(key, laFunc);\n        });\n    };\n    LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {\n        return buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled);\n    };\n    LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n        return buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n    };\n    // this actually returns a number, but it is always used as a string (object prop key)\n    LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {\n        var currRuleShortName = this.getLastExplicitRuleShortName();\n        return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.getLaFuncFromCache = function (key) {\n        return undefined;\n    };\n    LooksAhead.prototype.getLaFuncFromMap = function (key) {\n        return this.lookAheadFuncsCache.get(key);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.getLaFuncFromObj = function (key) {\n        return this.lookAheadFuncsCache[key];\n    };\n    /* istanbul ignore next */\n    LooksAhead.prototype.setLaFuncCache = function (key, value) { };\n    LooksAhead.prototype.setLaFuncCacheUsingMap = function (key, value) {\n        this.lookAheadFuncsCache.set(key, value);\n    };\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n    LooksAhead.prototype.setLaFuncUsingObj = function (key, value) {\n        this.lookAheadFuncsCache[key] = value;\n    };\n    return LooksAhead;\n}());\nexport { LooksAhead };\n//# sourceMappingURL=looksahead.js.map"]},"metadata":{},"sourceType":"module"}