{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drncs\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\PORTIFOLIO\\\\SITE3\\\\src\\\\components\\\\Effects.js\",\n  _s = $RefreshSig$();\nimport * as THREE from 'three';\nimport React, { useEffect, useRef } from 'react';\nimport { extend, useThree, useFrame } from '@react-three/fiber';\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer';\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass';\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass';\nimport { GammaCorrectionShader } from 'three/examples/jsm/shaders/GammaCorrectionShader';\nimport { WaterPass } from './shaders/WaterPass';\nimport state from '../state';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nextend({\n  EffectComposer,\n  ShaderPass,\n  RenderPass,\n  WaterPass\n});\nexport default function Effects() {\n  _s();\n  const composer = useRef();\n  const water = useRef();\n  const {\n    gl,\n    size,\n    camera,\n    scene\n  } = useThree();\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size]);\n  let last = state.top;\n  let index = 0;\n  let values = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  useFrame(() => {\n    const {\n      top\n    } = state;\n    values[index] = Math.abs(top - last);\n    const normalize = values.reduce((a, b) => a + b) / values.length;\n    water.current.factor = THREE.MathUtils.lerp(water.current.factor, normalize / 20, 0.1);\n    last = top;\n    index = (index + 1) % 10;\n    gl.autoClear = true;\n    composer.current.render();\n  }, 1);\n  return /*#__PURE__*/_jsxDEV(\"effectComposer\", {\n    ref: composer,\n    args: [gl],\n    children: [/*#__PURE__*/_jsxDEV(\"renderPass\", {\n      attachArray: \"passes\",\n      scene: scene,\n      camera: camera\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"waterPass\", {\n      attachArray: \"passes\",\n      ref: water\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"shaderPass\", {\n      attachArray: \"passes\",\n      args: [GammaCorrectionShader]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(Effects, \"GOcH8rs4ijlpd0HNXQcmh1iK13s=\", false, function () {\n  return [useThree, useFrame];\n});\n_c = Effects;\nvar _c;\n$RefreshReg$(_c, \"Effects\");","map":{"version":3,"names":["THREE","React","useEffect","useRef","extend","useThree","useFrame","EffectComposer","ShaderPass","RenderPass","GammaCorrectionShader","WaterPass","state","jsxDEV","_jsxDEV","Effects","_s","composer","water","gl","size","camera","scene","current","setSize","width","height","last","top","index","values","Math","abs","normalize","reduce","a","b","length","factor","MathUtils","lerp","autoClear","render","ref","args","children","attachArray","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/drncs/OneDrive/Área de Trabalho/PORTIFOLIO/SITE3/src/components/Effects.js"],"sourcesContent":["import * as THREE from 'three'\nimport React, { useEffect, useRef } from 'react'\nimport { extend, useThree, useFrame } from '@react-three/fiber'\nimport { EffectComposer } from 'three/examples/jsm/postprocessing/EffectComposer'\nimport { ShaderPass } from 'three/examples/jsm/postprocessing/ShaderPass'\nimport { RenderPass } from 'three/examples/jsm/postprocessing/RenderPass'\nimport { GammaCorrectionShader } from 'three/examples/jsm/shaders/GammaCorrectionShader'\nimport { WaterPass } from './shaders/WaterPass'\nimport state from '../state'\n\nextend({ EffectComposer, ShaderPass, RenderPass, WaterPass })\n\nexport default function Effects() {\n  const composer = useRef()\n  const water = useRef()\n  const { gl, size, camera, scene } = useThree()\n  useEffect(() => void composer.current.setSize(size.width, size.height), [size])\n  let last = state.top\n  let index = 0\n  let values = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\n  useFrame(() => {\n    const { top } = state\n    values[index] = Math.abs(top - last)\n    const normalize = values.reduce((a, b) => a + b) / values.length\n    water.current.factor = THREE.MathUtils.lerp(water.current.factor, normalize / 20, 0.1)\n    last = top\n    index = (index + 1) % 10\n    gl.autoClear = true\n    composer.current.render()\n  }, 1)\n  return (\n    <effectComposer ref={composer} args={[gl]}>\n      <renderPass attachArray=\"passes\" scene={scene} camera={camera} />\n      <waterPass attachArray=\"passes\" ref={water} />\n      <shaderPass attachArray=\"passes\" args={[GammaCorrectionShader]} />\n    </effectComposer>\n  )\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}