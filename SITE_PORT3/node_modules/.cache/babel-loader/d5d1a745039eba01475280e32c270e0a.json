{"ast":null,"code":"import { addNoneTerminalToCst, addTerminalToCst, setNodeLocationFull, setNodeLocationOnlyOffset } from \"../../cst/cst\";\nimport { has, isUndefined, keys, NOOP } from \"../../../utils/utils\";\nimport { createBaseSemanticVisitorConstructor, createBaseVisitorConstructorWithDefaults } from \"../../cst/cst_visitor\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\";\n/**\n * This trait is responsible for the CST building logic.\n */\nvar TreeBuilder = /** @class */function () {\n  function TreeBuilder() {}\n  TreeBuilder.prototype.initTreeBuilder = function (config) {\n    this.CST_STACK = [];\n    // outputCst is no longer exposed/defined in the pubic API\n    this.outputCst = config.outputCst;\n    this.nodeLocationTracking = has(config, \"nodeLocationTracking\") ? config.nodeLocationTracking : DEFAULT_PARSER_CONFIG.nodeLocationTracking;\n    if (!this.outputCst) {\n      this.cstInvocationStateUpdate = NOOP;\n      this.cstFinallyStateUpdate = NOOP;\n      this.cstPostTerminal = NOOP;\n      this.cstPostNonTerminal = NOOP;\n      this.cstPostRule = NOOP;\n    } else {\n      if (/full/i.test(this.nodeLocationTracking)) {\n        if (this.recoveryEnabled) {\n          this.setNodeLocationFromToken = setNodeLocationFull;\n          this.setNodeLocationFromNode = setNodeLocationFull;\n          this.cstPostRule = NOOP;\n          this.setInitialNodeLocation = this.setInitialNodeLocationFullRecovery;\n        } else {\n          this.setNodeLocationFromToken = NOOP;\n          this.setNodeLocationFromNode = NOOP;\n          this.cstPostRule = this.cstPostRuleFull;\n          this.setInitialNodeLocation = this.setInitialNodeLocationFullRegular;\n        }\n      } else if (/onlyOffset/i.test(this.nodeLocationTracking)) {\n        if (this.recoveryEnabled) {\n          this.setNodeLocationFromToken = setNodeLocationOnlyOffset;\n          this.setNodeLocationFromNode = setNodeLocationOnlyOffset;\n          this.cstPostRule = NOOP;\n          this.setInitialNodeLocation = this.setInitialNodeLocationOnlyOffsetRecovery;\n        } else {\n          this.setNodeLocationFromToken = NOOP;\n          this.setNodeLocationFromNode = NOOP;\n          this.cstPostRule = this.cstPostRuleOnlyOffset;\n          this.setInitialNodeLocation = this.setInitialNodeLocationOnlyOffsetRegular;\n        }\n      } else if (/none/i.test(this.nodeLocationTracking)) {\n        this.setNodeLocationFromToken = NOOP;\n        this.setNodeLocationFromNode = NOOP;\n        this.cstPostRule = NOOP;\n        this.setInitialNodeLocation = NOOP;\n      } else {\n        throw Error(\"Invalid <nodeLocationTracking> config option: \\\"\" + config.nodeLocationTracking + \"\\\"\");\n      }\n    }\n  };\n  TreeBuilder.prototype.setInitialNodeLocationOnlyOffsetRecovery = function (cstNode) {\n    cstNode.location = {\n      startOffset: NaN,\n      endOffset: NaN\n    };\n  };\n  TreeBuilder.prototype.setInitialNodeLocationOnlyOffsetRegular = function (cstNode) {\n    cstNode.location = {\n      // without error recovery the starting Location of a new CstNode is guaranteed\n      // To be the next Token's startOffset (for valid inputs).\n      // For invalid inputs there won't be any CSTOutput so this potential\n      // inaccuracy does not matter\n      startOffset: this.LA(1).startOffset,\n      endOffset: NaN\n    };\n  };\n  TreeBuilder.prototype.setInitialNodeLocationFullRecovery = function (cstNode) {\n    cstNode.location = {\n      startOffset: NaN,\n      startLine: NaN,\n      startColumn: NaN,\n      endOffset: NaN,\n      endLine: NaN,\n      endColumn: NaN\n    };\n  };\n  /**\n     *  @see setInitialNodeLocationOnlyOffsetRegular for explanation why this work\n        * @param cstNode\n     */\n  TreeBuilder.prototype.setInitialNodeLocationFullRegular = function (cstNode) {\n    var nextToken = this.LA(1);\n    cstNode.location = {\n      startOffset: nextToken.startOffset,\n      startLine: nextToken.startLine,\n      startColumn: nextToken.startColumn,\n      endOffset: NaN,\n      endLine: NaN,\n      endColumn: NaN\n    };\n  };\n  TreeBuilder.prototype.cstInvocationStateUpdate = function (fullRuleName, shortName) {\n    var cstNode = {\n      name: fullRuleName,\n      children: {}\n    };\n    this.setInitialNodeLocation(cstNode);\n    this.CST_STACK.push(cstNode);\n  };\n  TreeBuilder.prototype.cstFinallyStateUpdate = function () {\n    this.CST_STACK.pop();\n  };\n  TreeBuilder.prototype.cstPostRuleFull = function (ruleCstNode) {\n    var prevToken = this.LA(0);\n    var loc = ruleCstNode.location;\n    // If this condition is true it means we consumed at least one Token\n    // In this CstNode.\n    if (loc.startOffset <= prevToken.startOffset === true) {\n      loc.endOffset = prevToken.endOffset;\n      loc.endLine = prevToken.endLine;\n      loc.endColumn = prevToken.endColumn;\n    }\n    // \"empty\" CstNode edge case\n    else {\n      loc.startOffset = NaN;\n      loc.startLine = NaN;\n      loc.startColumn = NaN;\n    }\n  };\n  TreeBuilder.prototype.cstPostRuleOnlyOffset = function (ruleCstNode) {\n    var prevToken = this.LA(0);\n    var loc = ruleCstNode.location;\n    // If this condition is true it means we consumed at least one Token\n    // In this CstNode.\n    if (loc.startOffset <= prevToken.startOffset === true) {\n      loc.endOffset = prevToken.endOffset;\n    }\n    // \"empty\" CstNode edge case\n    else {\n      loc.startOffset = NaN;\n    }\n  };\n  TreeBuilder.prototype.cstPostTerminal = function (key, consumedToken) {\n    var rootCst = this.CST_STACK[this.CST_STACK.length - 1];\n    addTerminalToCst(rootCst, consumedToken, key);\n    // This is only used when **both** error recovery and CST Output are enabled.\n    this.setNodeLocationFromToken(rootCst.location, consumedToken);\n  };\n  TreeBuilder.prototype.cstPostNonTerminal = function (ruleCstResult, ruleName) {\n    var preCstNode = this.CST_STACK[this.CST_STACK.length - 1];\n    addNoneTerminalToCst(preCstNode, ruleName, ruleCstResult);\n    // This is only used when **both** error recovery and CST Output are enabled.\n    this.setNodeLocationFromNode(preCstNode.location, ruleCstResult.location);\n  };\n  TreeBuilder.prototype.getBaseCstVisitorConstructor = function () {\n    if (isUndefined(this.baseCstVisitorConstructor)) {\n      var newBaseCstVisitorConstructor = createBaseSemanticVisitorConstructor(this.className, keys(this.gastProductionsCache));\n      this.baseCstVisitorConstructor = newBaseCstVisitorConstructor;\n      return newBaseCstVisitorConstructor;\n    }\n    return this.baseCstVisitorConstructor;\n  };\n  TreeBuilder.prototype.getBaseCstVisitorConstructorWithDefaults = function () {\n    if (isUndefined(this.baseCstVisitorWithDefaultsConstructor)) {\n      var newConstructor = createBaseVisitorConstructorWithDefaults(this.className, keys(this.gastProductionsCache), this.getBaseCstVisitorConstructor());\n      this.baseCstVisitorWithDefaultsConstructor = newConstructor;\n      return newConstructor;\n    }\n    return this.baseCstVisitorWithDefaultsConstructor;\n  };\n  TreeBuilder.prototype.getLastExplicitRuleShortName = function () {\n    var ruleStack = this.RULE_STACK;\n    return ruleStack[ruleStack.length - 1];\n  };\n  TreeBuilder.prototype.getPreviousExplicitRuleShortName = function () {\n    var ruleStack = this.RULE_STACK;\n    return ruleStack[ruleStack.length - 2];\n  };\n  TreeBuilder.prototype.getLastExplicitRuleOccurrenceIndex = function () {\n    var occurrenceStack = this.RULE_OCCURRENCE_STACK;\n    return occurrenceStack[occurrenceStack.length - 1];\n  };\n  return TreeBuilder;\n}();\nexport { TreeBuilder };","map":{"version":3,"names":["addNoneTerminalToCst","addTerminalToCst","setNodeLocationFull","setNodeLocationOnlyOffset","has","isUndefined","keys","NOOP","createBaseSemanticVisitorConstructor","createBaseVisitorConstructorWithDefaults","DEFAULT_PARSER_CONFIG","TreeBuilder","prototype","initTreeBuilder","config","CST_STACK","outputCst","nodeLocationTracking","cstInvocationStateUpdate","cstFinallyStateUpdate","cstPostTerminal","cstPostNonTerminal","cstPostRule","test","recoveryEnabled","setNodeLocationFromToken","setNodeLocationFromNode","setInitialNodeLocation","setInitialNodeLocationFullRecovery","cstPostRuleFull","setInitialNodeLocationFullRegular","setInitialNodeLocationOnlyOffsetRecovery","cstPostRuleOnlyOffset","setInitialNodeLocationOnlyOffsetRegular","Error","cstNode","location","startOffset","NaN","endOffset","LA","startLine","startColumn","endLine","endColumn","nextToken","fullRuleName","shortName","name","children","push","pop","ruleCstNode","prevToken","loc","key","consumedToken","rootCst","length","ruleCstResult","ruleName","preCstNode","getBaseCstVisitorConstructor","baseCstVisitorConstructor","newBaseCstVisitorConstructor","className","gastProductionsCache","getBaseCstVisitorConstructorWithDefaults","baseCstVisitorWithDefaultsConstructor","newConstructor","getLastExplicitRuleShortName","ruleStack","RULE_STACK","getPreviousExplicitRuleShortName","getLastExplicitRuleOccurrenceIndex","occurrenceStack","RULE_OCCURRENCE_STACK"],"sources":["../../../../../src/parse/parser/traits/tree_builder.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}