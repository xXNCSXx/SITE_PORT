{"ast":null,"code":"import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public\";\nimport * as utils from \"../utils/utils\";\nimport { first, map, reduce } from \"../utils/utils\";\nimport { NonTerminal, Rule, Terminal } from \"./grammar/gast/gast_public\";\nimport { getProductionDslName } from \"./grammar/gast/gast\";\nexport var defaultParserErrorProvider = {\n  buildMismatchTokenMessage: function (_a) {\n    var expected = _a.expected,\n      actual = _a.actual,\n      previous = _a.previous,\n      ruleName = _a.ruleName;\n    var hasLabel = hasTokenLabel(expected);\n    var expectedMsg = hasLabel ? \"--> \" + tokenLabel(expected) + \" <--\" : \"token of type --> \" + expected.name + \" <--\";\n    var msg = \"Expecting \" + expectedMsg + \" but found --> '\" + actual.image + \"' <--\";\n    return msg;\n  },\n  buildNotAllInputParsedMessage: function (_a) {\n    var firstRedundant = _a.firstRedundant,\n      ruleName = _a.ruleName;\n    return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n  },\n  buildNoViableAltMessage: function (_a) {\n    var expectedPathsPerAlt = _a.expectedPathsPerAlt,\n      actual = _a.actual,\n      previous = _a.previous,\n      customUserDescription = _a.customUserDescription,\n      ruleName = _a.ruleName;\n    var errPrefix = \"Expecting: \";\n    // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n    var actualText = first(actual).image;\n    var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      var allLookAheadPaths = reduce(expectedPathsPerAlt, function (result, currAltPaths) {\n        return result.concat(currAltPaths);\n      }, []);\n      var nextValidTokenSequences = map(allLookAheadPaths, function (currPath) {\n        return \"[\" + map(currPath, function (currTokenType) {\n          return tokenLabel(currTokenType);\n        }).join(\", \") + \"]\";\n      });\n      var nextValidSequenceItems = map(nextValidTokenSequences, function (itemMsg, idx) {\n        return \"  \" + (idx + 1) + \". \" + itemMsg;\n      });\n      var calculatedDescription = \"one of these possible Token sequences:\\n\" + nextValidSequenceItems.join(\"\\n\");\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  },\n  buildEarlyExitMessage: function (_a) {\n    var expectedIterationPaths = _a.expectedIterationPaths,\n      actual = _a.actual,\n      customUserDescription = _a.customUserDescription,\n      ruleName = _a.ruleName;\n    var errPrefix = \"Expecting: \";\n    // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n    var actualText = first(actual).image;\n    var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      var nextValidTokenSequences = map(expectedIterationPaths, function (currPath) {\n        return \"[\" + map(currPath, function (currTokenType) {\n          return tokenLabel(currTokenType);\n        }).join(\",\") + \"]\";\n      });\n      var calculatedDescription = \"expecting at least one iteration which starts with one of these possible Token sequences::\\n  \" + (\"<\" + nextValidTokenSequences.join(\" ,\") + \">\");\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  }\n};\nObject.freeze(defaultParserErrorProvider);\nexport var defaultGrammarResolverErrorProvider = {\n  buildRuleNotFoundError: function (topLevelRule, undefinedRule) {\n    var msg = \"Invalid grammar, reference to a rule which is not defined: ->\" + undefinedRule.nonTerminalName + \"<-\\n\" + \"inside top level rule: ->\" + topLevelRule.name + \"<-\";\n    return msg;\n  }\n};\nexport var defaultGrammarValidatorErrorProvider = {\n  buildDuplicateFoundError: function (topLevelRule, duplicateProds) {\n    function getExtraProductionArgument(prod) {\n      if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n      } else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n      } else {\n        return \"\";\n      }\n    }\n    var topLevelName = topLevelRule.name;\n    var duplicateProd = first(duplicateProds);\n    var index = duplicateProd.idx;\n    var dslName = getProductionDslName(duplicateProd);\n    var extraArgument = getExtraProductionArgument(duplicateProd);\n    var hasExplicitIndex = index > 0;\n    var msg = \"->\" + dslName + (hasExplicitIndex ? index : \"\") + \"<- \" + (extraArgument ? \"with argument: ->\" + extraArgument + \"<-\" : \"\") + \"\\n                  appears more than once (\" + duplicateProds.length + \" times) in the top level rule: ->\" + topLevelName + \"<-.                  \\n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \\n                  \";\n    // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n    msg = msg.replace(/[ \\t]+/g, \" \");\n    msg = msg.replace(/\\s\\s+/g, \"\\n\");\n    return msg;\n  },\n  buildNamespaceConflictError: function (rule) {\n    var errMsg = \"Namespace conflict found in grammar.\\n\" + (\"The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <\" + rule.name + \">.\\n\") + \"To resolve this make sure each Terminal and Non-Terminal names are unique\\n\" + \"This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n\" + \"and Non-Terminal names start with a lower case letter.\";\n    return errMsg;\n  },\n  buildAlternationPrefixAmbiguityError: function (options) {\n    var pathMsg = map(options.prefixPath, function (currTok) {\n      return tokenLabel(currTok);\n    }).join(\", \");\n    var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n    var errMsg = \"Ambiguous alternatives: <\" + options.ambiguityIndices.join(\" ,\") + \"> due to common lookahead prefix\\n\" + (\"in <OR\" + occurrence + \"> inside <\" + options.topLevelRule.name + \"> Rule,\\n\") + (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\") + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n\" + \"For Further details.\";\n    return errMsg;\n  },\n  buildAlternationAmbiguityError: function (options) {\n    var pathMsg = map(options.prefixPath, function (currtok) {\n      return tokenLabel(currtok);\n    }).join(\", \");\n    var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n    var currMessage = \"Ambiguous Alternatives Detected: <\" + options.ambiguityIndices.join(\" ,\") + \"> in <OR\" + occurrence + \">\" + (\" inside <\" + options.topLevelRule.name + \"> Rule,\\n\") + (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\");\n    currMessage = currMessage + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n\" + \"For Further details.\";\n    return currMessage;\n  },\n  buildEmptyRepetitionError: function (options) {\n    var dslName = getProductionDslName(options.repetition);\n    if (options.repetition.idx !== 0) {\n      dslName += options.repetition.idx;\n    }\n    var errMsg = \"The repetition <\" + dslName + \"> within Rule <\" + options.topLevelRule.name + \"> can never consume any tokens.\\n\" + \"This could lead to an infinite loop.\";\n    return errMsg;\n  },\n  // TODO: remove - `errors_public` from nyc.config.js exclude\n  //       once this method is fully removed from this file\n  buildTokenNameError: function (options) {\n    /* istanbul ignore next */\n    return \"deprecated\";\n  },\n  buildEmptyAlternationError: function (options) {\n    var errMsg = \"Ambiguous empty alternative: <\" + (options.emptyChoiceIdx + 1) + \">\" + (\" in <OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n\") + \"Only the last alternative may be an empty alternative.\";\n    return errMsg;\n  },\n  buildTooManyAlternativesError: function (options) {\n    var errMsg = \"An Alternation cannot have more than 256 alternatives:\\n\" + (\"<OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n has \" + (options.alternation.definition.length + 1) + \" alternatives.\");\n    return errMsg;\n  },\n  buildLeftRecursionError: function (options) {\n    var ruleName = options.topLevelRule.name;\n    var pathNames = utils.map(options.leftRecursionPath, function (currRule) {\n      return currRule.name;\n    });\n    var leftRecursivePath = ruleName + \" --> \" + pathNames.concat([ruleName]).join(\" --> \");\n    var errMsg = \"Left Recursion found in grammar.\\n\" + (\"rule: <\" + ruleName + \"> can be invoked from itself (directly or indirectly)\\n\") + (\"without consuming any Tokens. The grammar path that causes this is: \\n \" + leftRecursivePath + \"\\n\") + \" To fix this refactor your grammar to remove the left recursion.\\n\" + \"see: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring.\";\n    return errMsg;\n  },\n  // TODO: remove - `errors_public` from nyc.config.js exclude\n  //       once this method is fully removed from this file\n  buildInvalidRuleNameError: function (options) {\n    /* istanbul ignore next */\n    return \"deprecated\";\n  },\n  buildDuplicateRuleNameError: function (options) {\n    var ruleName;\n    if (options.topLevelRule instanceof Rule) {\n      ruleName = options.topLevelRule.name;\n    } else {\n      ruleName = options.topLevelRule;\n    }\n    var errMsg = \"Duplicate definition, rule: ->\" + ruleName + \"<- is already defined in the grammar: ->\" + options.grammarName + \"<-\";\n    return errMsg;\n  }\n};","map":{"version":3,"names":["hasTokenLabel","tokenLabel","utils","first","map","reduce","NonTerminal","Rule","Terminal","getProductionDslName","defaultParserErrorProvider","buildMismatchTokenMessage","_a","expected","actual","previous","ruleName","hasLabel","expectedMsg","name","msg","image","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","actualText","errSuffix","allLookAheadPaths","result","currAltPaths","concat","nextValidTokenSequences","currPath","currTokenType","join","nextValidSequenceItems","itemMsg","idx","calculatedDescription","buildEarlyExitMessage","expectedIterationPaths","Object","freeze","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","topLevelRule","undefinedRule","nonTerminalName","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","getExtraProductionArgument","prod","terminalType","topLevelName","duplicateProd","index","dslName","extraArgument","hasExplicitIndex","length","replace","buildNamespaceConflictError","rule","errMsg","buildAlternationPrefixAmbiguityError","options","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","definition","buildLeftRecursionError","pathNames","leftRecursionPath","currRule","leftRecursivePath","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName"],"sources":["../../../src/parse/errors_public.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}