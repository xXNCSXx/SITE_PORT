{"ast":null,"code":"import { UniformsUtils, ShaderMaterial } from 'three';\nimport { FullScreenQuad, Pass } from './Pass.js';\nimport { HalftoneShader } from '../shaders/HalftoneShader.js';\n\n/**\n * RGB Halftone pass for three.js effects composer. Requires HalftoneShader.\n */\n\nvar HalftonePass = function (width, height, params) {\n  if (HalftoneShader === undefined) {\n    console.error('THREE.HalftonePass requires HalftoneShader');\n  }\n  this.uniforms = UniformsUtils.clone(HalftoneShader.uniforms);\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    fragmentShader: HalftoneShader.fragmentShader,\n    vertexShader: HalftoneShader.vertexShader\n  }); // set params\n\n  this.uniforms.width.value = width;\n  this.uniforms.height.value = height;\n  for (let key in params) {\n    if (params.hasOwnProperty(key) && this.uniforms.hasOwnProperty(key)) {\n      this.uniforms[key].value = params[key];\n    }\n  }\n  this.fsQuad = new FullScreenQuad(this.material);\n};\nHalftonePass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: HalftonePass,\n  render: function (renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive*/) {\n    this.material.uniforms['tDiffuse'].value = readBuffer.texture;\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  },\n  setSize: function (width, height) {\n    this.uniforms.width.value = width;\n    this.uniforms.height.value = height;\n  }\n});\nexport { HalftonePass };","map":{"version":3,"names":["UniformsUtils","ShaderMaterial","FullScreenQuad","Pass","HalftoneShader","HalftonePass","width","height","params","undefined","console","error","uniforms","clone","material","fragmentShader","vertexShader","value","key","hasOwnProperty","fsQuad","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","texture","renderToScreen","setRenderTarget","clear","setSize"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/postprocessing/HalftonePass.js"],"sourcesContent":["import { UniformsUtils, ShaderMaterial } from 'three';\nimport { FullScreenQuad, Pass } from './Pass.js';\nimport { HalftoneShader } from '../shaders/HalftoneShader.js';\n\n/**\n * RGB Halftone pass for three.js effects composer. Requires HalftoneShader.\n */\n\nvar HalftonePass = function (width, height, params) {\n  if (HalftoneShader === undefined) {\n    console.error('THREE.HalftonePass requires HalftoneShader');\n  }\n\n  this.uniforms = UniformsUtils.clone(HalftoneShader.uniforms);\n  this.material = new ShaderMaterial({\n    uniforms: this.uniforms,\n    fragmentShader: HalftoneShader.fragmentShader,\n    vertexShader: HalftoneShader.vertexShader\n  }); // set params\n\n  this.uniforms.width.value = width;\n  this.uniforms.height.value = height;\n\n  for (let key in params) {\n    if (params.hasOwnProperty(key) && this.uniforms.hasOwnProperty(key)) {\n      this.uniforms[key].value = params[key];\n    }\n  }\n\n  this.fsQuad = new FullScreenQuad(this.material);\n};\n\nHalftonePass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: HalftonePass,\n  render: function (renderer, writeBuffer, readBuffer\n  /*, deltaTime, maskActive*/\n  ) {\n    this.material.uniforms['tDiffuse'].value = readBuffer.texture;\n\n    if (this.renderToScreen) {\n      renderer.setRenderTarget(null);\n      this.fsQuad.render(renderer);\n    } else {\n      renderer.setRenderTarget(writeBuffer);\n      if (this.clear) renderer.clear();\n      this.fsQuad.render(renderer);\n    }\n  },\n  setSize: function (width, height) {\n    this.uniforms.width.value = width;\n    this.uniforms.height.value = height;\n  }\n});\n\nexport { HalftonePass };\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,cAAc,QAAQ,OAAO;AACrD,SAASC,cAAc,EAAEC,IAAI,QAAQ,WAAW;AAChD,SAASC,cAAc,QAAQ,8BAA8B;;AAE7D;AACA;AACA;;AAEA,IAAIC,YAAY,GAAG,SAAAA,CAAUC,KAAK,EAAEC,MAAM,EAAEC,MAAM,EAAE;EAClD,IAAIJ,cAAc,KAAKK,SAAS,EAAE;IAChCC,OAAO,CAACC,KAAK,CAAC,4CAA4C,CAAC;EAC7D;EAEA,IAAI,CAACC,QAAQ,GAAGZ,aAAa,CAACa,KAAK,CAACT,cAAc,CAACQ,QAAQ,CAAC;EAC5D,IAAI,CAACE,QAAQ,GAAG,IAAIb,cAAc,CAAC;IACjCW,QAAQ,EAAE,IAAI,CAACA,QAAQ;IACvBG,cAAc,EAAEX,cAAc,CAACW,cAAc;IAC7CC,YAAY,EAAEZ,cAAc,CAACY;EAC/B,CAAC,CAAC,CAAC,CAAC;;EAEJ,IAAI,CAACJ,QAAQ,CAACN,KAAK,CAACW,KAAK,GAAGX,KAAK;EACjC,IAAI,CAACM,QAAQ,CAACL,MAAM,CAACU,KAAK,GAAGV,MAAM;EAEnC,KAAK,IAAIW,GAAG,IAAIV,MAAM,EAAE;IACtB,IAAIA,MAAM,CAACW,cAAc,CAACD,GAAG,CAAC,IAAI,IAAI,CAACN,QAAQ,CAACO,cAAc,CAACD,GAAG,CAAC,EAAE;MACnE,IAAI,CAACN,QAAQ,CAACM,GAAG,CAAC,CAACD,KAAK,GAAGT,MAAM,CAACU,GAAG,CAAC;IACxC;EACF;EAEA,IAAI,CAACE,MAAM,GAAG,IAAIlB,cAAc,CAAC,IAAI,CAACY,QAAQ,CAAC;AACjD,CAAC;AAEDT,YAAY,CAACgB,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,MAAM,CAACrB,IAAI,CAACkB,SAAS,CAAC,EAAE;EACpEI,WAAW,EAAEpB,YAAY;EACzBqB,MAAM,EAAE,SAAAA,CAAUC,QAAQ,EAAEC,WAAW,EAAEC;EACzC,6BACE;IACA,IAAI,CAACf,QAAQ,CAACF,QAAQ,CAAC,UAAU,CAAC,CAACK,KAAK,GAAGY,UAAU,CAACC,OAAO;IAE7D,IAAI,IAAI,CAACC,cAAc,EAAE;MACvBJ,QAAQ,CAACK,eAAe,CAAC,IAAI,CAAC;MAC9B,IAAI,CAACZ,MAAM,CAACM,MAAM,CAACC,QAAQ,CAAC;IAC9B,CAAC,MAAM;MACLA,QAAQ,CAACK,eAAe,CAACJ,WAAW,CAAC;MACrC,IAAI,IAAI,CAACK,KAAK,EAAEN,QAAQ,CAACM,KAAK,CAAC,CAAC;MAChC,IAAI,CAACb,MAAM,CAACM,MAAM,CAACC,QAAQ,CAAC;IAC9B;EACF,CAAC;EACDO,OAAO,EAAE,SAAAA,CAAU5B,KAAK,EAAEC,MAAM,EAAE;IAChC,IAAI,CAACK,QAAQ,CAACN,KAAK,CAACW,KAAK,GAAGX,KAAK;IACjC,IAAI,CAACM,QAAQ,CAACL,MAAM,CAACU,KAAK,GAAGV,MAAM;EACrC;AACF,CAAC,CAAC;AAEF,SAASF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module"}