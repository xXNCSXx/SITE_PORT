{"ast":null,"code":"import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal } from \"./gast_public\";\nvar GAstVisitor = /** @class */function () {\n  function GAstVisitor() {}\n  GAstVisitor.prototype.visit = function (node) {\n    var nodeAny = node;\n    switch (nodeAny.constructor) {\n      case NonTerminal:\n        return this.visitNonTerminal(nodeAny);\n      case Alternative:\n        return this.visitAlternative(nodeAny);\n      case Option:\n        return this.visitOption(nodeAny);\n      case RepetitionMandatory:\n        return this.visitRepetitionMandatory(nodeAny);\n      case RepetitionMandatoryWithSeparator:\n        return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n      case RepetitionWithSeparator:\n        return this.visitRepetitionWithSeparator(nodeAny);\n      case Repetition:\n        return this.visitRepetition(nodeAny);\n      case Alternation:\n        return this.visitAlternation(nodeAny);\n      case Terminal:\n        return this.visitTerminal(nodeAny);\n      case Rule:\n        return this.visitRule(nodeAny);\n      /* istanbul ignore next */\n      default:\n        throw Error(\"non exhaustive match\");\n    }\n  };\n  GAstVisitor.prototype.visitNonTerminal = function (node) {};\n  GAstVisitor.prototype.visitAlternative = function (node) {};\n  GAstVisitor.prototype.visitOption = function (node) {};\n  GAstVisitor.prototype.visitRepetition = function (node) {};\n  GAstVisitor.prototype.visitRepetitionMandatory = function (node) {};\n  GAstVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) {};\n  GAstVisitor.prototype.visitRepetitionWithSeparator = function (node) {};\n  GAstVisitor.prototype.visitAlternation = function (node) {};\n  GAstVisitor.prototype.visitTerminal = function (node) {};\n  GAstVisitor.prototype.visitRule = function (node) {};\n  return GAstVisitor;\n}();\nexport { GAstVisitor };","map":{"version":3,"sources":["../../../../../src/parse/grammar/gast/gast_visitor_public.ts"],"names":[],"mappings":"AAAA,SACE,WAAW,EACX,WAAW,EACX,WAAW,EACX,MAAM,EACN,UAAU,EACV,mBAAmB,EACnB,gCAAgC,EAChC,uBAAuB,EACvB,IAAI,EACJ,QAAQ,QACH,eAAe;AAGtB,IAAA,WAAA,GAAA,aAAA,YAAA;EAAA,SAAA,WAAA,CAAA,EAAA,CAmDA;EAlDS,WAAA,CAAA,SAAA,CAAA,KAAK,GAAZ,UAAa,IAAiB,EAAA;IAC5B,IAAM,OAAO,GAAQ,IAAI;IACzB,QAAQ,OAAO,CAAC,WAAW;MACzB,KAAK,WAAW;QACd,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;MACvC,KAAK,WAAW;QACd,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;MACvC,KAAK,MAAM;QACT,OAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC;MAClC,KAAK,mBAAmB;QACtB,OAAO,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC;MAC/C,KAAK,gCAAgC;QACnC,OAAO,IAAI,CAAC,qCAAqC,CAAC,OAAO,CAAC;MAC5D,KAAK,uBAAuB;QAC1B,OAAO,IAAI,CAAC,4BAA4B,CAAC,OAAO,CAAC;MACnD,KAAK,UAAU;QACb,OAAO,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC;MACtC,KAAK,WAAW;QACd,OAAO,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC;MACvC,KAAK,QAAQ;QACX,OAAO,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;MACpC,KAAK,IAAI;QACP,OAAO,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;MAChC;MACA;QACE,MAAM,KAAK,CAAC,sBAAsB,CAAC;IACtC;EACH,CAAC;EAEM,WAAA,CAAA,SAAA,CAAA,gBAAgB,GAAvB,UAAwB,IAAiB,EAAA,CAAQ,CAAC;EAE3C,WAAA,CAAA,SAAA,CAAA,gBAAgB,GAAvB,UAAwB,IAAiB,EAAA,CAAQ,CAAC;EAE3C,WAAA,CAAA,SAAA,CAAA,WAAW,GAAlB,UAAmB,IAAY,EAAA,CAAQ,CAAC;EAEjC,WAAA,CAAA,SAAA,CAAA,eAAe,GAAtB,UAAuB,IAAgB,EAAA,CAAQ,CAAC;EAEzC,WAAA,CAAA,SAAA,CAAA,wBAAwB,GAA/B,UAAgC,IAAyB,EAAA,CAAQ,CAAC;EAE3D,WAAA,CAAA,SAAA,CAAA,qCAAqC,GAA5C,UACE,IAAsC,EAAA,CAChC,CAAC;EAEF,WAAA,CAAA,SAAA,CAAA,4BAA4B,GAAnC,UAAoC,IAA6B,EAAA,CAAQ,CAAC;EAEnE,WAAA,CAAA,SAAA,CAAA,gBAAgB,GAAvB,UAAwB,IAAiB,EAAA,CAAQ,CAAC;EAE3C,WAAA,CAAA,SAAA,CAAA,aAAa,GAApB,UAAqB,IAAc,EAAA,CAAQ,CAAC;EAErC,WAAA,CAAA,SAAA,CAAA,SAAS,GAAhB,UAAiB,IAAU,EAAA,CAAQ,CAAC;EACtC,OAAA,WAAC;AAAD,CAAC,CAAA,CAAA","sourceRoot":"","sourcesContent":["import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal } from \"./gast_public\";\nvar GAstVisitor = /** @class */ (function () {\n    function GAstVisitor() {\n    }\n    GAstVisitor.prototype.visit = function (node) {\n        var nodeAny = node;\n        switch (nodeAny.constructor) {\n            case NonTerminal:\n                return this.visitNonTerminal(nodeAny);\n            case Alternative:\n                return this.visitAlternative(nodeAny);\n            case Option:\n                return this.visitOption(nodeAny);\n            case RepetitionMandatory:\n                return this.visitRepetitionMandatory(nodeAny);\n            case RepetitionMandatoryWithSeparator:\n                return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n            case RepetitionWithSeparator:\n                return this.visitRepetitionWithSeparator(nodeAny);\n            case Repetition:\n                return this.visitRepetition(nodeAny);\n            case Alternation:\n                return this.visitAlternation(nodeAny);\n            case Terminal:\n                return this.visitTerminal(nodeAny);\n            case Rule:\n                return this.visitRule(nodeAny);\n            /* istanbul ignore next */\n            default:\n                throw Error(\"non exhaustive match\");\n        }\n    };\n    GAstVisitor.prototype.visitNonTerminal = function (node) { };\n    GAstVisitor.prototype.visitAlternative = function (node) { };\n    GAstVisitor.prototype.visitOption = function (node) { };\n    GAstVisitor.prototype.visitRepetition = function (node) { };\n    GAstVisitor.prototype.visitRepetitionMandatory = function (node) { };\n    GAstVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) { };\n    GAstVisitor.prototype.visitRepetitionWithSeparator = function (node) { };\n    GAstVisitor.prototype.visitAlternation = function (node) { };\n    GAstVisitor.prototype.visitTerminal = function (node) { };\n    GAstVisitor.prototype.visitRule = function (node) { };\n    return GAstVisitor;\n}());\nexport { GAstVisitor };\n//# sourceMappingURL=gast_visitor_public.js.map"]},"metadata":{},"sourceType":"module"}