{"ast":null,"code":"import { Vector3 } from 'three';\nimport { Vector3Node } from '../inputs/Vector3Node.js';\nfunction VelocityNode(target, params) {\n  Vector3Node.call(this);\n  this.params = {};\n  this.velocity = new Vector3();\n  this.setTarget(target);\n  this.setParams(params);\n}\nVelocityNode.prototype = Object.create(Vector3Node.prototype);\nVelocityNode.prototype.constructor = VelocityNode;\nVelocityNode.prototype.nodeType = 'Velocity';\nVelocityNode.prototype.getReadonly = function () /*builder*/\n{\n  return false;\n};\nVelocityNode.prototype.setParams = function (params) {\n  switch (this.params.type) {\n    case 'elastic':\n      delete this.moment;\n      delete this.speed;\n      delete this.springVelocity;\n      delete this.lastVelocity;\n      break;\n  }\n  this.params = params || {};\n  switch (this.params.type) {\n    case 'elastic':\n      this.moment = new Vector3();\n      this.speed = new Vector3();\n      this.springVelocity = new Vector3();\n      this.lastVelocity = new Vector3();\n      break;\n  }\n};\nVelocityNode.prototype.setTarget = function (target) {\n  if (this.target) {\n    delete this.position;\n    delete this.oldPosition;\n  }\n  this.target = target;\n  if (target) {\n    this.position = target.getWorldPosition(this.position || new Vector3());\n    this.oldPosition = this.position.clone();\n  }\n};\nVelocityNode.prototype.updateFrameVelocity = function () /*frame*/\n{\n  if (this.target) {\n    this.position = this.target.getWorldPosition(this.position || new Vector3());\n    this.velocity.subVectors(this.position, this.oldPosition);\n    this.oldPosition.copy(this.position);\n  }\n};\nVelocityNode.prototype.updateFrame = function (frame) {\n  this.updateFrameVelocity(frame);\n  switch (this.params.type) {\n    case 'elastic':\n      // convert to real scale: 0 at 1 values\n      var deltaFps = frame.delta * (this.params.fps || 60);\n      var spring = Math.pow(this.params.spring, deltaFps),\n        damping = Math.pow(this.params.damping, deltaFps); // fix relative frame-rate\n\n      this.velocity.multiplyScalar(Math.exp(-this.params.damping * deltaFps)); // elastic\n\n      this.velocity.add(this.springVelocity);\n      this.velocity.add(this.speed.multiplyScalar(damping).multiplyScalar(1 - spring)); // speed\n\n      this.speed.subVectors(this.velocity, this.lastVelocity); // spring velocity\n\n      this.springVelocity.add(this.speed);\n      this.springVelocity.multiplyScalar(spring); // moment\n\n      this.moment.add(this.springVelocity); // damping\n\n      this.moment.multiplyScalar(damping);\n      this.lastVelocity.copy(this.velocity);\n      this.value.copy(this.moment);\n      break;\n    default:\n      this.value.copy(this.velocity);\n  }\n};\nVelocityNode.prototype.copy = function (source) {\n  Vector3Node.prototype.copy.call(this, source);\n  if (source.target) this.setTarget(source.target);\n  this.setParams(source.params);\n  return this;\n};\nVelocityNode.prototype.toJSON = function (meta) {\n  var data = Vector3Node.prototype.toJSON.call(this, meta);\n  if (this.target) data.target = this.target.uuid; // clone params\n\n  data.params = JSON.parse(JSON.stringify(this.params));\n  return data;\n};\nexport { VelocityNode };","map":{"version":3,"names":["Vector3","Vector3Node","VelocityNode","target","params","call","velocity","setTarget","setParams","prototype","Object","create","constructor","nodeType","getReadonly","type","moment","speed","springVelocity","lastVelocity","position","oldPosition","getWorldPosition","clone","updateFrameVelocity","subVectors","copy","updateFrame","frame","deltaFps","delta","fps","spring","Math","pow","damping","multiplyScalar","exp","add","value","source","toJSON","meta","data","uuid","JSON","parse","stringify"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/utils/VelocityNode.js"],"sourcesContent":["import { Vector3 } from 'three';\nimport { Vector3Node } from '../inputs/Vector3Node.js';\n\nfunction VelocityNode(target, params) {\n  Vector3Node.call(this);\n  this.params = {};\n  this.velocity = new Vector3();\n  this.setTarget(target);\n  this.setParams(params);\n}\n\nVelocityNode.prototype = Object.create(Vector3Node.prototype);\nVelocityNode.prototype.constructor = VelocityNode;\nVelocityNode.prototype.nodeType = 'Velocity';\n\nVelocityNode.prototype.getReadonly = function ()\n/*builder*/\n{\n  return false;\n};\n\nVelocityNode.prototype.setParams = function (params) {\n  switch (this.params.type) {\n    case 'elastic':\n      delete this.moment;\n      delete this.speed;\n      delete this.springVelocity;\n      delete this.lastVelocity;\n      break;\n  }\n\n  this.params = params || {};\n\n  switch (this.params.type) {\n    case 'elastic':\n      this.moment = new Vector3();\n      this.speed = new Vector3();\n      this.springVelocity = new Vector3();\n      this.lastVelocity = new Vector3();\n      break;\n  }\n};\n\nVelocityNode.prototype.setTarget = function (target) {\n  if (this.target) {\n    delete this.position;\n    delete this.oldPosition;\n  }\n\n  this.target = target;\n\n  if (target) {\n    this.position = target.getWorldPosition(this.position || new Vector3());\n    this.oldPosition = this.position.clone();\n  }\n};\n\nVelocityNode.prototype.updateFrameVelocity = function ()\n/*frame*/\n{\n  if (this.target) {\n    this.position = this.target.getWorldPosition(this.position || new Vector3());\n    this.velocity.subVectors(this.position, this.oldPosition);\n    this.oldPosition.copy(this.position);\n  }\n};\n\nVelocityNode.prototype.updateFrame = function (frame) {\n  this.updateFrameVelocity(frame);\n\n  switch (this.params.type) {\n    case 'elastic':\n      // convert to real scale: 0 at 1 values\n      var deltaFps = frame.delta * (this.params.fps || 60);\n      var spring = Math.pow(this.params.spring, deltaFps),\n          damping = Math.pow(this.params.damping, deltaFps); // fix relative frame-rate\n\n      this.velocity.multiplyScalar(Math.exp(-this.params.damping * deltaFps)); // elastic\n\n      this.velocity.add(this.springVelocity);\n      this.velocity.add(this.speed.multiplyScalar(damping).multiplyScalar(1 - spring)); // speed\n\n      this.speed.subVectors(this.velocity, this.lastVelocity); // spring velocity\n\n      this.springVelocity.add(this.speed);\n      this.springVelocity.multiplyScalar(spring); // moment\n\n      this.moment.add(this.springVelocity); // damping\n\n      this.moment.multiplyScalar(damping);\n      this.lastVelocity.copy(this.velocity);\n      this.value.copy(this.moment);\n      break;\n\n    default:\n      this.value.copy(this.velocity);\n  }\n};\n\nVelocityNode.prototype.copy = function (source) {\n  Vector3Node.prototype.copy.call(this, source);\n  if (source.target) this.setTarget(source.target);\n  this.setParams(source.params);\n  return this;\n};\n\nVelocityNode.prototype.toJSON = function (meta) {\n  var data = Vector3Node.prototype.toJSON.call(this, meta);\n  if (this.target) data.target = this.target.uuid; // clone params\n\n  data.params = JSON.parse(JSON.stringify(this.params));\n  return data;\n};\n\nexport { VelocityNode };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}