{"ast":null,"code":"import { Vector2 } from 'three';\nimport { TempNode } from '../core/TempNode.js';\nimport { FunctionNode } from '../core/FunctionNode.js';\nimport { FloatNode } from '../inputs/FloatNode.js';\nimport { Vector2Node } from '../inputs/Vector2Node.js';\nimport { UVNode } from '../accessors/UVNode.js';\nfunction BlurNode(value, uv, radius, size) {\n  TempNode.call(this, 'v4');\n  this.value = value;\n  this.uv = uv || new UVNode();\n  this.radius = radius || new Vector2Node(1, 1);\n  this.size = size;\n  this.blurX = true;\n  this.blurY = true;\n  this.horizontal = new FloatNode(1 / 64);\n  this.vertical = new FloatNode(1 / 64);\n}\nBlurNode.Nodes = function () {\n  var blurX = new FunctionNode(['vec4 blurX( sampler2D tex, vec2 uv, float s ) {', '\tvec4 sum = vec4( 0.0 );', '\tsum += texture2D( tex, vec2( uv.x - 4.0 * s, uv.y ) ) * 0.051;', '\tsum += texture2D( tex, vec2( uv.x - 3.0 * s, uv.y ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x - 2.0 * s, uv.y ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x - 1.0 * s, uv.y ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;', '\tsum += texture2D( tex, vec2( uv.x + 1.0 * s, uv.y ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x + 2.0 * s, uv.y ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x + 3.0 * s, uv.y ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x + 4.0 * s, uv.y ) ) * 0.051;', '\treturn sum * .667;', '}'].join('\\n'));\n  var blurY = new FunctionNode(['vec4 blurY( sampler2D tex, vec2 uv, float s ) {', '\tvec4 sum = vec4( 0.0 );', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 4.0 * s ) ) * 0.051;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 3.0 * s ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 2.0 * s ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 1.0 * s ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 1.0 * s ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 2.0 * s ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 3.0 * s ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 4.0 * s ) ) * 0.051;', '\treturn sum * .667;', '}'].join('\\n'));\n  return {\n    blurX: blurX,\n    blurY: blurY\n  };\n}();\nBlurNode.prototype = Object.create(TempNode.prototype);\nBlurNode.prototype.constructor = BlurNode;\nBlurNode.prototype.nodeType = 'Blur';\nBlurNode.prototype.hashProperties = ['blurX', 'blurY'];\nBlurNode.prototype.updateFrame = function () /* frame */\n{\n  if (this.size) {\n    this.horizontal.value = this.radius.x / this.size.x;\n    this.vertical.value = this.radius.y / this.size.y;\n  } else if (this.value.value && this.value.value.image) {\n    var image = this.value.value.image;\n    this.horizontal.value = this.radius.x / image.width;\n    this.vertical.value = this.radius.y / image.height;\n  }\n};\nBlurNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    var blurCode = [],\n      code;\n    var blurX = builder.include(BlurNode.Nodes.blurX),\n      blurY = builder.include(BlurNode.Nodes.blurY);\n    if (this.blurX) {\n      blurCode.push(blurX + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.horizontal.build(builder, 'f') + ' )');\n    }\n    if (this.blurY) {\n      blurCode.push(blurY + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.vertical.build(builder, 'f') + ' )');\n    }\n    if (blurCode.length == 2) code = '( ' + blurCode.join(' + ') + ' / 2.0 )';else if (blurCode.length) code = '( ' + blurCode[0] + ' )';else code = 'vec4( 0.0 )';\n    return builder.format(code, this.getType(builder), output);\n  } else {\n    console.warn('THREE.BlurNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('vec4( 0.0 )', this.getType(builder), output);\n  }\n};\nBlurNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.value = source.value;\n  this.uv = source.uv;\n  this.radius = source.radius;\n  if (source.size !== undefined) this.size = new Vector2(source.size.x, source.size.y);\n  this.blurX = source.blurX;\n  this.blurY = source.blurY;\n  return this;\n};\nBlurNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n    data.uv = this.uv.toJSON(meta).uuid;\n    data.radius = this.radius.toJSON(meta).uuid;\n    if (this.size) data.size = {\n      x: this.size.x,\n      y: this.size.y\n    };\n    data.blurX = this.blurX;\n    data.blurY = this.blurY;\n  }\n  return data;\n};\nexport { BlurNode };","map":{"version":3,"names":["Vector2","TempNode","FunctionNode","FloatNode","Vector2Node","UVNode","BlurNode","value","uv","radius","size","call","blurX","blurY","horizontal","vertical","Nodes","join","prototype","Object","create","constructor","nodeType","hashProperties","updateFrame","x","y","image","width","height","generate","builder","output","isShader","blurCode","code","include","push","build","length","format","getType","console","warn","shader","copy","source","undefined","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/effects/BlurNode.js"],"sourcesContent":["import { Vector2 } from 'three';\nimport { TempNode } from '../core/TempNode.js';\nimport { FunctionNode } from '../core/FunctionNode.js';\nimport { FloatNode } from '../inputs/FloatNode.js';\nimport { Vector2Node } from '../inputs/Vector2Node.js';\nimport { UVNode } from '../accessors/UVNode.js';\n\nfunction BlurNode(value, uv, radius, size) {\n  TempNode.call(this, 'v4');\n  this.value = value;\n  this.uv = uv || new UVNode();\n  this.radius = radius || new Vector2Node(1, 1);\n  this.size = size;\n  this.blurX = true;\n  this.blurY = true;\n  this.horizontal = new FloatNode(1 / 64);\n  this.vertical = new FloatNode(1 / 64);\n}\n\nBlurNode.Nodes = function () {\n  var blurX = new FunctionNode(['vec4 blurX( sampler2D tex, vec2 uv, float s ) {', '\tvec4 sum = vec4( 0.0 );', '\tsum += texture2D( tex, vec2( uv.x - 4.0 * s, uv.y ) ) * 0.051;', '\tsum += texture2D( tex, vec2( uv.x - 3.0 * s, uv.y ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x - 2.0 * s, uv.y ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x - 1.0 * s, uv.y ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;', '\tsum += texture2D( tex, vec2( uv.x + 1.0 * s, uv.y ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x + 2.0 * s, uv.y ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x + 3.0 * s, uv.y ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x + 4.0 * s, uv.y ) ) * 0.051;', '\treturn sum * .667;', '}'].join('\\n'));\n  var blurY = new FunctionNode(['vec4 blurY( sampler2D tex, vec2 uv, float s ) {', '\tvec4 sum = vec4( 0.0 );', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 4.0 * s ) ) * 0.051;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 3.0 * s ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 2.0 * s ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x, uv.y - 1.0 * s ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y ) ) * 0.1633;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 1.0 * s ) ) * 0.1531;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 2.0 * s ) ) * 0.12245;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 3.0 * s ) ) * 0.0918;', '\tsum += texture2D( tex, vec2( uv.x, uv.y + 4.0 * s ) ) * 0.051;', '\treturn sum * .667;', '}'].join('\\n'));\n  return {\n    blurX: blurX,\n    blurY: blurY\n  };\n}();\n\nBlurNode.prototype = Object.create(TempNode.prototype);\nBlurNode.prototype.constructor = BlurNode;\nBlurNode.prototype.nodeType = 'Blur';\nBlurNode.prototype.hashProperties = ['blurX', 'blurY'];\n\nBlurNode.prototype.updateFrame = function ()\n/* frame */\n{\n  if (this.size) {\n    this.horizontal.value = this.radius.x / this.size.x;\n    this.vertical.value = this.radius.y / this.size.y;\n  } else if (this.value.value && this.value.value.image) {\n    var image = this.value.value.image;\n    this.horizontal.value = this.radius.x / image.width;\n    this.vertical.value = this.radius.y / image.height;\n  }\n};\n\nBlurNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    var blurCode = [],\n        code;\n    var blurX = builder.include(BlurNode.Nodes.blurX),\n        blurY = builder.include(BlurNode.Nodes.blurY);\n\n    if (this.blurX) {\n      blurCode.push(blurX + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.horizontal.build(builder, 'f') + ' )');\n    }\n\n    if (this.blurY) {\n      blurCode.push(blurY + '( ' + this.value.build(builder, 'sampler2D') + ', ' + this.uv.build(builder, 'v2') + ', ' + this.vertical.build(builder, 'f') + ' )');\n    }\n\n    if (blurCode.length == 2) code = '( ' + blurCode.join(' + ') + ' / 2.0 )';else if (blurCode.length) code = '( ' + blurCode[0] + ' )';else code = 'vec4( 0.0 )';\n    return builder.format(code, this.getType(builder), output);\n  } else {\n    console.warn('THREE.BlurNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('vec4( 0.0 )', this.getType(builder), output);\n  }\n};\n\nBlurNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.value = source.value;\n  this.uv = source.uv;\n  this.radius = source.radius;\n  if (source.size !== undefined) this.size = new Vector2(source.size.x, source.size.y);\n  this.blurX = source.blurX;\n  this.blurY = source.blurY;\n  return this;\n};\n\nBlurNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n    data.uv = this.uv.toJSON(meta).uuid;\n    data.radius = this.radius.toJSON(meta).uuid;\n    if (this.size) data.size = {\n      x: this.size.x,\n      y: this.size.y\n    };\n    data.blurX = this.blurX;\n    data.blurY = this.blurY;\n  }\n\n  return data;\n};\n\nexport { BlurNode };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}