{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nfunction LightNode(scope) {\n  TempNode.call(this, 'v3', {\n    shared: false\n  });\n  this.scope = scope || LightNode.TOTAL;\n}\nLightNode.TOTAL = 'total';\nLightNode.prototype = Object.create(TempNode.prototype);\nLightNode.prototype.constructor = LightNode;\nLightNode.prototype.nodeType = 'Light';\nLightNode.prototype.generate = function (builder, output) {\n  if (builder.isCache('light')) {\n    return builder.format('reflectedLight.directDiffuse', this.type, output);\n  } else {\n    console.warn('THREE.LightNode is only compatible in \"light\" channel.');\n    return builder.format('vec3( 0.0 )', this.type, output);\n  }\n};\nLightNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.scope = source.scope;\n  return this;\n};\nLightNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.scope = this.scope;\n  }\n  return data;\n};\nexport { LightNode };","map":{"version":3,"names":["TempNode","LightNode","scope","call","shared","TOTAL","prototype","Object","create","constructor","nodeType","generate","builder","output","isCache","format","type","console","warn","copy","source","toJSON","meta","data","getJSONNode","createJSONNode"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/accessors/LightNode.js"],"sourcesContent":["import { TempNode } from '../core/TempNode.js';\n\nfunction LightNode(scope) {\n  TempNode.call(this, 'v3', {\n    shared: false\n  });\n  this.scope = scope || LightNode.TOTAL;\n}\n\nLightNode.TOTAL = 'total';\nLightNode.prototype = Object.create(TempNode.prototype);\nLightNode.prototype.constructor = LightNode;\nLightNode.prototype.nodeType = 'Light';\n\nLightNode.prototype.generate = function (builder, output) {\n  if (builder.isCache('light')) {\n    return builder.format('reflectedLight.directDiffuse', this.type, output);\n  } else {\n    console.warn('THREE.LightNode is only compatible in \"light\" channel.');\n    return builder.format('vec3( 0.0 )', this.type, output);\n  }\n};\n\nLightNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.scope = source.scope;\n  return this;\n};\n\nLightNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.scope = this.scope;\n  }\n\n  return data;\n};\n\nexport { LightNode };\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,qBAAqB;AAE9C,SAASC,SAASA,CAACC,KAAK,EAAE;EACxBF,QAAQ,CAACG,IAAI,CAAC,IAAI,EAAE,IAAI,EAAE;IACxBC,MAAM,EAAE;EACV,CAAC,CAAC;EACF,IAAI,CAACF,KAAK,GAAGA,KAAK,IAAID,SAAS,CAACI,KAAK;AACvC;AAEAJ,SAAS,CAACI,KAAK,GAAG,OAAO;AACzBJ,SAAS,CAACK,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACR,QAAQ,CAACM,SAAS,CAAC;AACvDL,SAAS,CAACK,SAAS,CAACG,WAAW,GAAGR,SAAS;AAC3CA,SAAS,CAACK,SAAS,CAACI,QAAQ,GAAG,OAAO;AAEtCT,SAAS,CAACK,SAAS,CAACK,QAAQ,GAAG,UAAUC,OAAO,EAAEC,MAAM,EAAE;EACxD,IAAID,OAAO,CAACE,OAAO,CAAC,OAAO,CAAC,EAAE;IAC5B,OAAOF,OAAO,CAACG,MAAM,CAAC,8BAA8B,EAAE,IAAI,CAACC,IAAI,EAAEH,MAAM,CAAC;EAC1E,CAAC,MAAM;IACLI,OAAO,CAACC,IAAI,CAAC,wDAAwD,CAAC;IACtE,OAAON,OAAO,CAACG,MAAM,CAAC,aAAa,EAAE,IAAI,CAACC,IAAI,EAAEH,MAAM,CAAC;EACzD;AACF,CAAC;AAEDZ,SAAS,CAACK,SAAS,CAACa,IAAI,GAAG,UAAUC,MAAM,EAAE;EAC3CpB,QAAQ,CAACM,SAAS,CAACa,IAAI,CAAChB,IAAI,CAAC,IAAI,EAAEiB,MAAM,CAAC;EAC1C,IAAI,CAAClB,KAAK,GAAGkB,MAAM,CAAClB,KAAK;EACzB,OAAO,IAAI;AACb,CAAC;AAEDD,SAAS,CAACK,SAAS,CAACe,MAAM,GAAG,UAAUC,IAAI,EAAE;EAC3C,IAAIC,IAAI,GAAG,IAAI,CAACC,WAAW,CAACF,IAAI,CAAC;EAEjC,IAAI,CAACC,IAAI,EAAE;IACTA,IAAI,GAAG,IAAI,CAACE,cAAc,CAACH,IAAI,CAAC;IAChCC,IAAI,CAACrB,KAAK,GAAG,IAAI,CAACA,KAAK;EACzB;EAEA,OAAOqB,IAAI;AACb,CAAC;AAED,SAAStB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}