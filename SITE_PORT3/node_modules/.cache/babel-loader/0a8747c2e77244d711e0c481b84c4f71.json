{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport { contains, every, has, some } from \"../../../utils/utils\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal } from \"./gast_public\";\nimport { GAstVisitor } from \"./gast_visitor_public\";\nexport function isSequenceProd(prod) {\n  return prod instanceof Alternative || prod instanceof Option || prod instanceof Repetition || prod instanceof RepetitionMandatory || prod instanceof RepetitionMandatoryWithSeparator || prod instanceof RepetitionWithSeparator || prod instanceof Terminal || prod instanceof Rule;\n}\nexport function isOptionalProd(prod, alreadyVisited) {\n  if (alreadyVisited === void 0) {\n    alreadyVisited = [];\n  }\n  var isDirectlyOptional = prod instanceof Option || prod instanceof Repetition || prod instanceof RepetitionWithSeparator;\n  if (isDirectlyOptional) {\n    return true;\n  }\n  // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n  if (prod instanceof Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return some(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else if (prod instanceof NonTerminal && contains(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false;\n  } else if (prod instanceof AbstractProduction) {\n    if (prod instanceof NonTerminal) {\n      alreadyVisited.push(prod);\n    }\n    return every(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else {\n    return false;\n  }\n}\nexport function isBranchingProd(prod) {\n  return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    return \"SUBRULE\";\n  } else if (prod instanceof Option) {\n    return \"OPTION\";\n  } else if (prod instanceof Alternation) {\n    return \"OR\";\n  } else if (prod instanceof RepetitionMandatory) {\n    return \"AT_LEAST_ONE\";\n  } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\";\n  } else if (prod instanceof RepetitionWithSeparator) {\n    return \"MANY_SEP\";\n  } else if (prod instanceof Repetition) {\n    return \"MANY\";\n  } else if (prod instanceof Terminal) {\n    return \"CONSUME\";\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\nvar DslMethodsCollectorVisitor = /** @class */function (_super) {\n  __extends(DslMethodsCollectorVisitor, _super);\n  function DslMethodsCollectorVisitor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    // A minus is never valid in an identifier name\n    _this.separator = \"-\";\n    _this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: []\n    };\n    return _this;\n  }\n  DslMethodsCollectorVisitor.prototype.reset = function () {\n    this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: []\n    };\n  };\n  DslMethodsCollectorVisitor.prototype.visitTerminal = function (terminal) {\n    var key = terminal.terminalType.name + this.separator + \"Terminal\";\n    if (!has(this.dslMethods, key)) {\n      this.dslMethods[key] = [];\n    }\n    this.dslMethods[key].push(terminal);\n  };\n  DslMethodsCollectorVisitor.prototype.visitNonTerminal = function (subrule) {\n    var key = subrule.nonTerminalName + this.separator + \"Terminal\";\n    if (!has(this.dslMethods, key)) {\n      this.dslMethods[key] = [];\n    }\n    this.dslMethods[key].push(subrule);\n  };\n  DslMethodsCollectorVisitor.prototype.visitOption = function (option) {\n    this.dslMethods.option.push(option);\n  };\n  DslMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (manySep) {\n    this.dslMethods.repetitionWithSeparator.push(manySep);\n  };\n  DslMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (atLeastOne) {\n    this.dslMethods.repetitionMandatory.push(atLeastOne);\n  };\n  DslMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n    this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n  };\n  DslMethodsCollectorVisitor.prototype.visitRepetition = function (many) {\n    this.dslMethods.repetition.push(many);\n  };\n  DslMethodsCollectorVisitor.prototype.visitAlternation = function (or) {\n    this.dslMethods.alternation.push(or);\n  };\n  return DslMethodsCollectorVisitor;\n}(GAstVisitor);\nexport { DslMethodsCollectorVisitor };\nvar collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n  collectorVisitor.reset();\n  rule.accept(collectorVisitor);\n  var dslMethods = collectorVisitor.dslMethods;\n  // avoid uncleaned references\n  collectorVisitor.reset();\n  return dslMethods;\n}","map":{"version":3,"sources":["../../../../../src/parse/grammar/gast/gast.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { contains, every, has, some } from \"../../../utils/utils\";\nimport { AbstractProduction, Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal } from \"./gast_public\";\nimport { GAstVisitor } from \"./gast_visitor_public\";\nexport function isSequenceProd(prod) {\n    return (prod instanceof Alternative ||\n        prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionMandatory ||\n        prod instanceof RepetitionMandatoryWithSeparator ||\n        prod instanceof RepetitionWithSeparator ||\n        prod instanceof Terminal ||\n        prod instanceof Rule);\n}\nexport function isOptionalProd(prod, alreadyVisited) {\n    if (alreadyVisited === void 0) { alreadyVisited = []; }\n    var isDirectlyOptional = prod instanceof Option ||\n        prod instanceof Repetition ||\n        prod instanceof RepetitionWithSeparator;\n    if (isDirectlyOptional) {\n        return true;\n    }\n    // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n    // empty optional top rule\n    // may be indirectly optional ((A?B?C?) | (D?E?F?))\n    if (prod instanceof Alternation) {\n        // for OR its enough for just one of the alternatives to be optional\n        return some(prod.definition, function (subProd) {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else if (prod instanceof NonTerminal && contains(alreadyVisited, prod)) {\n        // avoiding stack overflow due to infinite recursion\n        return false;\n    }\n    else if (prod instanceof AbstractProduction) {\n        if (prod instanceof NonTerminal) {\n            alreadyVisited.push(prod);\n        }\n        return every(prod.definition, function (subProd) {\n            return isOptionalProd(subProd, alreadyVisited);\n        });\n    }\n    else {\n        return false;\n    }\n}\nexport function isBranchingProd(prod) {\n    return prod instanceof Alternation;\n}\nexport function getProductionDslName(prod) {\n    /* istanbul ignore else */\n    if (prod instanceof NonTerminal) {\n        return \"SUBRULE\";\n    }\n    else if (prod instanceof Option) {\n        return \"OPTION\";\n    }\n    else if (prod instanceof Alternation) {\n        return \"OR\";\n    }\n    else if (prod instanceof RepetitionMandatory) {\n        return \"AT_LEAST_ONE\";\n    }\n    else if (prod instanceof RepetitionMandatoryWithSeparator) {\n        return \"AT_LEAST_ONE_SEP\";\n    }\n    else if (prod instanceof RepetitionWithSeparator) {\n        return \"MANY_SEP\";\n    }\n    else if (prod instanceof Repetition) {\n        return \"MANY\";\n    }\n    else if (prod instanceof Terminal) {\n        return \"CONSUME\";\n    }\n    else {\n        throw Error(\"non exhaustive match\");\n    }\n}\nvar DslMethodsCollectorVisitor = /** @class */ (function (_super) {\n    __extends(DslMethodsCollectorVisitor, _super);\n    function DslMethodsCollectorVisitor() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        // A minus is never valid in an identifier name\n        _this.separator = \"-\";\n        _this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: []\n        };\n        return _this;\n    }\n    DslMethodsCollectorVisitor.prototype.reset = function () {\n        this.dslMethods = {\n            option: [],\n            alternation: [],\n            repetition: [],\n            repetitionWithSeparator: [],\n            repetitionMandatory: [],\n            repetitionMandatoryWithSeparator: []\n        };\n    };\n    DslMethodsCollectorVisitor.prototype.visitTerminal = function (terminal) {\n        var key = terminal.terminalType.name + this.separator + \"Terminal\";\n        if (!has(this.dslMethods, key)) {\n            this.dslMethods[key] = [];\n        }\n        this.dslMethods[key].push(terminal);\n    };\n    DslMethodsCollectorVisitor.prototype.visitNonTerminal = function (subrule) {\n        var key = subrule.nonTerminalName + this.separator + \"Terminal\";\n        if (!has(this.dslMethods, key)) {\n            this.dslMethods[key] = [];\n        }\n        this.dslMethods[key].push(subrule);\n    };\n    DslMethodsCollectorVisitor.prototype.visitOption = function (option) {\n        this.dslMethods.option.push(option);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (manySep) {\n        this.dslMethods.repetitionWithSeparator.push(manySep);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (atLeastOne) {\n        this.dslMethods.repetitionMandatory.push(atLeastOne);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n        this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n    };\n    DslMethodsCollectorVisitor.prototype.visitRepetition = function (many) {\n        this.dslMethods.repetition.push(many);\n    };\n    DslMethodsCollectorVisitor.prototype.visitAlternation = function (or) {\n        this.dslMethods.alternation.push(or);\n    };\n    return DslMethodsCollectorVisitor;\n}(GAstVisitor));\nexport { DslMethodsCollectorVisitor };\nvar collectorVisitor = new DslMethodsCollectorVisitor();\nexport function collectMethods(rule) {\n    collectorVisitor.reset();\n    rule.accept(collectorVisitor);\n    var dslMethods = collectorVisitor.dslMethods;\n    // avoid uncleaned references\n    collectorVisitor.reset();\n    return dslMethods;\n}\n//# sourceMappingURL=gast.js.map"]},"metadata":{},"sourceType":"module"}