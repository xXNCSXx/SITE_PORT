{"ast":null,"code":"import { compact, contains, forEach, isArray, isEmpty, isFunction, isUndefined, keys, map } from \"../../utils/utils\";\nimport { defineNameProp, functionName } from \"../../lang/lang_extensions\";\nexport function defaultVisit(ctx, param) {\n  var childrenNames = keys(ctx);\n  var childrenNamesLength = childrenNames.length;\n  for (var i = 0; i < childrenNamesLength; i++) {\n    var currChildName = childrenNames[i];\n    var currChildArray = ctx[currChildName];\n    var currChildArrayLength = currChildArray.length;\n    for (var j = 0; j < currChildArrayLength; j++) {\n      var currChild = currChildArray[j];\n      // distinction between Tokens Children and CstNode children\n      if (currChild.tokenTypeIdx === undefined) {\n        this[currChild.name](currChild.children, param);\n      }\n    }\n  }\n  // defaultVisit does not support generic out param\n  return undefined;\n}\nexport function createBaseSemanticVisitorConstructor(grammarName, ruleNames) {\n  var derivedConstructor = function () {};\n  // can be overwritten according to:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n  // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n  defineNameProp(derivedConstructor, grammarName + \"BaseSemantics\");\n  var semanticProto = {\n    visit: function (cstNode, param) {\n      // enables writing more concise visitor methods when CstNode has only a single child\n      if (isArray(cstNode)) {\n        // A CST Node's children dictionary can never have empty arrays as values\n        // If a key is defined there will be at least one element in the corresponding value array.\n        cstNode = cstNode[0];\n      }\n      // enables passing optional CstNodes concisely.\n      if (isUndefined(cstNode)) {\n        return undefined;\n      }\n      return this[cstNode.name](cstNode.children, param);\n    },\n    validateVisitor: function () {\n      var semanticDefinitionErrors = validateVisitor(this, ruleNames);\n      if (!isEmpty(semanticDefinitionErrors)) {\n        var errorMessages = map(semanticDefinitionErrors, function (currDefError) {\n          return currDefError.msg;\n        });\n        throw Error(\"Errors Detected in CST Visitor <\" + functionName(this.constructor) + \">:\\n\\t\" + (\"\" + errorMessages.join(\"\\n\\n\").replace(/\\n/g, \"\\n\\t\")));\n      }\n    }\n  };\n  derivedConstructor.prototype = semanticProto;\n  derivedConstructor.prototype.constructor = derivedConstructor;\n  derivedConstructor._RULE_NAMES = ruleNames;\n  return derivedConstructor;\n}\nexport function createBaseVisitorConstructorWithDefaults(grammarName, ruleNames, baseConstructor) {\n  var derivedConstructor = function () {};\n  // can be overwritten according to:\n  // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/\n  // name?redirectlocale=en-US&redirectslug=JavaScript%2FReference%2FGlobal_Objects%2FFunction%2Fname\n  defineNameProp(derivedConstructor, grammarName + \"BaseSemanticsWithDefaults\");\n  var withDefaultsProto = Object.create(baseConstructor.prototype);\n  forEach(ruleNames, function (ruleName) {\n    withDefaultsProto[ruleName] = defaultVisit;\n  });\n  derivedConstructor.prototype = withDefaultsProto;\n  derivedConstructor.prototype.constructor = derivedConstructor;\n  return derivedConstructor;\n}\nexport var CstVisitorDefinitionError;\n(function (CstVisitorDefinitionError) {\n  CstVisitorDefinitionError[CstVisitorDefinitionError[\"REDUNDANT_METHOD\"] = 0] = \"REDUNDANT_METHOD\";\n  CstVisitorDefinitionError[CstVisitorDefinitionError[\"MISSING_METHOD\"] = 1] = \"MISSING_METHOD\";\n})(CstVisitorDefinitionError || (CstVisitorDefinitionError = {}));\nexport function validateVisitor(visitorInstance, ruleNames) {\n  var missingErrors = validateMissingCstMethods(visitorInstance, ruleNames);\n  var redundantErrors = validateRedundantMethods(visitorInstance, ruleNames);\n  return missingErrors.concat(redundantErrors);\n}\nexport function validateMissingCstMethods(visitorInstance, ruleNames) {\n  var errors = map(ruleNames, function (currRuleName) {\n    if (!isFunction(visitorInstance[currRuleName])) {\n      return {\n        msg: \"Missing visitor method: <\" + currRuleName + \"> on \" + functionName(visitorInstance.constructor) + \" CST Visitor.\",\n        type: CstVisitorDefinitionError.MISSING_METHOD,\n        methodName: currRuleName\n      };\n    }\n  });\n  return compact(errors);\n}\nvar VALID_PROP_NAMES = [\"constructor\", \"visit\", \"validateVisitor\"];\nexport function validateRedundantMethods(visitorInstance, ruleNames) {\n  var errors = [];\n  for (var prop in visitorInstance) {\n    if (isFunction(visitorInstance[prop]) && !contains(VALID_PROP_NAMES, prop) && !contains(ruleNames, prop)) {\n      errors.push({\n        msg: \"Redundant visitor method: <\" + prop + \"> on \" + functionName(visitorInstance.constructor) + \" CST Visitor\\n\" + \"There is no Grammar Rule corresponding to this method's name.\\n\",\n        type: CstVisitorDefinitionError.REDUNDANT_METHOD,\n        methodName: prop\n      });\n    }\n  }\n  return errors;\n}","map":{"version":3,"names":["compact","contains","forEach","isArray","isEmpty","isFunction","isUndefined","keys","map","defineNameProp","functionName","defaultVisit","ctx","param","childrenNames","childrenNamesLength","length","i","currChildName","currChildArray","currChildArrayLength","j","currChild","tokenTypeIdx","undefined","name","children","createBaseSemanticVisitorConstructor","grammarName","ruleNames","derivedConstructor","semanticProto","visit","cstNode","validateVisitor","semanticDefinitionErrors","errorMessages","currDefError","msg","Error","constructor","join","replace","prototype","_RULE_NAMES","createBaseVisitorConstructorWithDefaults","baseConstructor","withDefaultsProto","Object","create","ruleName","CstVisitorDefinitionError","visitorInstance","missingErrors","validateMissingCstMethods","redundantErrors","validateRedundantMethods","concat","errors","currRuleName","type","MISSING_METHOD","methodName","VALID_PROP_NAMES","prop","push","REDUNDANT_METHOD"],"sources":["../../../../src/parse/cst/cst_visitor.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}