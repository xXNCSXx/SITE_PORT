{"ast":null,"code":"import { Pass } from '../postprocessing/Pass.js';\nvar MaskPass = function (scene, camera) {\n  Pass.call(this);\n  this.scene = scene;\n  this.camera = camera;\n  this.clear = true;\n  this.needsSwap = false;\n  this.inverse = false;\n};\nMaskPass.prototype = Object.assign(Object.create(Pass.prototype), {\n  constructor: MaskPass,\n  render: function (renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */) {\n    var context = renderer.getContext();\n    var state = renderer.state;\n\n    // don't update color or depth\n\n    state.buffers.color.setMask(false);\n    state.buffers.depth.setMask(false);\n\n    // lock buffers\n\n    state.buffers.color.setLocked(true);\n    state.buffers.depth.setLocked(true);\n\n    // set up stencil\n\n    var writeValue, clearValue;\n    if (this.inverse) {\n      writeValue = 0;\n      clearValue = 1;\n    } else {\n      writeValue = 1;\n      clearValue = 0;\n    }\n    state.buffers.stencil.setTest(true);\n    state.buffers.stencil.setOp(context.REPLACE, context.REPLACE, context.REPLACE);\n    state.buffers.stencil.setFunc(context.ALWAYS, writeValue, 0xffffffff);\n    state.buffers.stencil.setClear(clearValue);\n    state.buffers.stencil.setLocked(true);\n\n    // draw into the stencil buffer\n\n    renderer.setRenderTarget(readBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.scene, this.camera);\n    renderer.setRenderTarget(writeBuffer);\n    if (this.clear) renderer.clear();\n    renderer.render(this.scene, this.camera);\n\n    // unlock color and depth buffer for subsequent rendering\n\n    state.buffers.color.setLocked(false);\n    state.buffers.depth.setLocked(false);\n\n    // only render where stencil is set to 1\n\n    state.buffers.stencil.setLocked(false);\n    state.buffers.stencil.setFunc(context.EQUAL, 1, 0xffffffff); // draw if == 1\n    state.buffers.stencil.setOp(context.KEEP, context.KEEP, context.KEEP);\n    state.buffers.stencil.setLocked(true);\n  }\n});\nvar ClearMaskPass = function () {\n  Pass.call(this);\n  this.needsSwap = false;\n};\nClearMaskPass.prototype = Object.create(Pass.prototype);\nObject.assign(ClearMaskPass.prototype, {\n  render: function (renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */) {\n    renderer.state.buffers.stencil.setLocked(false);\n    renderer.state.buffers.stencil.setTest(false);\n  }\n});\nexport { MaskPass, ClearMaskPass };","map":{"version":3,"names":["Pass","MaskPass","scene","camera","call","clear","needsSwap","inverse","prototype","Object","assign","create","constructor","render","renderer","writeBuffer","readBuffer","context","getContext","state","buffers","color","setMask","depth","setLocked","writeValue","clearValue","stencil","setTest","setOp","REPLACE","setFunc","ALWAYS","setClear","setRenderTarget","EQUAL","KEEP","ClearMaskPass"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three/examples/jsm/postprocessing/MaskPass.js"],"sourcesContent":["import { Pass } from '../postprocessing/Pass.js';\n\nvar MaskPass = function ( scene, camera ) {\n\n\tPass.call( this );\n\n\tthis.scene = scene;\n\tthis.camera = camera;\n\n\tthis.clear = true;\n\tthis.needsSwap = false;\n\n\tthis.inverse = false;\n\n};\n\nMaskPass.prototype = Object.assign( Object.create( Pass.prototype ), {\n\n\tconstructor: MaskPass,\n\n\trender: function ( renderer, writeBuffer, readBuffer /*, deltaTime, maskActive */ ) {\n\n\t\tvar context = renderer.getContext();\n\t\tvar state = renderer.state;\n\n\t\t// don't update color or depth\n\n\t\tstate.buffers.color.setMask( false );\n\t\tstate.buffers.depth.setMask( false );\n\n\t\t// lock buffers\n\n\t\tstate.buffers.color.setLocked( true );\n\t\tstate.buffers.depth.setLocked( true );\n\n\t\t// set up stencil\n\n\t\tvar writeValue, clearValue;\n\n\t\tif ( this.inverse ) {\n\n\t\t\twriteValue = 0;\n\t\t\tclearValue = 1;\n\n\t\t} else {\n\n\t\t\twriteValue = 1;\n\t\t\tclearValue = 0;\n\n\t\t}\n\n\t\tstate.buffers.stencil.setTest( true );\n\t\tstate.buffers.stencil.setOp( context.REPLACE, context.REPLACE, context.REPLACE );\n\t\tstate.buffers.stencil.setFunc( context.ALWAYS, writeValue, 0xffffffff );\n\t\tstate.buffers.stencil.setClear( clearValue );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t\t// draw into the stencil buffer\n\n\t\trenderer.setRenderTarget( readBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\trenderer.setRenderTarget( writeBuffer );\n\t\tif ( this.clear ) renderer.clear();\n\t\trenderer.render( this.scene, this.camera );\n\n\t\t// unlock color and depth buffer for subsequent rendering\n\n\t\tstate.buffers.color.setLocked( false );\n\t\tstate.buffers.depth.setLocked( false );\n\n\t\t// only render where stencil is set to 1\n\n\t\tstate.buffers.stencil.setLocked( false );\n\t\tstate.buffers.stencil.setFunc( context.EQUAL, 1, 0xffffffff ); // draw if == 1\n\t\tstate.buffers.stencil.setOp( context.KEEP, context.KEEP, context.KEEP );\n\t\tstate.buffers.stencil.setLocked( true );\n\n\t}\n\n} );\n\n\nvar ClearMaskPass = function () {\n\n\tPass.call( this );\n\n\tthis.needsSwap = false;\n\n};\n\nClearMaskPass.prototype = Object.create( Pass.prototype );\n\nObject.assign( ClearMaskPass.prototype, {\n\n\trender: function ( renderer /*, writeBuffer, readBuffer, deltaTime, maskActive */ ) {\n\n\t\trenderer.state.buffers.stencil.setLocked( false );\n\t\trenderer.state.buffers.stencil.setTest( false );\n\n\t}\n\n} );\n\nexport { MaskPass, ClearMaskPass };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}