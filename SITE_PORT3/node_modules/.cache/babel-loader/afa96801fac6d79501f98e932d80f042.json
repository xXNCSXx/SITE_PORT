{"ast":null,"code":"import { Vector2 } from 'three';\nimport { Vector2Node } from '../inputs/Vector2Node.js';\nfunction ResolutionNode() {\n  Vector2Node.call(this);\n  this.size = new Vector2();\n}\nResolutionNode.prototype = Object.create(Vector2Node.prototype);\nResolutionNode.prototype.constructor = ResolutionNode;\nResolutionNode.prototype.nodeType = 'Resolution';\nResolutionNode.prototype.updateFrame = function (frame) {\n  if (frame.renderer) {\n    frame.renderer.getSize(this.size);\n    var pixelRatio = frame.renderer.getPixelRatio();\n    this.x = this.size.width * pixelRatio;\n    this.y = this.size.height * pixelRatio;\n  } else {\n    console.warn('ResolutionNode need a renderer in NodeFrame');\n  }\n};\nResolutionNode.prototype.copy = function (source) {\n  Vector2Node.prototype.copy.call(this, source);\n  this.renderer = source.renderer;\n  return this;\n};\nResolutionNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.renderer = this.renderer.uuid;\n  }\n  return data;\n};\nexport { ResolutionNode };","map":{"version":3,"names":["Vector2","Vector2Node","ResolutionNode","call","size","prototype","Object","create","constructor","nodeType","updateFrame","frame","renderer","getSize","pixelRatio","getPixelRatio","x","width","y","height","console","warn","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/accessors/ResolutionNode.js"],"sourcesContent":["import { Vector2 } from 'three';\nimport { Vector2Node } from '../inputs/Vector2Node.js';\n\nfunction ResolutionNode() {\n  Vector2Node.call(this);\n  this.size = new Vector2();\n}\n\nResolutionNode.prototype = Object.create(Vector2Node.prototype);\nResolutionNode.prototype.constructor = ResolutionNode;\nResolutionNode.prototype.nodeType = 'Resolution';\n\nResolutionNode.prototype.updateFrame = function (frame) {\n  if (frame.renderer) {\n    frame.renderer.getSize(this.size);\n    var pixelRatio = frame.renderer.getPixelRatio();\n    this.x = this.size.width * pixelRatio;\n    this.y = this.size.height * pixelRatio;\n  } else {\n    console.warn('ResolutionNode need a renderer in NodeFrame');\n  }\n};\n\nResolutionNode.prototype.copy = function (source) {\n  Vector2Node.prototype.copy.call(this, source);\n  this.renderer = source.renderer;\n  return this;\n};\n\nResolutionNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.renderer = this.renderer.uuid;\n  }\n\n  return data;\n};\n\nexport { ResolutionNode };\n"],"mappings":"AAAA,SAASA,OAAO,QAAQ,OAAO;AAC/B,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,SAASC,cAAcA,CAAA,EAAG;EACxBD,WAAW,CAACE,IAAI,CAAC,IAAI,CAAC;EACtB,IAAI,CAACC,IAAI,GAAG,IAAIJ,OAAO,CAAC,CAAC;AAC3B;AAEAE,cAAc,CAACG,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACN,WAAW,CAACI,SAAS,CAAC;AAC/DH,cAAc,CAACG,SAAS,CAACG,WAAW,GAAGN,cAAc;AACrDA,cAAc,CAACG,SAAS,CAACI,QAAQ,GAAG,YAAY;AAEhDP,cAAc,CAACG,SAAS,CAACK,WAAW,GAAG,UAAUC,KAAK,EAAE;EACtD,IAAIA,KAAK,CAACC,QAAQ,EAAE;IAClBD,KAAK,CAACC,QAAQ,CAACC,OAAO,CAAC,IAAI,CAACT,IAAI,CAAC;IACjC,IAAIU,UAAU,GAAGH,KAAK,CAACC,QAAQ,CAACG,aAAa,CAAC,CAAC;IAC/C,IAAI,CAACC,CAAC,GAAG,IAAI,CAACZ,IAAI,CAACa,KAAK,GAAGH,UAAU;IACrC,IAAI,CAACI,CAAC,GAAG,IAAI,CAACd,IAAI,CAACe,MAAM,GAAGL,UAAU;EACxC,CAAC,MAAM;IACLM,OAAO,CAACC,IAAI,CAAC,6CAA6C,CAAC;EAC7D;AACF,CAAC;AAEDnB,cAAc,CAACG,SAAS,CAACiB,IAAI,GAAG,UAAUC,MAAM,EAAE;EAChDtB,WAAW,CAACI,SAAS,CAACiB,IAAI,CAACnB,IAAI,CAAC,IAAI,EAAEoB,MAAM,CAAC;EAC7C,IAAI,CAACX,QAAQ,GAAGW,MAAM,CAACX,QAAQ;EAC/B,OAAO,IAAI;AACb,CAAC;AAEDV,cAAc,CAACG,SAAS,CAACmB,MAAM,GAAG,UAAUC,IAAI,EAAE;EAChD,IAAIC,IAAI,GAAG,IAAI,CAACC,WAAW,CAACF,IAAI,CAAC;EAEjC,IAAI,CAACC,IAAI,EAAE;IACTA,IAAI,GAAG,IAAI,CAACE,cAAc,CAACH,IAAI,CAAC;IAChCC,IAAI,CAACd,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACiB,IAAI;EACpC;EAEA,OAAOH,IAAI;AACb,CAAC;AAED,SAASxB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module"}