{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nimport { InputNode } from '../core/InputNode.js';\nimport { PositionNode } from '../accessors/PositionNode.js';\nimport { OperatorNode } from '../math/OperatorNode.js';\nimport { TextureNode } from './TextureNode.js';\nimport { Matrix4Node } from './Matrix4Node.js';\nfunction ReflectorNode(mirror) {\n  TempNode.call(this, 'v4');\n  if (mirror) this.setMirror(mirror);\n}\nReflectorNode.prototype = Object.create(TempNode.prototype);\nReflectorNode.prototype.constructor = ReflectorNode;\nReflectorNode.prototype.nodeType = 'Reflector';\nReflectorNode.prototype.setMirror = function (mirror) {\n  this.mirror = mirror;\n  this.textureMatrix = new Matrix4Node(this.mirror.material.uniforms.textureMatrix.value);\n  this.localPosition = new PositionNode(PositionNode.LOCAL);\n  this.uv = new OperatorNode(this.textureMatrix, this.localPosition, OperatorNode.MUL);\n  this.uvResult = new OperatorNode(null, this.uv, OperatorNode.ADD);\n  this.texture = new TextureNode(this.mirror.material.uniforms.tDiffuse.value, this.uv, null, true);\n};\nReflectorNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    this.uvResult.a = this.offset;\n    this.texture.uv = this.offset ? this.uvResult : this.uv;\n    if (output === 'sampler2D') {\n      return this.texture.build(builder, output);\n    }\n    return builder.format(this.texture.build(builder, this.type), this.type, output);\n  } else {\n    console.warn('THREE.ReflectorNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('vec4( 0.0 )', this.type, output);\n  }\n};\nReflectorNode.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.scope.mirror = source.mirror;\n  return this;\n};\nReflectorNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.mirror = this.mirror.uuid;\n    if (this.offset) data.offset = this.offset.toJSON(meta).uuid;\n  }\n  return data;\n};\nexport { ReflectorNode };","map":{"version":3,"names":["TempNode","InputNode","PositionNode","OperatorNode","TextureNode","Matrix4Node","ReflectorNode","mirror","call","setMirror","prototype","Object","create","constructor","nodeType","textureMatrix","material","uniforms","value","localPosition","LOCAL","uv","MUL","uvResult","ADD","texture","tDiffuse","generate","builder","output","isShader","a","offset","build","format","type","console","warn","shader","copy","source","scope","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/inputs/ReflectorNode.js"],"sourcesContent":["import { TempNode } from '../core/TempNode.js';\nimport { InputNode } from '../core/InputNode.js';\nimport { PositionNode } from '../accessors/PositionNode.js';\nimport { OperatorNode } from '../math/OperatorNode.js';\nimport { TextureNode } from './TextureNode.js';\nimport { Matrix4Node } from './Matrix4Node.js';\n\nfunction ReflectorNode(mirror) {\n  TempNode.call(this, 'v4');\n  if (mirror) this.setMirror(mirror);\n}\n\nReflectorNode.prototype = Object.create(TempNode.prototype);\nReflectorNode.prototype.constructor = ReflectorNode;\nReflectorNode.prototype.nodeType = 'Reflector';\n\nReflectorNode.prototype.setMirror = function (mirror) {\n  this.mirror = mirror;\n  this.textureMatrix = new Matrix4Node(this.mirror.material.uniforms.textureMatrix.value);\n  this.localPosition = new PositionNode(PositionNode.LOCAL);\n  this.uv = new OperatorNode(this.textureMatrix, this.localPosition, OperatorNode.MUL);\n  this.uvResult = new OperatorNode(null, this.uv, OperatorNode.ADD);\n  this.texture = new TextureNode(this.mirror.material.uniforms.tDiffuse.value, this.uv, null, true);\n};\n\nReflectorNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    this.uvResult.a = this.offset;\n    this.texture.uv = this.offset ? this.uvResult : this.uv;\n\n    if (output === 'sampler2D') {\n      return this.texture.build(builder, output);\n    }\n\n    return builder.format(this.texture.build(builder, this.type), this.type, output);\n  } else {\n    console.warn('THREE.ReflectorNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('vec4( 0.0 )', this.type, output);\n  }\n};\n\nReflectorNode.prototype.copy = function (source) {\n  InputNode.prototype.copy.call(this, source);\n  this.scope.mirror = source.mirror;\n  return this;\n};\n\nReflectorNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.mirror = this.mirror.uuid;\n    if (this.offset) data.offset = this.offset.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { ReflectorNode };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}