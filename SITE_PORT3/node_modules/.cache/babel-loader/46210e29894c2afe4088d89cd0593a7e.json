{"ast":null,"code":"import { defineHidden, is, createInterpolator, eachProp, hasFluidValue, getFluidValue, each, isAnimatedString, useForceUpdate, useLayoutEffect, addFluidObserver, removeFluidObserver, raf, useOnce } from '@react-spring/shared';\nimport { forwardRef, useRef, useCallback, useEffect, createElement } from 'react';\nconst $node = Symbol.for(\"Animated:node\");\nconst isAnimated = value => !!value && value[$node] === value;\nconst getAnimated = owner => owner && owner[$node];\nconst setAnimated = (owner, node) => defineHidden(owner, $node, node);\nconst getPayload = owner => owner && owner[$node] && owner[$node].getPayload();\nclass Animated {\n  constructor() {\n    setAnimated(this, this);\n  }\n  getPayload() {\n    return this.payload || [];\n  }\n}\nclass AnimatedValue extends Animated {\n  constructor(_value) {\n    super();\n    this._value = _value;\n    this.done = true;\n    this.durationProgress = 0;\n    if (is.num(this._value)) {\n      this.lastPosition = this._value;\n    }\n  }\n  static create(value) {\n    return new AnimatedValue(value);\n  }\n  getPayload() {\n    return [this];\n  }\n  getValue() {\n    return this._value;\n  }\n  setValue(value, step) {\n    if (is.num(value)) {\n      this.lastPosition = value;\n      if (step) {\n        value = Math.round(value / step) * step;\n        if (this.done) {\n          this.lastPosition = value;\n        }\n      }\n    }\n    if (this._value === value) {\n      return false;\n    }\n    this._value = value;\n    return true;\n  }\n  reset() {\n    const {\n      done\n    } = this;\n    this.done = false;\n    if (is.num(this._value)) {\n      this.elapsedTime = 0;\n      this.durationProgress = 0;\n      this.lastPosition = this._value;\n      if (done) this.lastVelocity = null;\n      this.v0 = null;\n    }\n  }\n}\nclass AnimatedString extends AnimatedValue {\n  constructor(value) {\n    super(0);\n    this._string = null;\n    this._toString = createInterpolator({\n      output: [value, value]\n    });\n  }\n  static create(value) {\n    return new AnimatedString(value);\n  }\n  getValue() {\n    let value = this._string;\n    return value == null ? this._string = this._toString(this._value) : value;\n  }\n  setValue(value) {\n    if (is.str(value)) {\n      if (value == this._string) {\n        return false;\n      }\n      this._string = value;\n      this._value = 1;\n    } else if (super.setValue(value)) {\n      this._string = null;\n    } else {\n      return false;\n    }\n    return true;\n  }\n  reset(goal) {\n    if (goal) {\n      this._toString = createInterpolator({\n        output: [this.getValue(), goal]\n      });\n    }\n    this._value = 0;\n    super.reset();\n  }\n}\nconst TreeContext = {\n  dependencies: null\n};\nclass AnimatedObject extends Animated {\n  constructor(source) {\n    super();\n    this.source = source;\n    this.setValue(source);\n  }\n  getValue(animated) {\n    const values = {};\n    eachProp(this.source, (source, key) => {\n      if (isAnimated(source)) {\n        values[key] = source.getValue(animated);\n      } else if (hasFluidValue(source)) {\n        values[key] = getFluidValue(source);\n      } else if (!animated) {\n        values[key] = source;\n      }\n    });\n    return values;\n  }\n  setValue(source) {\n    this.source = source;\n    this.payload = this._makePayload(source);\n  }\n  reset() {\n    if (this.payload) {\n      each(this.payload, node => node.reset());\n    }\n  }\n  _makePayload(source) {\n    if (source) {\n      const payload = new Set();\n      eachProp(source, this._addToPayload, payload);\n      return Array.from(payload);\n    }\n  }\n  _addToPayload(source) {\n    if (TreeContext.dependencies && hasFluidValue(source)) {\n      TreeContext.dependencies.add(source);\n    }\n    const payload = getPayload(source);\n    if (payload) {\n      each(payload, node => this.add(node));\n    }\n  }\n}\nclass AnimatedArray extends AnimatedObject {\n  constructor(source) {\n    super(source);\n  }\n  static create(source) {\n    return new AnimatedArray(source);\n  }\n  getValue() {\n    return this.source.map(node => node.getValue());\n  }\n  setValue(source) {\n    const payload = this.getPayload();\n    if (source.length == payload.length) {\n      return payload.some((node, i) => node.setValue(source[i]));\n    }\n    super.setValue(source.map(makeAnimated));\n    return true;\n  }\n}\nfunction makeAnimated(value) {\n  const nodeType = isAnimatedString(value) ? AnimatedString : AnimatedValue;\n  return nodeType.create(value);\n}\nfunction getAnimatedType(value) {\n  const parentNode = getAnimated(value);\n  return parentNode ? parentNode.constructor : is.arr(value) ? AnimatedArray : isAnimatedString(value) ? AnimatedString : AnimatedValue;\n}\nconst withAnimated = (Component, host) => {\n  const hasInstance = !is.fun(Component) || Component.prototype && Component.prototype.isReactComponent;\n  return forwardRef((givenProps, givenRef) => {\n    const instanceRef = useRef(null);\n    const ref = hasInstance && useCallback(value => {\n      instanceRef.current = updateRef(givenRef, value);\n    }, [givenRef]);\n    const [props, deps] = getAnimatedState(givenProps, host);\n    const forceUpdate = useForceUpdate();\n    const callback = () => {\n      const instance = instanceRef.current;\n      if (hasInstance && !instance) {\n        return;\n      }\n      const didUpdate = instance ? host.applyAnimatedValues(instance, props.getValue(true)) : false;\n      if (didUpdate === false) {\n        forceUpdate();\n      }\n    };\n    const observer = new PropsObserver(callback, deps);\n    const observerRef = useRef();\n    useLayoutEffect(() => {\n      const lastObserver = observerRef.current;\n      observerRef.current = observer;\n      each(deps, dep => addFluidObserver(dep, observer));\n      if (lastObserver) {\n        each(lastObserver.deps, dep => removeFluidObserver(dep, lastObserver));\n        raf.cancel(lastObserver.update);\n      }\n    });\n    useEffect(callback, []);\n    useOnce(() => () => {\n      const observer2 = observerRef.current;\n      each(observer2.deps, dep => removeFluidObserver(dep, observer2));\n    });\n    const usedProps = host.getComponentProps(props.getValue());\n    return /* @__PURE__ */createElement(Component, {\n      ...usedProps,\n      ref\n    });\n  });\n};\nclass PropsObserver {\n  constructor(update, deps) {\n    this.update = update;\n    this.deps = deps;\n  }\n  eventObserved(event) {\n    if (event.type == \"change\") {\n      raf.write(this.update);\n    }\n  }\n}\nfunction getAnimatedState(props, host) {\n  const dependencies = new Set();\n  TreeContext.dependencies = dependencies;\n  if (props.style) props = {\n    ...props,\n    style: host.createAnimatedStyle(props.style)\n  };\n  props = new AnimatedObject(props);\n  TreeContext.dependencies = null;\n  return [props, dependencies];\n}\nfunction updateRef(ref, value) {\n  if (ref) {\n    if (is.fun(ref)) ref(value);else ref.current = value;\n  }\n  return value;\n}\nconst cacheKey = Symbol.for(\"AnimatedComponent\");\nconst createHost = (components, {\n  applyAnimatedValues = () => false,\n  createAnimatedStyle = style => new AnimatedObject(style),\n  getComponentProps = props => props\n} = {}) => {\n  const hostConfig = {\n    applyAnimatedValues,\n    createAnimatedStyle,\n    getComponentProps\n  };\n  const animated = Component => {\n    const displayName = getDisplayName(Component) || \"Anonymous\";\n    if (is.str(Component)) {\n      Component = animated[Component] || (animated[Component] = withAnimated(Component, hostConfig));\n    } else {\n      Component = Component[cacheKey] || (Component[cacheKey] = withAnimated(Component, hostConfig));\n    }\n    Component.displayName = `Animated(${displayName})`;\n    return Component;\n  };\n  eachProp(components, (Component, key) => {\n    if (is.arr(components)) {\n      key = getDisplayName(Component);\n    }\n    animated[key] = animated(Component);\n  });\n  return {\n    animated\n  };\n};\nconst getDisplayName = arg => is.str(arg) ? arg : arg && is.str(arg.displayName) ? arg.displayName : is.fun(arg) && arg.name || null;\nexport { Animated, AnimatedArray, AnimatedObject, AnimatedString, AnimatedValue, createHost, getAnimated, getAnimatedType, getPayload, isAnimated, setAnimated };","map":{"version":3,"names":["$node","Symbol","for","value","owner","setAnimated","node","defineHidden","getPayload","constructor","payload","Animated","_value","done","durationProgress","is","num","lastPosition","create","AnimatedValue","getValue","setValue","step","Math","round","reset","elapsedTime","lastVelocity","v0","_string","_toString","createInterpolator","output","AnimatedString","str","goal","TreeContext","dependencies","source","animated","values","eachProp","key","isAnimated","hasFluidValue","getFluidValue","_makePayload","each","Set","_addToPayload","Array","from","add","AnimatedObject","AnimatedArray","map","length","some","i","makeAnimated","nodeType","isAnimatedString","parentNode","getAnimated","arr","withAnimated","Component","host","hasInstance","fun","prototype","isReactComponent","forwardRef","givenProps","givenRef","instanceRef","useRef","ref","useCallback","current","updateRef","props","deps","getAnimatedState","forceUpdate","useForceUpdate","callback","instance","didUpdate","applyAnimatedValues","observer","PropsObserver","observerRef","useLayoutEffect","lastObserver","dep","addFluidObserver","removeFluidObserver","raf","cancel","update","useEffect","useOnce","observer2","usedProps","getComponentProps","createElement","eventObserved","event","type","write","style","createAnimatedStyle","cacheKey","createHost","components","hostConfig","displayName","getDisplayName","arg","name"],"sources":["src/Animated.ts","src/AnimatedValue.ts","src/AnimatedString.ts","src/context.ts","src/AnimatedObject.ts","src/AnimatedArray.ts","src/getAnimatedType.ts","src/withAnimated.tsx","src/createHost.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}