{"ast":null,"code":"import { FloatNode } from '../inputs/FloatNode.js';\nfunction MaxMIPLevelNode(texture) {\n  FloatNode.call(this);\n  this.texture = texture;\n  this.maxMIPLevel = 0;\n}\nMaxMIPLevelNode.prototype = Object.create(FloatNode.prototype);\nMaxMIPLevelNode.prototype.constructor = MaxMIPLevelNode;\nMaxMIPLevelNode.prototype.nodeType = 'MaxMIPLevel';\nObject.defineProperties(MaxMIPLevelNode.prototype, {\n  value: {\n    get: function () {\n      if (this.maxMIPLevel === 0) {\n        var image = this.texture.value.image;\n        if (Array.isArray(image)) image = image[0];\n        this.maxMIPLevel = image !== undefined ? Math.log(Math.max(image.width, image.height)) * Math.LOG2E : 0;\n      }\n      return this.maxMIPLevel;\n    },\n    set: function () {}\n  }\n});\nMaxMIPLevelNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.texture = this.texture.uuid;\n  }\n  return data;\n};\nexport { MaxMIPLevelNode };","map":{"version":3,"names":["FloatNode","MaxMIPLevelNode","texture","call","maxMIPLevel","prototype","Object","create","constructor","nodeType","defineProperties","value","get","image","Array","isArray","undefined","Math","log","max","width","height","LOG2E","set","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/utils/MaxMIPLevelNode.js"],"sourcesContent":["import { FloatNode } from '../inputs/FloatNode.js';\n\nfunction MaxMIPLevelNode(texture) {\n  FloatNode.call(this);\n  this.texture = texture;\n  this.maxMIPLevel = 0;\n}\n\nMaxMIPLevelNode.prototype = Object.create(FloatNode.prototype);\nMaxMIPLevelNode.prototype.constructor = MaxMIPLevelNode;\nMaxMIPLevelNode.prototype.nodeType = 'MaxMIPLevel';\nObject.defineProperties(MaxMIPLevelNode.prototype, {\n  value: {\n    get: function () {\n      if (this.maxMIPLevel === 0) {\n        var image = this.texture.value.image;\n        if (Array.isArray(image)) image = image[0];\n        this.maxMIPLevel = image !== undefined ? Math.log(Math.max(image.width, image.height)) * Math.LOG2E : 0;\n      }\n\n      return this.maxMIPLevel;\n    },\n    set: function () {}\n  }\n});\n\nMaxMIPLevelNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.texture = this.texture.uuid;\n  }\n\n  return data;\n};\n\nexport { MaxMIPLevelNode };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,wBAAwB;AAElD,SAASC,eAAeA,CAACC,OAAO,EAAE;EAChCF,SAAS,CAACG,IAAI,CAAC,IAAI,CAAC;EACpB,IAAI,CAACD,OAAO,GAAGA,OAAO;EACtB,IAAI,CAACE,WAAW,GAAG,CAAC;AACtB;AAEAH,eAAe,CAACI,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACP,SAAS,CAACK,SAAS,CAAC;AAC9DJ,eAAe,CAACI,SAAS,CAACG,WAAW,GAAGP,eAAe;AACvDA,eAAe,CAACI,SAAS,CAACI,QAAQ,GAAG,aAAa;AAClDH,MAAM,CAACI,gBAAgB,CAACT,eAAe,CAACI,SAAS,EAAE;EACjDM,KAAK,EAAE;IACLC,GAAG,EAAE,SAAAA,CAAA,EAAY;MACf,IAAI,IAAI,CAACR,WAAW,KAAK,CAAC,EAAE;QAC1B,IAAIS,KAAK,GAAG,IAAI,CAACX,OAAO,CAACS,KAAK,CAACE,KAAK;QACpC,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAEA,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC;QAC1C,IAAI,CAACT,WAAW,GAAGS,KAAK,KAAKG,SAAS,GAAGC,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,GAAG,CAACN,KAAK,CAACO,KAAK,EAAEP,KAAK,CAACQ,MAAM,CAAC,CAAC,GAAGJ,IAAI,CAACK,KAAK,GAAG,CAAC;MACzG;MAEA,OAAO,IAAI,CAAClB,WAAW;IACzB,CAAC;IACDmB,GAAG,EAAE,SAAAA,CAAA,EAAY,CAAC;EACpB;AACF,CAAC,CAAC;AAEFtB,eAAe,CAACI,SAAS,CAACmB,MAAM,GAAG,UAAUC,IAAI,EAAE;EACjD,IAAIC,IAAI,GAAG,IAAI,CAACC,WAAW,CAACF,IAAI,CAAC;EAEjC,IAAI,CAACC,IAAI,EAAE;IACTA,IAAI,GAAG,IAAI,CAACE,cAAc,CAACH,IAAI,CAAC;IAChCC,IAAI,CAACxB,OAAO,GAAG,IAAI,CAACA,OAAO,CAAC2B,IAAI;EAClC;EAEA,OAAOH,IAAI;AACb,CAAC;AAED,SAASzB,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}