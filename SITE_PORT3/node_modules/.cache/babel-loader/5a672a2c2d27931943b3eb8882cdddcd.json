{"ast":null,"code":"import { Loader, FileLoader, BufferGeometry, Vector3, Float32BufferAttribute, AnimationClip } from 'three';\nvar MD2Loader = function (manager) {\n  Loader.call(this, manager);\n};\nMD2Loader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: MD2Loader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        onLoad(scope.parse(buffer));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  parse: function () {\n    var normalData = [[-0.525731, 0.0, 0.850651], [-0.442863, 0.238856, 0.864188], [-0.295242, 0.0, 0.955423], [-0.309017, 0.5, 0.809017], [-0.16246, 0.262866, 0.951056], [0.0, 0.0, 1.0], [0.0, 0.850651, 0.525731], [-0.147621, 0.716567, 0.681718], [0.147621, 0.716567, 0.681718], [0.0, 0.525731, 0.850651], [0.309017, 0.5, 0.809017], [0.525731, 0.0, 0.850651], [0.295242, 0.0, 0.955423], [0.442863, 0.238856, 0.864188], [0.16246, 0.262866, 0.951056], [-0.681718, 0.147621, 0.716567], [-0.809017, 0.309017, 0.5], [-0.587785, 0.425325, 0.688191], [-0.850651, 0.525731, 0.0], [-0.864188, 0.442863, 0.238856], [-0.716567, 0.681718, 0.147621], [-0.688191, 0.587785, 0.425325], [-0.5, 0.809017, 0.309017], [-0.238856, 0.864188, 0.442863], [-0.425325, 0.688191, 0.587785], [-0.716567, 0.681718, -0.147621], [-0.5, 0.809017, -0.309017], [-0.525731, 0.850651, 0.0], [0.0, 0.850651, -0.525731], [-0.238856, 0.864188, -0.442863], [0.0, 0.955423, -0.295242], [-0.262866, 0.951056, -0.16246], [0.0, 1.0, 0.0], [0.0, 0.955423, 0.295242], [-0.262866, 0.951056, 0.16246], [0.238856, 0.864188, 0.442863], [0.262866, 0.951056, 0.16246], [0.5, 0.809017, 0.309017], [0.238856, 0.864188, -0.442863], [0.262866, 0.951056, -0.16246], [0.5, 0.809017, -0.309017], [0.850651, 0.525731, 0.0], [0.716567, 0.681718, 0.147621], [0.716567, 0.681718, -0.147621], [0.525731, 0.850651, 0.0], [0.425325, 0.688191, 0.587785], [0.864188, 0.442863, 0.238856], [0.688191, 0.587785, 0.425325], [0.809017, 0.309017, 0.5], [0.681718, 0.147621, 0.716567], [0.587785, 0.425325, 0.688191], [0.955423, 0.295242, 0.0], [1.0, 0.0, 0.0], [0.951056, 0.16246, 0.262866], [0.850651, -0.525731, 0.0], [0.955423, -0.295242, 0.0], [0.864188, -0.442863, 0.238856], [0.951056, -0.16246, 0.262866], [0.809017, -0.309017, 0.5], [0.681718, -0.147621, 0.716567], [0.850651, 0.0, 0.525731], [0.864188, 0.442863, -0.238856], [0.809017, 0.309017, -0.5], [0.951056, 0.16246, -0.262866], [0.525731, 0.0, -0.850651], [0.681718, 0.147621, -0.716567], [0.681718, -0.147621, -0.716567], [0.850651, 0.0, -0.525731], [0.809017, -0.309017, -0.5], [0.864188, -0.442863, -0.238856], [0.951056, -0.16246, -0.262866], [0.147621, 0.716567, -0.681718], [0.309017, 0.5, -0.809017], [0.425325, 0.688191, -0.587785], [0.442863, 0.238856, -0.864188], [0.587785, 0.425325, -0.688191], [0.688191, 0.587785, -0.425325], [-0.147621, 0.716567, -0.681718], [-0.309017, 0.5, -0.809017], [0.0, 0.525731, -0.850651], [-0.525731, 0.0, -0.850651], [-0.442863, 0.238856, -0.864188], [-0.295242, 0.0, -0.955423], [-0.16246, 0.262866, -0.951056], [0.0, 0.0, -1.0], [0.295242, 0.0, -0.955423], [0.16246, 0.262866, -0.951056], [-0.442863, -0.238856, -0.864188], [-0.309017, -0.5, -0.809017], [-0.16246, -0.262866, -0.951056], [0.0, -0.850651, -0.525731], [-0.147621, -0.716567, -0.681718], [0.147621, -0.716567, -0.681718], [0.0, -0.525731, -0.850651], [0.309017, -0.5, -0.809017], [0.442863, -0.238856, -0.864188], [0.16246, -0.262866, -0.951056], [0.238856, -0.864188, -0.442863], [0.5, -0.809017, -0.309017], [0.425325, -0.688191, -0.587785], [0.716567, -0.681718, -0.147621], [0.688191, -0.587785, -0.425325], [0.587785, -0.425325, -0.688191], [0.0, -0.955423, -0.295242], [0.0, -1.0, 0.0], [0.262866, -0.951056, -0.16246], [0.0, -0.850651, 0.525731], [0.0, -0.955423, 0.295242], [0.238856, -0.864188, 0.442863], [0.262866, -0.951056, 0.16246], [0.5, -0.809017, 0.309017], [0.716567, -0.681718, 0.147621], [0.525731, -0.850651, 0.0], [-0.238856, -0.864188, -0.442863], [-0.5, -0.809017, -0.309017], [-0.262866, -0.951056, -0.16246], [-0.850651, -0.525731, 0.0], [-0.716567, -0.681718, -0.147621], [-0.716567, -0.681718, 0.147621], [-0.525731, -0.850651, 0.0], [-0.5, -0.809017, 0.309017], [-0.238856, -0.864188, 0.442863], [-0.262866, -0.951056, 0.16246], [-0.864188, -0.442863, 0.238856], [-0.809017, -0.309017, 0.5], [-0.688191, -0.587785, 0.425325], [-0.681718, -0.147621, 0.716567], [-0.442863, -0.238856, 0.864188], [-0.587785, -0.425325, 0.688191], [-0.309017, -0.5, 0.809017], [-0.147621, -0.716567, 0.681718], [-0.425325, -0.688191, 0.587785], [-0.16246, -0.262866, 0.951056], [0.442863, -0.238856, 0.864188], [0.16246, -0.262866, 0.951056], [0.309017, -0.5, 0.809017], [0.147621, -0.716567, 0.681718], [0.0, -0.525731, 0.850651], [0.425325, -0.688191, 0.587785], [0.587785, -0.425325, 0.688191], [0.688191, -0.587785, 0.425325], [-0.955423, 0.295242, 0.0], [-0.951056, 0.16246, 0.262866], [-1.0, 0.0, 0.0], [-0.850651, 0.0, 0.525731], [-0.955423, -0.295242, 0.0], [-0.951056, -0.16246, 0.262866], [-0.864188, 0.442863, -0.238856], [-0.951056, 0.16246, -0.262866], [-0.809017, 0.309017, -0.5], [-0.864188, -0.442863, -0.238856], [-0.951056, -0.16246, -0.262866], [-0.809017, -0.309017, -0.5], [-0.681718, 0.147621, -0.716567], [-0.681718, -0.147621, -0.716567], [-0.850651, 0.0, -0.525731], [-0.688191, 0.587785, -0.425325], [-0.587785, 0.425325, -0.688191], [-0.425325, 0.688191, -0.587785], [-0.425325, -0.688191, -0.587785], [-0.587785, -0.425325, -0.688191], [-0.688191, -0.587785, -0.425325]];\n    return function (buffer) {\n      var data = new DataView(buffer); // http://tfc.duke.free.fr/coding/md2-specs-en.html\n\n      var header = {};\n      var headerNames = ['ident', 'version', 'skinwidth', 'skinheight', 'framesize', 'num_skins', 'num_vertices', 'num_st', 'num_tris', 'num_glcmds', 'num_frames', 'offset_skins', 'offset_st', 'offset_tris', 'offset_frames', 'offset_glcmds', 'offset_end'];\n      for (let i = 0; i < headerNames.length; i++) {\n        header[headerNames[i]] = data.getInt32(i * 4, true);\n      }\n      if (header.ident !== 844121161 || header.version !== 8) {\n        console.error('Not a valid MD2 file');\n        return;\n      }\n      if (header.offset_end !== data.byteLength) {\n        console.error('Corrupted MD2 file');\n        return;\n      } //\n\n      var geometry = new BufferGeometry(); // uvs\n\n      var uvsTemp = [];\n      var offset = header.offset_st;\n      for (let i = 0, l = header.num_st; i < l; i++) {\n        var u = data.getInt16(offset + 0, true);\n        var v = data.getInt16(offset + 2, true);\n        uvsTemp.push(u / header.skinwidth, 1 - v / header.skinheight);\n        offset += 4;\n      } // triangles\n\n      offset = header.offset_tris;\n      var vertexIndices = [];\n      var uvIndices = [];\n      for (let i = 0, l = header.num_tris; i < l; i++) {\n        vertexIndices.push(data.getUint16(offset + 0, true), data.getUint16(offset + 2, true), data.getUint16(offset + 4, true));\n        uvIndices.push(data.getUint16(offset + 6, true), data.getUint16(offset + 8, true), data.getUint16(offset + 10, true));\n        offset += 12;\n      } // frames\n\n      var translation = new Vector3();\n      var scale = new Vector3();\n      var string = [];\n      var frames = [];\n      offset = header.offset_frames;\n      for (let i = 0, l = header.num_frames; i < l; i++) {\n        scale.set(data.getFloat32(offset + 0, true), data.getFloat32(offset + 4, true), data.getFloat32(offset + 8, true));\n        translation.set(data.getFloat32(offset + 12, true), data.getFloat32(offset + 16, true), data.getFloat32(offset + 20, true));\n        offset += 24;\n        for (let j = 0; j < 16; j++) {\n          var character = data.getUint8(offset + j, true);\n          if (character === 0) break;\n          string[j] = character;\n        }\n        var frame = {\n          name: String.fromCharCode.apply(null, string),\n          vertices: [],\n          normals: []\n        };\n        offset += 16;\n        for (let j = 0; j < header.num_vertices; j++) {\n          var x = data.getUint8(offset++, true);\n          var y = data.getUint8(offset++, true);\n          var z = data.getUint8(offset++, true);\n          var n = normalData[data.getUint8(offset++, true)];\n          x = x * scale.x + translation.x;\n          y = y * scale.y + translation.y;\n          z = z * scale.z + translation.z;\n          frame.vertices.push(x, z, y); // convert to Y-up\n\n          frame.normals.push(n[0], n[2], n[1]); // convert to Y-up\n        }\n        frames.push(frame);\n      } // static\n\n      var positions = [];\n      var normals = [];\n      var uvs = [];\n      var verticesTemp = frames[0].vertices;\n      var normalsTemp = frames[0].normals;\n      for (let i = 0, l = vertexIndices.length; i < l; i++) {\n        var vertexIndex = vertexIndices[i];\n        var stride = vertexIndex * 3; //\n\n        var x = verticesTemp[stride];\n        var y = verticesTemp[stride + 1];\n        var z = verticesTemp[stride + 2];\n        positions.push(x, y, z); //\n\n        var nx = normalsTemp[stride];\n        var ny = normalsTemp[stride + 1];\n        var nz = normalsTemp[stride + 2];\n        normals.push(nx, ny, nz); //\n\n        var uvIndex = uvIndices[i];\n        stride = uvIndex * 2;\n        var u = uvsTemp[stride];\n        var v = uvsTemp[stride + 1];\n        uvs.push(u, v);\n      }\n      geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n      geometry.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n      geometry.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // animation\n\n      var morphPositions = [];\n      var morphNormals = [];\n      for (let i = 0, l = frames.length; i < l; i++) {\n        var frame = frames[i];\n        var attributeName = frame.name;\n        if (frame.vertices.length > 0) {\n          var positions = [];\n          for (let j = 0, jl = vertexIndices.length; j < jl; j++) {\n            var vertexIndex = vertexIndices[j];\n            var stride = vertexIndex * 3;\n            var x = frame.vertices[stride];\n            var y = frame.vertices[stride + 1];\n            var z = frame.vertices[stride + 2];\n            positions.push(x, y, z);\n          }\n          var positionAttribute = new Float32BufferAttribute(positions, 3);\n          positionAttribute.name = attributeName;\n          morphPositions.push(positionAttribute);\n        }\n        if (frame.normals.length > 0) {\n          var normals = [];\n          for (let j = 0, jl = vertexIndices.length; j < jl; j++) {\n            var vertexIndex = vertexIndices[j];\n            var stride = vertexIndex * 3;\n            var nx = frame.normals[stride];\n            var ny = frame.normals[stride + 1];\n            var nz = frame.normals[stride + 2];\n            normals.push(nx, ny, nz);\n          }\n          var normalAttribute = new Float32BufferAttribute(normals, 3);\n          normalAttribute.name = attributeName;\n          morphNormals.push(normalAttribute);\n        }\n      }\n      geometry.morphAttributes.position = morphPositions;\n      geometry.morphAttributes.normal = morphNormals;\n      geometry.morphTargetsRelative = false;\n      geometry.animations = AnimationClip.CreateClipsFromMorphTargetSequences(frames, 10);\n      return geometry;\n    };\n  }()\n});\nexport { MD2Loader };","map":{"version":3,"names":["Loader","FileLoader","BufferGeometry","Vector3","Float32BufferAttribute","AnimationClip","MD2Loader","manager","call","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setResponseType","setRequestHeader","requestHeader","setWithCredentials","withCredentials","buffer","parse","e","console","error","itemError","normalData","data","DataView","header","headerNames","i","length","getInt32","ident","version","offset_end","byteLength","geometry","uvsTemp","offset","offset_st","l","num_st","u","getInt16","v","push","skinwidth","skinheight","offset_tris","vertexIndices","uvIndices","num_tris","getUint16","translation","scale","string","frames","offset_frames","num_frames","set","getFloat32","j","character","getUint8","frame","name","String","fromCharCode","apply","vertices","normals","num_vertices","x","y","z","n","positions","uvs","verticesTemp","normalsTemp","vertexIndex","stride","nx","ny","nz","uvIndex","setAttribute","morphPositions","morphNormals","attributeName","jl","positionAttribute","normalAttribute","morphAttributes","position","normal","morphTargetsRelative","animations","CreateClipsFromMorphTargetSequences"],"sources":["C:/Users/drncs/OneDrive/Área de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/loaders/MD2Loader.js"],"sourcesContent":["import { Loader, FileLoader, BufferGeometry, Vector3, Float32BufferAttribute, AnimationClip } from 'three';\n\nvar MD2Loader = function (manager) {\n  Loader.call(this, manager);\n};\n\nMD2Loader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: MD2Loader,\n  load: function (url, onLoad, onProgress, onError) {\n    var scope = this;\n    var loader = new FileLoader(scope.manager);\n    loader.setPath(scope.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(scope.requestHeader);\n    loader.setWithCredentials(scope.withCredentials);\n    loader.load(url, function (buffer) {\n      try {\n        onLoad(scope.parse(buffer));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  },\n  parse: function () {\n    var normalData = [[-0.525731, 0.0, 0.850651], [-0.442863, 0.238856, 0.864188], [-0.295242, 0.0, 0.955423], [-0.309017, 0.5, 0.809017], [-0.16246, 0.262866, 0.951056], [0.0, 0.0, 1.0], [0.0, 0.850651, 0.525731], [-0.147621, 0.716567, 0.681718], [0.147621, 0.716567, 0.681718], [0.0, 0.525731, 0.850651], [0.309017, 0.5, 0.809017], [0.525731, 0.0, 0.850651], [0.295242, 0.0, 0.955423], [0.442863, 0.238856, 0.864188], [0.16246, 0.262866, 0.951056], [-0.681718, 0.147621, 0.716567], [-0.809017, 0.309017, 0.5], [-0.587785, 0.425325, 0.688191], [-0.850651, 0.525731, 0.0], [-0.864188, 0.442863, 0.238856], [-0.716567, 0.681718, 0.147621], [-0.688191, 0.587785, 0.425325], [-0.5, 0.809017, 0.309017], [-0.238856, 0.864188, 0.442863], [-0.425325, 0.688191, 0.587785], [-0.716567, 0.681718, -0.147621], [-0.5, 0.809017, -0.309017], [-0.525731, 0.850651, 0.0], [0.0, 0.850651, -0.525731], [-0.238856, 0.864188, -0.442863], [0.0, 0.955423, -0.295242], [-0.262866, 0.951056, -0.16246], [0.0, 1.0, 0.0], [0.0, 0.955423, 0.295242], [-0.262866, 0.951056, 0.16246], [0.238856, 0.864188, 0.442863], [0.262866, 0.951056, 0.16246], [0.5, 0.809017, 0.309017], [0.238856, 0.864188, -0.442863], [0.262866, 0.951056, -0.16246], [0.5, 0.809017, -0.309017], [0.850651, 0.525731, 0.0], [0.716567, 0.681718, 0.147621], [0.716567, 0.681718, -0.147621], [0.525731, 0.850651, 0.0], [0.425325, 0.688191, 0.587785], [0.864188, 0.442863, 0.238856], [0.688191, 0.587785, 0.425325], [0.809017, 0.309017, 0.5], [0.681718, 0.147621, 0.716567], [0.587785, 0.425325, 0.688191], [0.955423, 0.295242, 0.0], [1.0, 0.0, 0.0], [0.951056, 0.16246, 0.262866], [0.850651, -0.525731, 0.0], [0.955423, -0.295242, 0.0], [0.864188, -0.442863, 0.238856], [0.951056, -0.16246, 0.262866], [0.809017, -0.309017, 0.5], [0.681718, -0.147621, 0.716567], [0.850651, 0.0, 0.525731], [0.864188, 0.442863, -0.238856], [0.809017, 0.309017, -0.5], [0.951056, 0.16246, -0.262866], [0.525731, 0.0, -0.850651], [0.681718, 0.147621, -0.716567], [0.681718, -0.147621, -0.716567], [0.850651, 0.0, -0.525731], [0.809017, -0.309017, -0.5], [0.864188, -0.442863, -0.238856], [0.951056, -0.16246, -0.262866], [0.147621, 0.716567, -0.681718], [0.309017, 0.5, -0.809017], [0.425325, 0.688191, -0.587785], [0.442863, 0.238856, -0.864188], [0.587785, 0.425325, -0.688191], [0.688191, 0.587785, -0.425325], [-0.147621, 0.716567, -0.681718], [-0.309017, 0.5, -0.809017], [0.0, 0.525731, -0.850651], [-0.525731, 0.0, -0.850651], [-0.442863, 0.238856, -0.864188], [-0.295242, 0.0, -0.955423], [-0.16246, 0.262866, -0.951056], [0.0, 0.0, -1.0], [0.295242, 0.0, -0.955423], [0.16246, 0.262866, -0.951056], [-0.442863, -0.238856, -0.864188], [-0.309017, -0.5, -0.809017], [-0.16246, -0.262866, -0.951056], [0.0, -0.850651, -0.525731], [-0.147621, -0.716567, -0.681718], [0.147621, -0.716567, -0.681718], [0.0, -0.525731, -0.850651], [0.309017, -0.5, -0.809017], [0.442863, -0.238856, -0.864188], [0.16246, -0.262866, -0.951056], [0.238856, -0.864188, -0.442863], [0.5, -0.809017, -0.309017], [0.425325, -0.688191, -0.587785], [0.716567, -0.681718, -0.147621], [0.688191, -0.587785, -0.425325], [0.587785, -0.425325, -0.688191], [0.0, -0.955423, -0.295242], [0.0, -1.0, 0.0], [0.262866, -0.951056, -0.16246], [0.0, -0.850651, 0.525731], [0.0, -0.955423, 0.295242], [0.238856, -0.864188, 0.442863], [0.262866, -0.951056, 0.16246], [0.5, -0.809017, 0.309017], [0.716567, -0.681718, 0.147621], [0.525731, -0.850651, 0.0], [-0.238856, -0.864188, -0.442863], [-0.5, -0.809017, -0.309017], [-0.262866, -0.951056, -0.16246], [-0.850651, -0.525731, 0.0], [-0.716567, -0.681718, -0.147621], [-0.716567, -0.681718, 0.147621], [-0.525731, -0.850651, 0.0], [-0.5, -0.809017, 0.309017], [-0.238856, -0.864188, 0.442863], [-0.262866, -0.951056, 0.16246], [-0.864188, -0.442863, 0.238856], [-0.809017, -0.309017, 0.5], [-0.688191, -0.587785, 0.425325], [-0.681718, -0.147621, 0.716567], [-0.442863, -0.238856, 0.864188], [-0.587785, -0.425325, 0.688191], [-0.309017, -0.5, 0.809017], [-0.147621, -0.716567, 0.681718], [-0.425325, -0.688191, 0.587785], [-0.16246, -0.262866, 0.951056], [0.442863, -0.238856, 0.864188], [0.16246, -0.262866, 0.951056], [0.309017, -0.5, 0.809017], [0.147621, -0.716567, 0.681718], [0.0, -0.525731, 0.850651], [0.425325, -0.688191, 0.587785], [0.587785, -0.425325, 0.688191], [0.688191, -0.587785, 0.425325], [-0.955423, 0.295242, 0.0], [-0.951056, 0.16246, 0.262866], [-1.0, 0.0, 0.0], [-0.850651, 0.0, 0.525731], [-0.955423, -0.295242, 0.0], [-0.951056, -0.16246, 0.262866], [-0.864188, 0.442863, -0.238856], [-0.951056, 0.16246, -0.262866], [-0.809017, 0.309017, -0.5], [-0.864188, -0.442863, -0.238856], [-0.951056, -0.16246, -0.262866], [-0.809017, -0.309017, -0.5], [-0.681718, 0.147621, -0.716567], [-0.681718, -0.147621, -0.716567], [-0.850651, 0.0, -0.525731], [-0.688191, 0.587785, -0.425325], [-0.587785, 0.425325, -0.688191], [-0.425325, 0.688191, -0.587785], [-0.425325, -0.688191, -0.587785], [-0.587785, -0.425325, -0.688191], [-0.688191, -0.587785, -0.425325]];\n    return function (buffer) {\n      var data = new DataView(buffer); // http://tfc.duke.free.fr/coding/md2-specs-en.html\n\n      var header = {};\n      var headerNames = ['ident', 'version', 'skinwidth', 'skinheight', 'framesize', 'num_skins', 'num_vertices', 'num_st', 'num_tris', 'num_glcmds', 'num_frames', 'offset_skins', 'offset_st', 'offset_tris', 'offset_frames', 'offset_glcmds', 'offset_end'];\n\n      for (let i = 0; i < headerNames.length; i++) {\n        header[headerNames[i]] = data.getInt32(i * 4, true);\n      }\n\n      if (header.ident !== 844121161 || header.version !== 8) {\n        console.error('Not a valid MD2 file');\n        return;\n      }\n\n      if (header.offset_end !== data.byteLength) {\n        console.error('Corrupted MD2 file');\n        return;\n      } //\n\n\n      var geometry = new BufferGeometry(); // uvs\n\n      var uvsTemp = [];\n      var offset = header.offset_st;\n\n      for (let i = 0, l = header.num_st; i < l; i++) {\n        var u = data.getInt16(offset + 0, true);\n        var v = data.getInt16(offset + 2, true);\n        uvsTemp.push(u / header.skinwidth, 1 - v / header.skinheight);\n        offset += 4;\n      } // triangles\n\n\n      offset = header.offset_tris;\n      var vertexIndices = [];\n      var uvIndices = [];\n\n      for (let i = 0, l = header.num_tris; i < l; i++) {\n        vertexIndices.push(data.getUint16(offset + 0, true), data.getUint16(offset + 2, true), data.getUint16(offset + 4, true));\n        uvIndices.push(data.getUint16(offset + 6, true), data.getUint16(offset + 8, true), data.getUint16(offset + 10, true));\n        offset += 12;\n      } // frames\n\n\n      var translation = new Vector3();\n      var scale = new Vector3();\n      var string = [];\n      var frames = [];\n      offset = header.offset_frames;\n\n      for (let i = 0, l = header.num_frames; i < l; i++) {\n        scale.set(data.getFloat32(offset + 0, true), data.getFloat32(offset + 4, true), data.getFloat32(offset + 8, true));\n        translation.set(data.getFloat32(offset + 12, true), data.getFloat32(offset + 16, true), data.getFloat32(offset + 20, true));\n        offset += 24;\n\n        for (let j = 0; j < 16; j++) {\n          var character = data.getUint8(offset + j, true);\n          if (character === 0) break;\n          string[j] = character;\n        }\n\n        var frame = {\n          name: String.fromCharCode.apply(null, string),\n          vertices: [],\n          normals: []\n        };\n        offset += 16;\n\n        for (let j = 0; j < header.num_vertices; j++) {\n          var x = data.getUint8(offset++, true);\n          var y = data.getUint8(offset++, true);\n          var z = data.getUint8(offset++, true);\n          var n = normalData[data.getUint8(offset++, true)];\n          x = x * scale.x + translation.x;\n          y = y * scale.y + translation.y;\n          z = z * scale.z + translation.z;\n          frame.vertices.push(x, z, y); // convert to Y-up\n\n          frame.normals.push(n[0], n[2], n[1]); // convert to Y-up\n        }\n\n        frames.push(frame);\n      } // static\n\n\n      var positions = [];\n      var normals = [];\n      var uvs = [];\n      var verticesTemp = frames[0].vertices;\n      var normalsTemp = frames[0].normals;\n\n      for (let i = 0, l = vertexIndices.length; i < l; i++) {\n        var vertexIndex = vertexIndices[i];\n        var stride = vertexIndex * 3; //\n\n        var x = verticesTemp[stride];\n        var y = verticesTemp[stride + 1];\n        var z = verticesTemp[stride + 2];\n        positions.push(x, y, z); //\n\n        var nx = normalsTemp[stride];\n        var ny = normalsTemp[stride + 1];\n        var nz = normalsTemp[stride + 2];\n        normals.push(nx, ny, nz); //\n\n        var uvIndex = uvIndices[i];\n        stride = uvIndex * 2;\n        var u = uvsTemp[stride];\n        var v = uvsTemp[stride + 1];\n        uvs.push(u, v);\n      }\n\n      geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n      geometry.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n      geometry.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // animation\n\n      var morphPositions = [];\n      var morphNormals = [];\n\n      for (let i = 0, l = frames.length; i < l; i++) {\n        var frame = frames[i];\n        var attributeName = frame.name;\n\n        if (frame.vertices.length > 0) {\n          var positions = [];\n\n          for (let j = 0, jl = vertexIndices.length; j < jl; j++) {\n            var vertexIndex = vertexIndices[j];\n            var stride = vertexIndex * 3;\n            var x = frame.vertices[stride];\n            var y = frame.vertices[stride + 1];\n            var z = frame.vertices[stride + 2];\n            positions.push(x, y, z);\n          }\n\n          var positionAttribute = new Float32BufferAttribute(positions, 3);\n          positionAttribute.name = attributeName;\n          morphPositions.push(positionAttribute);\n        }\n\n        if (frame.normals.length > 0) {\n          var normals = [];\n\n          for (let j = 0, jl = vertexIndices.length; j < jl; j++) {\n            var vertexIndex = vertexIndices[j];\n            var stride = vertexIndex * 3;\n            var nx = frame.normals[stride];\n            var ny = frame.normals[stride + 1];\n            var nz = frame.normals[stride + 2];\n            normals.push(nx, ny, nz);\n          }\n\n          var normalAttribute = new Float32BufferAttribute(normals, 3);\n          normalAttribute.name = attributeName;\n          morphNormals.push(normalAttribute);\n        }\n      }\n\n      geometry.morphAttributes.position = morphPositions;\n      geometry.morphAttributes.normal = morphNormals;\n      geometry.morphTargetsRelative = false;\n      geometry.animations = AnimationClip.CreateClipsFromMorphTargetSequences(frames, 10);\n      return geometry;\n    };\n  }()\n});\n\nexport { MD2Loader };\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,UAAU,EAAEC,cAAc,EAAEC,OAAO,EAAEC,sBAAsB,EAAEC,aAAa,QAAQ,OAAO;AAE1G,IAAIC,SAAS,GAAG,SAAAA,CAAUC,OAAO,EAAE;EACjCP,MAAM,CAACQ,IAAI,CAAC,IAAI,EAAED,OAAO,CAAC;AAC5B,CAAC;AAEDD,SAAS,CAACG,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,MAAM,CAACZ,MAAM,CAACS,SAAS,CAAC,EAAE;EACnEI,WAAW,EAAEP,SAAS;EACtBQ,IAAI,EAAE,SAAAA,CAAUC,GAAG,EAAEC,MAAM,EAAEC,UAAU,EAAEC,OAAO,EAAE;IAChD,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAIC,MAAM,GAAG,IAAInB,UAAU,CAACkB,KAAK,CAACZ,OAAO,CAAC;IAC1Ca,MAAM,CAACC,OAAO,CAACF,KAAK,CAACG,IAAI,CAAC;IAC1BF,MAAM,CAACG,eAAe,CAAC,aAAa,CAAC;IACrCH,MAAM,CAACI,gBAAgB,CAACL,KAAK,CAACM,aAAa,CAAC;IAC5CL,MAAM,CAACM,kBAAkB,CAACP,KAAK,CAACQ,eAAe,CAAC;IAChDP,MAAM,CAACN,IAAI,CAACC,GAAG,EAAE,UAAUa,MAAM,EAAE;MACjC,IAAI;QACFZ,MAAM,CAACG,KAAK,CAACU,KAAK,CAACD,MAAM,CAAC,CAAC;MAC7B,CAAC,CAAC,OAAOE,CAAC,EAAE;QACV,IAAIZ,OAAO,EAAE;UACXA,OAAO,CAACY,CAAC,CAAC;QACZ,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAACF,CAAC,CAAC;QAClB;QAEAX,KAAK,CAACZ,OAAO,CAAC0B,SAAS,CAAClB,GAAG,CAAC;MAC9B;IACF,CAAC,EAAEE,UAAU,EAAEC,OAAO,CAAC;EACzB,CAAC;EACDW,KAAK,EAAE,YAAY;IACjB,IAAIK,UAAU,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,OAAO,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EAAE,QAAQ,EAAE,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,EA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","ignoreList":[]},"metadata":{},"sourceType":"module"}