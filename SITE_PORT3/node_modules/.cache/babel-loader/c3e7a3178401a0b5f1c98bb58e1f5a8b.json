{"ast":null,"code":"import { Mesh, Vector3, InstancedInterleavedBuffer, InterleavedBufferAttribute } from 'three';\nimport { LineSegmentsGeometry } from './LineSegmentsGeometry.js';\nimport { LineMaterial } from './LineMaterial.js';\nvar Wireframe = function (geometry, material) {\n  Mesh.call(this);\n  this.type = 'Wireframe';\n  this.geometry = geometry !== undefined ? geometry : new LineSegmentsGeometry();\n  this.material = material !== undefined ? material : new LineMaterial({\n    color: Math.random() * 0xffffff\n  });\n};\nWireframe.prototype = Object.assign(Object.create(Mesh.prototype), {\n  constructor: Wireframe,\n  isWireframe: true,\n  computeLineDistances: function () {\n    // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n    var start = new Vector3();\n    var end = new Vector3();\n    return function computeLineDistances() {\n      var geometry = this.geometry;\n      var instanceStart = geometry.attributes.instanceStart;\n      var instanceEnd = geometry.attributes.instanceEnd;\n      var lineDistances = new Float32Array(2 * instanceStart.data.count);\n      for (let i = 0, j = 0, l = instanceStart.data.count; i < l; i++, j += 2) {\n        start.fromBufferAttribute(instanceStart, i);\n        end.fromBufferAttribute(instanceEnd, i);\n        lineDistances[j] = j === 0 ? 0 : lineDistances[j - 1];\n        lineDistances[j + 1] = lineDistances[j] + start.distanceTo(end);\n      }\n      var instanceDistanceBuffer = new InstancedInterleavedBuffer(lineDistances, 2, 1); // d0, d1\n\n      geometry.setAttribute('instanceDistanceStart', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 0)); // d0\n\n      geometry.setAttribute('instanceDistanceEnd', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 1)); // d1\n\n      return this;\n    };\n  }()\n});\nexport { Wireframe };","map":{"version":3,"names":["Mesh","Vector3","InstancedInterleavedBuffer","InterleavedBufferAttribute","LineSegmentsGeometry","LineMaterial","Wireframe","geometry","material","call","type","undefined","color","Math","random","prototype","Object","assign","create","constructor","isWireframe","computeLineDistances","start","end","instanceStart","attributes","instanceEnd","lineDistances","Float32Array","data","count","i","j","l","fromBufferAttribute","distanceTo","instanceDistanceBuffer","setAttribute"],"sources":["C:/Users/drncs/OneDrive/Área de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/lines/Wireframe.js"],"sourcesContent":["import { Mesh, Vector3, InstancedInterleavedBuffer, InterleavedBufferAttribute } from 'three';\nimport { LineSegmentsGeometry } from './LineSegmentsGeometry.js';\nimport { LineMaterial } from './LineMaterial.js';\n\nvar Wireframe = function (geometry, material) {\n  Mesh.call(this);\n  this.type = 'Wireframe';\n  this.geometry = geometry !== undefined ? geometry : new LineSegmentsGeometry();\n  this.material = material !== undefined ? material : new LineMaterial({\n    color: Math.random() * 0xffffff\n  });\n};\n\nWireframe.prototype = Object.assign(Object.create(Mesh.prototype), {\n  constructor: Wireframe,\n  isWireframe: true,\n  computeLineDistances: function () {\n    // for backwards-compatability, but could be a method of LineSegmentsGeometry...\n    var start = new Vector3();\n    var end = new Vector3();\n    return function computeLineDistances() {\n      var geometry = this.geometry;\n      var instanceStart = geometry.attributes.instanceStart;\n      var instanceEnd = geometry.attributes.instanceEnd;\n      var lineDistances = new Float32Array(2 * instanceStart.data.count);\n\n      for (let i = 0, j = 0, l = instanceStart.data.count; i < l; i++, j += 2) {\n        start.fromBufferAttribute(instanceStart, i);\n        end.fromBufferAttribute(instanceEnd, i);\n        lineDistances[j] = j === 0 ? 0 : lineDistances[j - 1];\n        lineDistances[j + 1] = lineDistances[j] + start.distanceTo(end);\n      }\n\n      var instanceDistanceBuffer = new InstancedInterleavedBuffer(lineDistances, 2, 1); // d0, d1\n\n      geometry.setAttribute('instanceDistanceStart', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 0)); // d0\n\n      geometry.setAttribute('instanceDistanceEnd', new InterleavedBufferAttribute(instanceDistanceBuffer, 1, 1)); // d1\n\n      return this;\n    };\n  }()\n});\n\nexport { Wireframe };\n"],"mappings":"AAAA,SAASA,IAAI,EAAEC,OAAO,EAAEC,0BAA0B,EAAEC,0BAA0B,QAAQ,OAAO;AAC7F,SAASC,oBAAoB,QAAQ,2BAA2B;AAChE,SAASC,YAAY,QAAQ,mBAAmB;AAEhD,IAAIC,SAAS,GAAG,SAAAA,CAAUC,QAAQ,EAAEC,QAAQ,EAAE;EAC5CR,IAAI,CAACS,IAAI,CAAC,IAAI,CAAC;EACf,IAAI,CAACC,IAAI,GAAG,WAAW;EACvB,IAAI,CAACH,QAAQ,GAAGA,QAAQ,KAAKI,SAAS,GAAGJ,QAAQ,GAAG,IAAIH,oBAAoB,CAAC,CAAC;EAC9E,IAAI,CAACI,QAAQ,GAAGA,QAAQ,KAAKG,SAAS,GAAGH,QAAQ,GAAG,IAAIH,YAAY,CAAC;IACnEO,KAAK,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG;EACzB,CAAC,CAAC;AACJ,CAAC;AAEDR,SAAS,CAACS,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACD,MAAM,CAACE,MAAM,CAAClB,IAAI,CAACe,SAAS,CAAC,EAAE;EACjEI,WAAW,EAAEb,SAAS;EACtBc,WAAW,EAAE,IAAI;EACjBC,oBAAoB,EAAE,YAAY;IAChC;IACA,IAAIC,KAAK,GAAG,IAAIrB,OAAO,CAAC,CAAC;IACzB,IAAIsB,GAAG,GAAG,IAAItB,OAAO,CAAC,CAAC;IACvB,OAAO,SAASoB,oBAAoBA,CAAA,EAAG;MACrC,IAAId,QAAQ,GAAG,IAAI,CAACA,QAAQ;MAC5B,IAAIiB,aAAa,GAAGjB,QAAQ,CAACkB,UAAU,CAACD,aAAa;MACrD,IAAIE,WAAW,GAAGnB,QAAQ,CAACkB,UAAU,CAACC,WAAW;MACjD,IAAIC,aAAa,GAAG,IAAIC,YAAY,CAAC,CAAC,GAAGJ,aAAa,CAACK,IAAI,CAACC,KAAK,CAAC;MAElE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAG,CAAC,EAAEC,CAAC,GAAGT,aAAa,CAACK,IAAI,CAACC,KAAK,EAAEC,CAAC,GAAGE,CAAC,EAAEF,CAAC,EAAE,EAAEC,CAAC,IAAI,CAAC,EAAE;QACvEV,KAAK,CAACY,mBAAmB,CAACV,aAAa,EAAEO,CAAC,CAAC;QAC3CR,GAAG,CAACW,mBAAmB,CAACR,WAAW,EAAEK,CAAC,CAAC;QACvCJ,aAAa,CAACK,CAAC,CAAC,GAAGA,CAAC,KAAK,CAAC,GAAG,CAAC,GAAGL,aAAa,CAACK,CAAC,GAAG,CAAC,CAAC;QACrDL,aAAa,CAACK,CAAC,GAAG,CAAC,CAAC,GAAGL,aAAa,CAACK,CAAC,CAAC,GAAGV,KAAK,CAACa,UAAU,CAACZ,GAAG,CAAC;MACjE;MAEA,IAAIa,sBAAsB,GAAG,IAAIlC,0BAA0B,CAACyB,aAAa,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;;MAElFpB,QAAQ,CAAC8B,YAAY,CAAC,uBAAuB,EAAE,IAAIlC,0BAA0B,CAACiC,sBAAsB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;MAE9G7B,QAAQ,CAAC8B,YAAY,CAAC,qBAAqB,EAAE,IAAIlC,0BAA0B,CAACiC,sBAAsB,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;;MAE5G,OAAO,IAAI;IACb,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,SAAS9B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}