{"ast":null,"code":"import { forEach, has, isArray, isFunction, peek, some } from \"../../../utils/utils\";\nimport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal } from \"../../grammar/gast/gast_public\";\nimport { Lexer } from \"../../../scan/lexer_public\";\nimport { augmentTokenTypes, hasShortKeyProperty } from \"../../../scan/tokens\";\nimport { createToken, createTokenInstance } from \"../../../scan/tokens_public\";\nimport { END_OF_FILE } from \"../parser\";\nimport { BITS_FOR_OCCURRENCE_IDX } from \"../../grammar/keys\";\nvar RECORDING_NULL_OBJECT = {\n  description: \"This Object indicates the Parser is during Recording Phase\"\n};\nObject.freeze(RECORDING_NULL_OBJECT);\nvar HANDLE_SEPARATOR = true;\nvar MAX_METHOD_IDX = Math.pow(2, BITS_FOR_OCCURRENCE_IDX) - 1;\nvar RFT = createToken({\n  name: \"RECORDING_PHASE_TOKEN\",\n  pattern: Lexer.NA\n});\naugmentTokenTypes([RFT]);\nvar RECORDING_PHASE_TOKEN = createTokenInstance(RFT, \"This IToken indicates the Parser is in Recording Phase\\n\\t\" + \"\" + \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n// Using \"-1\" instead of NaN (as in EOF) because an actual number is less likely to\n// cause errors if the output of LA or CONSUME would be (incorrectly) used during the recording phase.\n-1, -1, -1, -1, -1, -1);\nObject.freeze(RECORDING_PHASE_TOKEN);\nvar RECORDING_PHASE_CSTNODE = {\n  name: \"This CSTNode indicates the Parser is in Recording Phase\\n\\t\" + \"See: https://chevrotain.io/docs/guide/internals.html#grammar-recording for details\",\n  children: {}\n};\n/**\n * This trait handles the creation of the GAST structure for Chevrotain Grammars\n */\nvar GastRecorder = /** @class */function () {\n  function GastRecorder() {}\n  GastRecorder.prototype.initGastRecorder = function (config) {\n    this.recordingProdStack = [];\n    this.RECORDING_PHASE = false;\n  };\n  GastRecorder.prototype.enableRecording = function () {\n    var _this = this;\n    this.RECORDING_PHASE = true;\n    this.TRACE_INIT(\"Enable Recording\", function () {\n      var _loop_1 = function (i) {\n        var idx = i > 0 ? i : \"\";\n        _this[\"CONSUME\" + idx] = function (arg1, arg2) {\n          return this.consumeInternalRecord(arg1, i, arg2);\n        };\n        _this[\"SUBRULE\" + idx] = function (arg1, arg2) {\n          return this.subruleInternalRecord(arg1, i, arg2);\n        };\n        _this[\"OPTION\" + idx] = function (arg1) {\n          return this.optionInternalRecord(arg1, i);\n        };\n        _this[\"OR\" + idx] = function (arg1) {\n          return this.orInternalRecord(arg1, i);\n        };\n        _this[\"MANY\" + idx] = function (arg1) {\n          this.manyInternalRecord(i, arg1);\n        };\n        _this[\"MANY_SEP\" + idx] = function (arg1) {\n          this.manySepFirstInternalRecord(i, arg1);\n        };\n        _this[\"AT_LEAST_ONE\" + idx] = function (arg1) {\n          this.atLeastOneInternalRecord(i, arg1);\n        };\n        _this[\"AT_LEAST_ONE_SEP\" + idx] = function (arg1) {\n          this.atLeastOneSepFirstInternalRecord(i, arg1);\n        };\n      };\n      /**\n       * Warning Dark Voodoo Magic upcoming!\n       * We are \"replacing\" the public parsing DSL methods API\n       * With **new** alternative implementations on the Parser **instance**\n       *\n       * So far this is the only way I've found to avoid performance regressions during parsing time.\n       * - Approx 30% performance regression was measured on Chrome 75 Canary when attempting to replace the \"internal\"\n       *   implementations directly instead.\n       */\n      for (var i = 0; i < 10; i++) {\n        _loop_1(i);\n      }\n      // DSL methods with the idx(suffix) as an argument\n      _this[\"consume\"] = function (idx, arg1, arg2) {\n        return this.consumeInternalRecord(arg1, idx, arg2);\n      };\n      _this[\"subrule\"] = function (idx, arg1, arg2) {\n        return this.subruleInternalRecord(arg1, idx, arg2);\n      };\n      _this[\"option\"] = function (idx, arg1) {\n        return this.optionInternalRecord(arg1, idx);\n      };\n      _this[\"or\"] = function (idx, arg1) {\n        return this.orInternalRecord(arg1, idx);\n      };\n      _this[\"many\"] = function (idx, arg1) {\n        this.manyInternalRecord(idx, arg1);\n      };\n      _this[\"atLeastOne\"] = function (idx, arg1) {\n        this.atLeastOneInternalRecord(idx, arg1);\n      };\n      _this.ACTION = _this.ACTION_RECORD;\n      _this.BACKTRACK = _this.BACKTRACK_RECORD;\n      _this.LA = _this.LA_RECORD;\n    });\n  };\n  GastRecorder.prototype.disableRecording = function () {\n    var _this = this;\n    this.RECORDING_PHASE = false;\n    // By deleting these **instance** properties, any future invocation\n    // will be deferred to the original methods on the **prototype** object\n    // This seems to get rid of any incorrect optimizations that V8 may\n    // do during the recording phase.\n    this.TRACE_INIT(\"Deleting Recording methods\", function () {\n      for (var i = 0; i < 10; i++) {\n        var idx = i > 0 ? i : \"\";\n        delete _this[\"CONSUME\" + idx];\n        delete _this[\"SUBRULE\" + idx];\n        delete _this[\"OPTION\" + idx];\n        delete _this[\"OR\" + idx];\n        delete _this[\"MANY\" + idx];\n        delete _this[\"MANY_SEP\" + idx];\n        delete _this[\"AT_LEAST_ONE\" + idx];\n        delete _this[\"AT_LEAST_ONE_SEP\" + idx];\n      }\n      delete _this[\"consume\"];\n      delete _this[\"subrule\"];\n      delete _this[\"option\"];\n      delete _this[\"or\"];\n      delete _this[\"many\"];\n      delete _this[\"atLeastOne\"];\n      delete _this.ACTION;\n      delete _this.BACKTRACK;\n      delete _this.LA;\n    });\n  };\n  // TODO: is there any way to use this method to check no\n  //   Parser methods are called inside an ACTION?\n  //   Maybe try/catch/finally on ACTIONS while disabling the recorders state changes?\n  GastRecorder.prototype.ACTION_RECORD = function (impl) {\n    // NO-OP during recording\n    return;\n  };\n  // Executing backtracking logic will break our recording logic assumptions\n  GastRecorder.prototype.BACKTRACK_RECORD = function (grammarRule, args) {\n    return function () {\n      return true;\n    };\n  };\n  // LA is part of the official API and may be used for custom lookahead logic\n  // by end users who may forget to wrap it in ACTION or inside a GATE\n  GastRecorder.prototype.LA_RECORD = function (howMuch) {\n    // We cannot use the RECORD_PHASE_TOKEN here because someone may depend\n    // On LA return EOF at the end of the input so an infinite loop may occur.\n    return END_OF_FILE;\n  };\n  GastRecorder.prototype.topLevelRuleRecord = function (name, def) {\n    try {\n      var newTopLevelRule = new Rule({\n        definition: [],\n        name: name\n      });\n      newTopLevelRule.name = name;\n      this.recordingProdStack.push(newTopLevelRule);\n      def.call(this);\n      this.recordingProdStack.pop();\n      return newTopLevelRule;\n    } catch (originalError) {\n      if (originalError.KNOWN_RECORDER_ERROR !== true) {\n        try {\n          originalError.message = originalError.message + '\\n\\t This error was thrown during the \"grammar recording phase\" For more info see:\\n\\t' + \"https://chevrotain.io/docs/guide/internals.html#grammar-recording\";\n        } catch (mutabilityError) {\n          // We may not be able to modify the original error object\n          throw originalError;\n        }\n      }\n      throw originalError;\n    }\n  };\n  // Implementation of parsing DSL\n  GastRecorder.prototype.optionInternalRecord = function (actionORMethodDef, occurrence) {\n    return recordProd.call(this, Option, actionORMethodDef, occurrence);\n  };\n  GastRecorder.prototype.atLeastOneInternalRecord = function (occurrence, actionORMethodDef) {\n    recordProd.call(this, RepetitionMandatory, actionORMethodDef, occurrence);\n  };\n  GastRecorder.prototype.atLeastOneSepFirstInternalRecord = function (occurrence, options) {\n    recordProd.call(this, RepetitionMandatoryWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n  };\n  GastRecorder.prototype.manyInternalRecord = function (occurrence, actionORMethodDef) {\n    recordProd.call(this, Repetition, actionORMethodDef, occurrence);\n  };\n  GastRecorder.prototype.manySepFirstInternalRecord = function (occurrence, options) {\n    recordProd.call(this, RepetitionWithSeparator, options, occurrence, HANDLE_SEPARATOR);\n  };\n  GastRecorder.prototype.orInternalRecord = function (altsOrOpts, occurrence) {\n    return recordOrProd.call(this, altsOrOpts, occurrence);\n  };\n  GastRecorder.prototype.subruleInternalRecord = function (ruleToCall, occurrence, options) {\n    assertMethodIdxIsValid(occurrence);\n    if (!ruleToCall || has(ruleToCall, \"ruleName\") === false) {\n      var error = new Error(\"<SUBRULE\" + getIdxSuffix(occurrence) + \"> argument is invalid\" + (\" expecting a Parser method reference but got: <\" + JSON.stringify(ruleToCall) + \">\") + (\"\\n inside top level rule: <\" + this.recordingProdStack[0].name + \">\"));\n      error.KNOWN_RECORDER_ERROR = true;\n      throw error;\n    }\n    var prevProd = peek(this.recordingProdStack);\n    var ruleName = ruleToCall[\"ruleName\"];\n    var newNoneTerminal = new NonTerminal({\n      idx: occurrence,\n      nonTerminalName: ruleName,\n      // The resolving of the `referencedRule` property will be done once all the Rule's GASTs have been created\n      referencedRule: undefined\n    });\n    prevProd.definition.push(newNoneTerminal);\n    return this.outputCst ? RECORDING_PHASE_CSTNODE : RECORDING_NULL_OBJECT;\n  };\n  GastRecorder.prototype.consumeInternalRecord = function (tokType, occurrence, options) {\n    assertMethodIdxIsValid(occurrence);\n    if (!hasShortKeyProperty(tokType)) {\n      var error = new Error(\"<CONSUME\" + getIdxSuffix(occurrence) + \"> argument is invalid\" + (\" expecting a TokenType reference but got: <\" + JSON.stringify(tokType) + \">\") + (\"\\n inside top level rule: <\" + this.recordingProdStack[0].name + \">\"));\n      error.KNOWN_RECORDER_ERROR = true;\n      throw error;\n    }\n    var prevProd = peek(this.recordingProdStack);\n    var newNoneTerminal = new Terminal({\n      idx: occurrence,\n      terminalType: tokType\n    });\n    prevProd.definition.push(newNoneTerminal);\n    return RECORDING_PHASE_TOKEN;\n  };\n  return GastRecorder;\n}();\nexport { GastRecorder };\nfunction recordProd(prodConstructor, mainProdArg, occurrence, handleSep) {\n  if (handleSep === void 0) {\n    handleSep = false;\n  }\n  assertMethodIdxIsValid(occurrence);\n  var prevProd = peek(this.recordingProdStack);\n  var grammarAction = isFunction(mainProdArg) ? mainProdArg : mainProdArg.DEF;\n  var newProd = new prodConstructor({\n    definition: [],\n    idx: occurrence\n  });\n  if (handleSep) {\n    newProd.separator = mainProdArg.SEP;\n  }\n  if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n  }\n  this.recordingProdStack.push(newProd);\n  grammarAction.call(this);\n  prevProd.definition.push(newProd);\n  this.recordingProdStack.pop();\n  return RECORDING_NULL_OBJECT;\n}\nfunction recordOrProd(mainProdArg, occurrence) {\n  var _this = this;\n  assertMethodIdxIsValid(occurrence);\n  var prevProd = peek(this.recordingProdStack);\n  // Only an array of alternatives\n  var hasOptions = isArray(mainProdArg) === false;\n  var alts = hasOptions === false ? mainProdArg : mainProdArg.DEF;\n  var newOrProd = new Alternation({\n    definition: [],\n    idx: occurrence,\n    ignoreAmbiguities: hasOptions && mainProdArg.IGNORE_AMBIGUITIES === true\n  });\n  if (has(mainProdArg, \"MAX_LOOKAHEAD\")) {\n    newOrProd.maxLookahead = mainProdArg.MAX_LOOKAHEAD;\n  }\n  var hasPredicates = some(alts, function (currAlt) {\n    return isFunction(currAlt.GATE);\n  });\n  newOrProd.hasPredicates = hasPredicates;\n  prevProd.definition.push(newOrProd);\n  forEach(alts, function (currAlt) {\n    var currAltFlat = new Alternative({\n      definition: []\n    });\n    newOrProd.definition.push(currAltFlat);\n    if (has(currAlt, \"IGNORE_AMBIGUITIES\")) {\n      currAltFlat.ignoreAmbiguities = currAlt.IGNORE_AMBIGUITIES;\n    }\n    // **implicit** ignoreAmbiguities due to usage of gate\n    else if (has(currAlt, \"GATE\")) {\n      currAltFlat.ignoreAmbiguities = true;\n    }\n    _this.recordingProdStack.push(currAltFlat);\n    currAlt.ALT.call(_this);\n    _this.recordingProdStack.pop();\n  });\n  return RECORDING_NULL_OBJECT;\n}\nfunction getIdxSuffix(idx) {\n  return idx === 0 ? \"\" : \"\" + idx;\n}\nfunction assertMethodIdxIsValid(idx) {\n  if (idx < 0 || idx > MAX_METHOD_IDX) {\n    var error = new Error(\n    // The stack trace will contain all the needed details\n    \"Invalid DSL Method idx value: <\" + idx + \">\\n\\t\" + (\"Idx value must be a none negative value smaller than \" + (MAX_METHOD_IDX + 1)));\n    error.KNOWN_RECORDER_ERROR = true;\n    throw error;\n  }\n}","map":{"version":3,"names":["forEach","has","isArray","isFunction","peek","some","Alternation","Alternative","NonTerminal","Option","Repetition","RepetitionMandatory","RepetitionMandatoryWithSeparator","RepetitionWithSeparator","Rule","Terminal","Lexer","augmentTokenTypes","hasShortKeyProperty","createToken","createTokenInstance","END_OF_FILE","BITS_FOR_OCCURRENCE_IDX","RECORDING_NULL_OBJECT","description","Object","freeze","HANDLE_SEPARATOR","MAX_METHOD_IDX","Math","pow","RFT","name","pattern","NA","RECORDING_PHASE_TOKEN","RECORDING_PHASE_CSTNODE","children","GastRecorder","prototype","initGastRecorder","config","recordingProdStack","RECORDING_PHASE","enableRecording","_this","TRACE_INIT","i","idx","arg1","arg2","consumeInternalRecord","subruleInternalRecord","optionInternalRecord","orInternalRecord","manyInternalRecord","manySepFirstInternalRecord","atLeastOneInternalRecord","atLeastOneSepFirstInternalRecord","ACTION","ACTION_RECORD","BACKTRACK","BACKTRACK_RECORD","LA","LA_RECORD","disableRecording","impl","grammarRule","args","howMuch","topLevelRuleRecord","def","newTopLevelRule","definition","push","call","pop","originalError","KNOWN_RECORDER_ERROR","message","mutabilityError","actionORMethodDef","occurrence","recordProd","options","altsOrOpts","recordOrProd","ruleToCall","assertMethodIdxIsValid","error","Error","getIdxSuffix","JSON","stringify","prevProd","ruleName","newNoneTerminal","nonTerminalName","referencedRule","undefined","outputCst","tokType","terminalType","prodConstructor","mainProdArg","handleSep","grammarAction","DEF","newProd","separator","SEP","maxLookahead","MAX_LOOKAHEAD","hasOptions","alts","newOrProd","ignoreAmbiguities","IGNORE_AMBIGUITIES","hasPredicates","currAlt","GATE","currAltFlat","ALT"],"sources":["../../../../../src/parse/parser/traits/gast_recorder.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}