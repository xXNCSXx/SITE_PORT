{"ast":null,"code":"import { Node } from '../../core/Node.js';\nfunction RawNode(value) {\n  Node.call(this, 'v4');\n  this.value = value;\n}\nRawNode.prototype = Object.create(Node.prototype);\nRawNode.prototype.constructor = RawNode;\nRawNode.prototype.nodeType = 'Raw';\nRawNode.prototype.generate = function (builder) {\n  var data = this.value.analyzeAndFlow(builder, this.type),\n    code = data.code + '\\n';\n  if (builder.isShader('vertex')) {\n    code += 'gl_Position = ' + data.result + ';';\n  } else {\n    code += 'gl_FragColor = ' + data.result + ';';\n  }\n  return code;\n};\nRawNode.prototype.copy = function (source) {\n  Node.prototype.copy.call(this, source);\n  this.value = source.value;\n  return this;\n};\nRawNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n  }\n  return data;\n};\nexport { RawNode };","map":{"version":3,"names":["Node","RawNode","value","call","prototype","Object","create","constructor","nodeType","generate","builder","data","analyzeAndFlow","type","code","isShader","result","copy","source","toJSON","meta","getJSONNode","createJSONNode","uuid"],"sources":["C:/Users/drncs/OneDrive/√Årea de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/materials/nodes/RawNode.js"],"sourcesContent":["import { Node } from '../../core/Node.js';\n\nfunction RawNode(value) {\n  Node.call(this, 'v4');\n  this.value = value;\n}\n\nRawNode.prototype = Object.create(Node.prototype);\nRawNode.prototype.constructor = RawNode;\nRawNode.prototype.nodeType = 'Raw';\n\nRawNode.prototype.generate = function (builder) {\n  var data = this.value.analyzeAndFlow(builder, this.type),\n      code = data.code + '\\n';\n\n  if (builder.isShader('vertex')) {\n    code += 'gl_Position = ' + data.result + ';';\n  } else {\n    code += 'gl_FragColor = ' + data.result + ';';\n  }\n\n  return code;\n};\n\nRawNode.prototype.copy = function (source) {\n  Node.prototype.copy.call(this, source);\n  this.value = source.value;\n  return this;\n};\n\nRawNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { RawNode };\n"],"mappings":"AAAA,SAASA,IAAI,QAAQ,oBAAoB;AAEzC,SAASC,OAAOA,CAACC,KAAK,EAAE;EACtBF,IAAI,CAACG,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;EACrB,IAAI,CAACD,KAAK,GAAGA,KAAK;AACpB;AAEAD,OAAO,CAACG,SAAS,GAAGC,MAAM,CAACC,MAAM,CAACN,IAAI,CAACI,SAAS,CAAC;AACjDH,OAAO,CAACG,SAAS,CAACG,WAAW,GAAGN,OAAO;AACvCA,OAAO,CAACG,SAAS,CAACI,QAAQ,GAAG,KAAK;AAElCP,OAAO,CAACG,SAAS,CAACK,QAAQ,GAAG,UAAUC,OAAO,EAAE;EAC9C,IAAIC,IAAI,GAAG,IAAI,CAACT,KAAK,CAACU,cAAc,CAACF,OAAO,EAAE,IAAI,CAACG,IAAI,CAAC;IACpDC,IAAI,GAAGH,IAAI,CAACG,IAAI,GAAG,IAAI;EAE3B,IAAIJ,OAAO,CAACK,QAAQ,CAAC,QAAQ,CAAC,EAAE;IAC9BD,IAAI,IAAI,gBAAgB,GAAGH,IAAI,CAACK,MAAM,GAAG,GAAG;EAC9C,CAAC,MAAM;IACLF,IAAI,IAAI,iBAAiB,GAAGH,IAAI,CAACK,MAAM,GAAG,GAAG;EAC/C;EAEA,OAAOF,IAAI;AACb,CAAC;AAEDb,OAAO,CAACG,SAAS,CAACa,IAAI,GAAG,UAAUC,MAAM,EAAE;EACzClB,IAAI,CAACI,SAAS,CAACa,IAAI,CAACd,IAAI,CAAC,IAAI,EAAEe,MAAM,CAAC;EACtC,IAAI,CAAChB,KAAK,GAAGgB,MAAM,CAAChB,KAAK;EACzB,OAAO,IAAI;AACb,CAAC;AAEDD,OAAO,CAACG,SAAS,CAACe,MAAM,GAAG,UAAUC,IAAI,EAAE;EACzC,IAAIT,IAAI,GAAG,IAAI,CAACU,WAAW,CAACD,IAAI,CAAC;EAEjC,IAAI,CAACT,IAAI,EAAE;IACTA,IAAI,GAAG,IAAI,CAACW,cAAc,CAACF,IAAI,CAAC;IAChCT,IAAI,CAACT,KAAK,GAAG,IAAI,CAACA,KAAK,CAACiB,MAAM,CAACC,IAAI,CAAC,CAACG,IAAI;EAC3C;EAEA,OAAOZ,IAAI;AACb,CAAC;AAED,SAASV,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}