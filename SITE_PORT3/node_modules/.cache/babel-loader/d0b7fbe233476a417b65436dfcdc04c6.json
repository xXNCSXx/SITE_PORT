{"ast":null,"code":"import { cloneArr, cloneObj, every, flatten, has, isArray, isEmpty, isObject, reduce, uniq, values } from \"../../../utils/utils\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, BITS_FOR_METHOD_TYPE, BITS_FOR_OCCURRENCE_IDX, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX } from \"../../grammar/keys\";\nimport { isRecognitionException, MismatchedTokenException, NotAllInputParsedException } from \"../../exceptions_public\";\nimport { PROD_TYPE } from \"../../grammar/lookahead\";\nimport { NextTerminalAfterAtLeastOneSepWalker, NextTerminalAfterAtLeastOneWalker, NextTerminalAfterManySepWalker, NextTerminalAfterManyWalker } from \"../../grammar/interpreter\";\nimport { DEFAULT_RULE_CONFIG } from \"../parser\";\nimport { IN_RULE_RECOVERY_EXCEPTION } from \"./recoverable\";\nimport { EOF } from \"../../../scan/tokens_public\";\nimport { augmentTokenTypes, isTokenType, tokenStructuredMatcher, tokenStructuredMatcherNoCategories } from \"../../../scan/tokens\";\nimport { classNameFromInstance } from \"../../../lang/lang_extensions\";\n/**\n * This trait is responsible for the runtime parsing engine\n * Used by the official API (recognizer_api.ts)\n */\nvar RecognizerEngine = /** @class */function () {\n  function RecognizerEngine() {}\n  RecognizerEngine.prototype.initRecognizerEngine = function (tokenVocabulary, config) {\n    this.className = classNameFromInstance(this);\n    // TODO: would using an ES6 Map or plain object be faster (CST building scenario)\n    this.shortRuleNameToFull = {};\n    this.fullRuleNameToShort = {};\n    this.ruleShortNameIdx = 256;\n    this.tokenMatcher = tokenStructuredMatcherNoCategories;\n    this.definedRulesNames = [];\n    this.tokensMap = {};\n    this.isBackTrackingStack = [];\n    this.RULE_STACK = [];\n    this.RULE_OCCURRENCE_STACK = [];\n    this.gastProductionsCache = {};\n    if (has(config, \"serializedGrammar\")) {\n      throw Error(\"The Parser's configuration can no longer contain a <serializedGrammar> property.\\n\" + \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_6-0-0\\n\" + \"\\tFor Further details.\");\n    }\n    if (isArray(tokenVocabulary)) {\n      // This only checks for Token vocabularies provided as arrays.\n      // That is good enough because the main objective is to detect users of pre-V4.0 APIs\n      // rather than all edge cases of empty Token vocabularies.\n      if (isEmpty(tokenVocabulary)) {\n        throw Error(\"A Token Vocabulary cannot be empty.\\n\" + \"\\tNote that the first argument for the parser constructor\\n\" + \"\\tis no longer a Token vector (since v4.0).\");\n      }\n      if (typeof tokenVocabulary[0].startOffset === \"number\") {\n        throw Error(\"The Parser constructor no longer accepts a token vector as the first argument.\\n\" + \"\\tSee: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_4-0-0\\n\" + \"\\tFor Further details.\");\n      }\n    }\n    if (isArray(tokenVocabulary)) {\n      this.tokensMap = reduce(tokenVocabulary, function (acc, tokType) {\n        acc[tokType.name] = tokType;\n        return acc;\n      }, {});\n    } else if (has(tokenVocabulary, \"modes\") && every(flatten(values(tokenVocabulary.modes)), isTokenType)) {\n      var allTokenTypes = flatten(values(tokenVocabulary.modes));\n      var uniqueTokens = uniq(allTokenTypes);\n      this.tokensMap = reduce(uniqueTokens, function (acc, tokType) {\n        acc[tokType.name] = tokType;\n        return acc;\n      }, {});\n    } else if (isObject(tokenVocabulary)) {\n      this.tokensMap = cloneObj(tokenVocabulary);\n    } else {\n      throw new Error(\"<tokensDictionary> argument must be An Array of Token constructors,\" + \" A dictionary of Token constructors or an IMultiModeLexerDefinition\");\n    }\n    // always add EOF to the tokenNames -> constructors map. it is useful to assure all the input has been\n    // parsed with a clear error message (\"expecting EOF but found ...\")\n    /* tslint:disable */\n    this.tokensMap[\"EOF\"] = EOF;\n    // TODO: This check may not be accurate for multi mode lexers\n    var noTokenCategoriesUsed = every(values(tokenVocabulary), function (tokenConstructor) {\n      return isEmpty(tokenConstructor.categoryMatches);\n    });\n    this.tokenMatcher = noTokenCategoriesUsed ? tokenStructuredMatcherNoCategories : tokenStructuredMatcher;\n    // Because ES2015+ syntax should be supported for creating Token classes\n    // We cannot assume that the Token classes were created using the \"extendToken\" utilities\n    // Therefore we must augment the Token classes both on Lexer initialization and on Parser initialization\n    augmentTokenTypes(values(this.tokensMap));\n  };\n  RecognizerEngine.prototype.defineRule = function (ruleName, impl, config) {\n    if (this.selfAnalysisDone) {\n      throw Error(\"Grammar rule <\" + ruleName + \"> may not be defined after the 'performSelfAnalysis' method has been called'\\n\" + \"Make sure that all grammar rule definitions are done before 'performSelfAnalysis' is called.\");\n    }\n    var resyncEnabled = has(config, \"resyncEnabled\") ? config.resyncEnabled : DEFAULT_RULE_CONFIG.resyncEnabled;\n    var recoveryValueFunc = has(config, \"recoveryValueFunc\") ? config.recoveryValueFunc : DEFAULT_RULE_CONFIG.recoveryValueFunc;\n    // performance optimization: Use small integers as keys for the longer human readable \"full\" rule names.\n    // this greatly improves Map access time (as much as 8% for some performance benchmarks).\n    /* tslint:disable */\n    var shortName = this.ruleShortNameIdx << BITS_FOR_METHOD_TYPE + BITS_FOR_OCCURRENCE_IDX;\n    /* tslint:enable */\n    this.ruleShortNameIdx++;\n    this.shortRuleNameToFull[shortName] = ruleName;\n    this.fullRuleNameToShort[ruleName] = shortName;\n    function invokeRuleWithTry(args) {\n      try {\n        if (this.outputCst === true) {\n          impl.apply(this, args);\n          var cst = this.CST_STACK[this.CST_STACK.length - 1];\n          this.cstPostRule(cst);\n          return cst;\n        } else {\n          return impl.apply(this, args);\n        }\n      } catch (e) {\n        return this.invokeRuleCatch(e, resyncEnabled, recoveryValueFunc);\n      } finally {\n        this.ruleFinallyStateUpdate();\n      }\n    }\n    var wrappedGrammarRule;\n    wrappedGrammarRule = function (idxInCallingRule, args) {\n      if (idxInCallingRule === void 0) {\n        idxInCallingRule = 0;\n      }\n      this.ruleInvocationStateUpdate(shortName, ruleName, idxInCallingRule);\n      return invokeRuleWithTry.call(this, args);\n    };\n    var ruleNamePropName = \"ruleName\";\n    wrappedGrammarRule[ruleNamePropName] = ruleName;\n    wrappedGrammarRule[\"originalGrammarAction\"] = impl;\n    return wrappedGrammarRule;\n  };\n  RecognizerEngine.prototype.invokeRuleCatch = function (e, resyncEnabledConfig, recoveryValueFunc) {\n    var isFirstInvokedRule = this.RULE_STACK.length === 1;\n    // note the reSync is always enabled for the first rule invocation, because we must always be able to\n    // reSync with EOF and just output some INVALID ParseTree\n    // during backtracking reSync recovery is disabled, otherwise we can't be certain the backtracking\n    // path is really the most valid one\n    var reSyncEnabled = resyncEnabledConfig && !this.isBackTracking() && this.recoveryEnabled;\n    if (isRecognitionException(e)) {\n      var recogError = e;\n      if (reSyncEnabled) {\n        var reSyncTokType = this.findReSyncTokenType();\n        if (this.isInCurrentRuleReSyncSet(reSyncTokType)) {\n          recogError.resyncedTokens = this.reSyncTo(reSyncTokType);\n          if (this.outputCst) {\n            var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n            partialCstResult.recoveredNode = true;\n            return partialCstResult;\n          } else {\n            return recoveryValueFunc();\n          }\n        } else {\n          if (this.outputCst) {\n            var partialCstResult = this.CST_STACK[this.CST_STACK.length - 1];\n            partialCstResult.recoveredNode = true;\n            recogError.partialCstResult = partialCstResult;\n          }\n          // to be handled Further up the call stack\n          throw recogError;\n        }\n      } else if (isFirstInvokedRule) {\n        // otherwise a Redundant input error will be created as well and we cannot guarantee that this is indeed the case\n        this.moveToTerminatedState();\n        // the parser should never throw one of its own errors outside its flow.\n        // even if error recovery is disabled\n        return recoveryValueFunc();\n      } else {\n        // to be recovered Further up the call stack\n        throw recogError;\n      }\n    } else {\n      // some other Error type which we don't know how to handle (for example a built in JavaScript Error)\n      throw e;\n    }\n  };\n  // Implementation of parsing DSL\n  RecognizerEngine.prototype.optionInternal = function (actionORMethodDef, occurrence) {\n    var key = this.getKeyForAutomaticLookahead(OPTION_IDX, occurrence);\n    return this.optionInternalLogic(actionORMethodDef, occurrence, key);\n  };\n  RecognizerEngine.prototype.optionInternalLogic = function (actionORMethodDef, occurrence, key) {\n    var _this = this;\n    var lookAheadFunc = this.getLaFuncFromCache(key);\n    var action;\n    var predicate;\n    if (actionORMethodDef.DEF !== undefined) {\n      action = actionORMethodDef.DEF;\n      predicate = actionORMethodDef.GATE;\n      // predicate present\n      if (predicate !== undefined) {\n        var orgLookaheadFunction_1 = lookAheadFunc;\n        lookAheadFunc = function () {\n          return predicate.call(_this) && orgLookaheadFunction_1.call(_this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n    if (lookAheadFunc.call(this) === true) {\n      return action.call(this);\n    }\n    return undefined;\n  };\n  RecognizerEngine.prototype.atLeastOneInternal = function (prodOccurrence, actionORMethodDef) {\n    var laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_IDX, prodOccurrence);\n    return this.atLeastOneInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n  };\n  RecognizerEngine.prototype.atLeastOneInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n    var _this = this;\n    var lookAheadFunc = this.getLaFuncFromCache(key);\n    var action;\n    var predicate;\n    if (actionORMethodDef.DEF !== undefined) {\n      action = actionORMethodDef.DEF;\n      predicate = actionORMethodDef.GATE;\n      // predicate present\n      if (predicate !== undefined) {\n        var orgLookaheadFunction_2 = lookAheadFunc;\n        lookAheadFunc = function () {\n          return predicate.call(_this) && orgLookaheadFunction_2.call(_this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n    if (lookAheadFunc.call(this) === true) {\n      var notStuck = this.doSingleRepetition(action);\n      while (lookAheadFunc.call(this) === true && notStuck === true) {\n        notStuck = this.doSingleRepetition(action);\n      }\n    } else {\n      throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY, actionORMethodDef.ERR_MSG);\n    }\n    // note that while it may seem that this can cause an error because by using a recursive call to\n    // AT_LEAST_ONE we change the grammar to AT_LEAST_TWO, AT_LEAST_THREE ... , the possible recursive call\n    // from the tryInRepetitionRecovery(...) will only happen IFF there really are TWO/THREE/.... items.\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    this.attemptInRepetitionRecovery(this.atLeastOneInternal, [prodOccurrence, actionORMethodDef], lookAheadFunc, AT_LEAST_ONE_IDX, prodOccurrence, NextTerminalAfterAtLeastOneWalker);\n  };\n  RecognizerEngine.prototype.atLeastOneSepFirstInternal = function (prodOccurrence, options) {\n    var laKey = this.getKeyForAutomaticLookahead(AT_LEAST_ONE_SEP_IDX, prodOccurrence);\n    this.atLeastOneSepFirstInternalLogic(prodOccurrence, options, laKey);\n  };\n  RecognizerEngine.prototype.atLeastOneSepFirstInternalLogic = function (prodOccurrence, options, key) {\n    var _this = this;\n    var action = options.DEF;\n    var separator = options.SEP;\n    var firstIterationLookaheadFunc = this.getLaFuncFromCache(key);\n    // 1st iteration\n    if (firstIterationLookaheadFunc.call(this) === true) {\n      ;\n      action.call(this);\n      //  TODO: Optimization can move this function construction into \"attemptInRepetitionRecovery\"\n      //  because it is only needed in error recovery scenarios.\n      var separatorLookAheadFunc = function () {\n        return _this.tokenMatcher(_this.LA(1), separator);\n      };\n      // 2nd..nth iterations\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator);\n        action.call(this);\n      }\n      // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n      this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [prodOccurrence, separator, separatorLookAheadFunc, action, NextTerminalAfterAtLeastOneSepWalker], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, NextTerminalAfterAtLeastOneSepWalker);\n    } else {\n      throw this.raiseEarlyExitException(prodOccurrence, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, options.ERR_MSG);\n    }\n  };\n  RecognizerEngine.prototype.manyInternal = function (prodOccurrence, actionORMethodDef) {\n    var laKey = this.getKeyForAutomaticLookahead(MANY_IDX, prodOccurrence);\n    return this.manyInternalLogic(prodOccurrence, actionORMethodDef, laKey);\n  };\n  RecognizerEngine.prototype.manyInternalLogic = function (prodOccurrence, actionORMethodDef, key) {\n    var _this = this;\n    var lookaheadFunction = this.getLaFuncFromCache(key);\n    var action;\n    var predicate;\n    if (actionORMethodDef.DEF !== undefined) {\n      action = actionORMethodDef.DEF;\n      predicate = actionORMethodDef.GATE;\n      // predicate present\n      if (predicate !== undefined) {\n        var orgLookaheadFunction_3 = lookaheadFunction;\n        lookaheadFunction = function () {\n          return predicate.call(_this) && orgLookaheadFunction_3.call(_this);\n        };\n      }\n    } else {\n      action = actionORMethodDef;\n    }\n    var notStuck = true;\n    while (lookaheadFunction.call(this) === true && notStuck === true) {\n      notStuck = this.doSingleRepetition(action);\n    }\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    this.attemptInRepetitionRecovery(this.manyInternal, [prodOccurrence, actionORMethodDef], lookaheadFunction, MANY_IDX, prodOccurrence, NextTerminalAfterManyWalker,\n    // The notStuck parameter is only relevant when \"attemptInRepetitionRecovery\"\n    // is invoked from manyInternal, in the MANY_SEP case and AT_LEAST_ONE[_SEP]\n    // An infinite loop cannot occur as:\n    // - Either the lookahead is guaranteed to consume something (Single Token Separator)\n    // - AT_LEAST_ONE by definition is guaranteed to consume something (or error out).\n    notStuck);\n  };\n  RecognizerEngine.prototype.manySepFirstInternal = function (prodOccurrence, options) {\n    var laKey = this.getKeyForAutomaticLookahead(MANY_SEP_IDX, prodOccurrence);\n    this.manySepFirstInternalLogic(prodOccurrence, options, laKey);\n  };\n  RecognizerEngine.prototype.manySepFirstInternalLogic = function (prodOccurrence, options, key) {\n    var _this = this;\n    var action = options.DEF;\n    var separator = options.SEP;\n    var firstIterationLaFunc = this.getLaFuncFromCache(key);\n    // 1st iteration\n    if (firstIterationLaFunc.call(this) === true) {\n      action.call(this);\n      var separatorLookAheadFunc = function () {\n        return _this.tokenMatcher(_this.LA(1), separator);\n      };\n      // 2nd..nth iterations\n      while (this.tokenMatcher(this.LA(1), separator) === true) {\n        // note that this CONSUME will never enter recovery because\n        // the separatorLookAheadFunc checks that the separator really does exist.\n        this.CONSUME(separator);\n        // No need for checking infinite loop here due to consuming the separator.\n        action.call(this);\n      }\n      // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n      this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [prodOccurrence, separator, separatorLookAheadFunc, action, NextTerminalAfterManySepWalker], separatorLookAheadFunc, MANY_SEP_IDX, prodOccurrence, NextTerminalAfterManySepWalker);\n    }\n  };\n  RecognizerEngine.prototype.repetitionSepSecondInternal = function (prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker) {\n    while (separatorLookAheadFunc()) {\n      // note that this CONSUME will never enter recovery because\n      // the separatorLookAheadFunc checks that the separator really does exist.\n      this.CONSUME(separator);\n      action.call(this);\n    }\n    // we can only arrive to this function after an error\n    // has occurred (hence the name 'second') so the following\n    // IF will always be entered, its possible to remove it...\n    // however it is kept to avoid confusion and be consistent.\n    // Performance optimization: \"attemptInRepetitionRecovery\" will be defined as NOOP unless recovery is enabled\n    /* istanbul ignore else */\n    this.attemptInRepetitionRecovery(this.repetitionSepSecondInternal, [prodOccurrence, separator, separatorLookAheadFunc, action, nextTerminalAfterWalker], separatorLookAheadFunc, AT_LEAST_ONE_SEP_IDX, prodOccurrence, nextTerminalAfterWalker);\n  };\n  RecognizerEngine.prototype.doSingleRepetition = function (action) {\n    var beforeIteration = this.getLexerPosition();\n    action.call(this);\n    var afterIteration = this.getLexerPosition();\n    // This boolean will indicate if this repetition progressed\n    // or if we are \"stuck\" (potential infinite loop in the repetition).\n    return afterIteration > beforeIteration;\n  };\n  RecognizerEngine.prototype.orInternal = function (altsOrOpts, occurrence) {\n    var laKey = this.getKeyForAutomaticLookahead(OR_IDX, occurrence);\n    var alts = isArray(altsOrOpts) ? altsOrOpts : altsOrOpts.DEF;\n    var laFunc = this.getLaFuncFromCache(laKey);\n    var altIdxToTake = laFunc.call(this, alts);\n    if (altIdxToTake !== undefined) {\n      var chosenAlternative = alts[altIdxToTake];\n      return chosenAlternative.ALT.call(this);\n    }\n    this.raiseNoAltException(occurrence, altsOrOpts.ERR_MSG);\n  };\n  RecognizerEngine.prototype.ruleFinallyStateUpdate = function () {\n    this.RULE_STACK.pop();\n    this.RULE_OCCURRENCE_STACK.pop();\n    // NOOP when cst is disabled\n    this.cstFinallyStateUpdate();\n    if (this.RULE_STACK.length === 0 && this.isAtEndOfInput() === false) {\n      var firstRedundantTok = this.LA(1);\n      var errMsg = this.errorMessageProvider.buildNotAllInputParsedMessage({\n        firstRedundant: firstRedundantTok,\n        ruleName: this.getCurrRuleFullName()\n      });\n      this.SAVE_ERROR(new NotAllInputParsedException(errMsg, firstRedundantTok));\n    }\n  };\n  RecognizerEngine.prototype.subruleInternal = function (ruleToCall, idx, options) {\n    var ruleResult;\n    try {\n      var args = options !== undefined ? options.ARGS : undefined;\n      ruleResult = ruleToCall.call(this, idx, args);\n      this.cstPostNonTerminal(ruleResult, options !== undefined && options.LABEL !== undefined ? options.LABEL : ruleToCall.ruleName);\n      return ruleResult;\n    } catch (e) {\n      this.subruleInternalError(e, options, ruleToCall.ruleName);\n    }\n  };\n  RecognizerEngine.prototype.subruleInternalError = function (e, options, ruleName) {\n    if (isRecognitionException(e) && e.partialCstResult !== undefined) {\n      this.cstPostNonTerminal(e.partialCstResult, options !== undefined && options.LABEL !== undefined ? options.LABEL : ruleName);\n      delete e.partialCstResult;\n    }\n    throw e;\n  };\n  RecognizerEngine.prototype.consumeInternal = function (tokType, idx, options) {\n    var consumedToken;\n    try {\n      var nextToken = this.LA(1);\n      if (this.tokenMatcher(nextToken, tokType) === true) {\n        this.consumeToken();\n        consumedToken = nextToken;\n      } else {\n        this.consumeInternalError(tokType, nextToken, options);\n      }\n    } catch (eFromConsumption) {\n      consumedToken = this.consumeInternalRecovery(tokType, idx, eFromConsumption);\n    }\n    this.cstPostTerminal(options !== undefined && options.LABEL !== undefined ? options.LABEL : tokType.name, consumedToken);\n    return consumedToken;\n  };\n  RecognizerEngine.prototype.consumeInternalError = function (tokType, nextToken, options) {\n    var msg;\n    var previousToken = this.LA(0);\n    if (options !== undefined && options.ERR_MSG) {\n      msg = options.ERR_MSG;\n    } else {\n      msg = this.errorMessageProvider.buildMismatchTokenMessage({\n        expected: tokType,\n        actual: nextToken,\n        previous: previousToken,\n        ruleName: this.getCurrRuleFullName()\n      });\n    }\n    throw this.SAVE_ERROR(new MismatchedTokenException(msg, nextToken, previousToken));\n  };\n  RecognizerEngine.prototype.consumeInternalRecovery = function (tokType, idx, eFromConsumption) {\n    // no recovery allowed during backtracking, otherwise backtracking may recover invalid syntax and accept it\n    // but the original syntax could have been parsed successfully without any backtracking + recovery\n    if (this.recoveryEnabled &&\n    // TODO: more robust checking of the exception type. Perhaps Typescript extending expressions?\n    eFromConsumption.name === \"MismatchedTokenException\" && !this.isBackTracking()) {\n      var follows = this.getFollowsForInRuleRecovery(tokType, idx);\n      try {\n        return this.tryInRuleRecovery(tokType, follows);\n      } catch (eFromInRuleRecovery) {\n        if (eFromInRuleRecovery.name === IN_RULE_RECOVERY_EXCEPTION) {\n          // failed in RuleRecovery.\n          // throw the original error in order to trigger reSync error recovery\n          throw eFromConsumption;\n        } else {\n          throw eFromInRuleRecovery;\n        }\n      }\n    } else {\n      throw eFromConsumption;\n    }\n  };\n  RecognizerEngine.prototype.saveRecogState = function () {\n    // errors is a getter which will clone the errors array\n    var savedErrors = this.errors;\n    var savedRuleStack = cloneArr(this.RULE_STACK);\n    return {\n      errors: savedErrors,\n      lexerState: this.exportLexerState(),\n      RULE_STACK: savedRuleStack,\n      CST_STACK: this.CST_STACK\n    };\n  };\n  RecognizerEngine.prototype.reloadRecogState = function (newState) {\n    this.errors = newState.errors;\n    this.importLexerState(newState.lexerState);\n    this.RULE_STACK = newState.RULE_STACK;\n  };\n  RecognizerEngine.prototype.ruleInvocationStateUpdate = function (shortName, fullName, idxInCallingRule) {\n    this.RULE_OCCURRENCE_STACK.push(idxInCallingRule);\n    this.RULE_STACK.push(shortName);\n    // NOOP when cst is disabled\n    this.cstInvocationStateUpdate(fullName, shortName);\n  };\n  RecognizerEngine.prototype.isBackTracking = function () {\n    return this.isBackTrackingStack.length !== 0;\n  };\n  RecognizerEngine.prototype.getCurrRuleFullName = function () {\n    var shortName = this.getLastExplicitRuleShortName();\n    return this.shortRuleNameToFull[shortName];\n  };\n  RecognizerEngine.prototype.shortRuleNameToFullName = function (shortName) {\n    return this.shortRuleNameToFull[shortName];\n  };\n  RecognizerEngine.prototype.isAtEndOfInput = function () {\n    return this.tokenMatcher(this.LA(1), EOF);\n  };\n  RecognizerEngine.prototype.reset = function () {\n    this.resetLexerState();\n    this.isBackTrackingStack = [];\n    this.errors = [];\n    this.RULE_STACK = [];\n    // TODO: extract a specific reset for TreeBuilder trait\n    this.CST_STACK = [];\n    this.RULE_OCCURRENCE_STACK = [];\n  };\n  return RecognizerEngine;\n}();\nexport { RecognizerEngine };","map":{"version":3,"names":["cloneArr","cloneObj","every","flatten","has","isArray","isEmpty","isObject","reduce","uniq","values","AT_LEAST_ONE_IDX","AT_LEAST_ONE_SEP_IDX","BITS_FOR_METHOD_TYPE","BITS_FOR_OCCURRENCE_IDX","MANY_IDX","MANY_SEP_IDX","OPTION_IDX","OR_IDX","isRecognitionException","MismatchedTokenException","NotAllInputParsedException","PROD_TYPE","NextTerminalAfterAtLeastOneSepWalker","NextTerminalAfterAtLeastOneWalker","NextTerminalAfterManySepWalker","NextTerminalAfterManyWalker","DEFAULT_RULE_CONFIG","IN_RULE_RECOVERY_EXCEPTION","EOF","augmentTokenTypes","isTokenType","tokenStructuredMatcher","tokenStructuredMatcherNoCategories","classNameFromInstance","RecognizerEngine","prototype","initRecognizerEngine","tokenVocabulary","config","className","shortRuleNameToFull","fullRuleNameToShort","ruleShortNameIdx","tokenMatcher","definedRulesNames","tokensMap","isBackTrackingStack","RULE_STACK","RULE_OCCURRENCE_STACK","gastProductionsCache","Error","startOffset","acc","tokType","name","modes","allTokenTypes","uniqueTokens","noTokenCategoriesUsed","tokenConstructor","categoryMatches","defineRule","ruleName","impl","selfAnalysisDone","resyncEnabled","recoveryValueFunc","shortName","invokeRuleWithTry","args","outputCst","apply","cst","CST_STACK","length","cstPostRule","e","invokeRuleCatch","ruleFinallyStateUpdate","wrappedGrammarRule","idxInCallingRule","ruleInvocationStateUpdate","call","ruleNamePropName","resyncEnabledConfig","isFirstInvokedRule","reSyncEnabled","isBackTracking","recoveryEnabled","recogError","reSyncTokType","findReSyncTokenType","isInCurrentRuleReSyncSet","resyncedTokens","reSyncTo","partialCstResult","recoveredNode","moveToTerminatedState","optionInternal","actionORMethodDef","occurrence","key","getKeyForAutomaticLookahead","optionInternalLogic","_this","lookAheadFunc","getLaFuncFromCache","action","predicate","DEF","undefined","GATE","orgLookaheadFunction_1","atLeastOneInternal","prodOccurrence","laKey","atLeastOneInternalLogic","orgLookaheadFunction_2","notStuck","doSingleRepetition","raiseEarlyExitException","REPETITION_MANDATORY","ERR_MSG","attemptInRepetitionRecovery","atLeastOneSepFirstInternal","options","atLeastOneSepFirstInternalLogic","separator","SEP","firstIterationLookaheadFunc","separatorLookAheadFunc","LA","CONSUME","repetitionSepSecondInternal","REPETITION_MANDATORY_WITH_SEPARATOR","manyInternal","manyInternalLogic","lookaheadFunction","orgLookaheadFunction_3","manySepFirstInternal","manySepFirstInternalLogic","firstIterationLaFunc","nextTerminalAfterWalker","beforeIteration","getLexerPosition","afterIteration","orInternal","altsOrOpts","alts","laFunc","altIdxToTake","chosenAlternative","ALT","raiseNoAltException","pop","cstFinallyStateUpdate","isAtEndOfInput","firstRedundantTok","errMsg","errorMessageProvider","buildNotAllInputParsedMessage","firstRedundant","getCurrRuleFullName","SAVE_ERROR","subruleInternal","ruleToCall","idx","ruleResult","ARGS","cstPostNonTerminal","LABEL","subruleInternalError","consumeInternal","consumedToken","nextToken","consumeToken","consumeInternalError","eFromConsumption","consumeInternalRecovery","cstPostTerminal","msg","previousToken","buildMismatchTokenMessage","expected","actual","previous","follows","getFollowsForInRuleRecovery","tryInRuleRecovery","eFromInRuleRecovery","saveRecogState","savedErrors","errors","savedRuleStack","lexerState","exportLexerState","reloadRecogState","newState","importLexerState","fullName","push","cstInvocationStateUpdate","getLastExplicitRuleShortName","shortRuleNameToFullName","reset","resetLexerState"],"sources":["../../../../../src/parse/parser/traits/recognizer_engine.ts"],"sourcesContent":[null],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}