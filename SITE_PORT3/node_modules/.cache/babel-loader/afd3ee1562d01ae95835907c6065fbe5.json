{"ast":null,"code":"import { Loader, FileLoader, MeshStandardMaterial, Color, TextureLoader, Object3D, Matrix4, BufferGeometryLoader, DirectionalLight, PointLight, RectAreaLight, Vector3, SpotLight, CanvasTexture, LinearFilter, ClampToEdgeWrapping, SpriteMaterial, Sprite, LineBasicMaterial, Line, Mesh, PointsMaterial, Points } from 'three';\nvar Rhino3dmLoader = function (manager) {\n  Loader.call(this, manager);\n  this.libraryPath = '';\n  this.libraryPending = null;\n  this.libraryBinary = null;\n  this.libraryConfig = {};\n  this.url = '';\n  this.workerLimit = 4;\n  this.workerPool = [];\n  this.workerNextTaskID = 1;\n  this.workerSourceURL = '';\n  this.workerConfig = {};\n  this.materials = [];\n};\nRhino3dmLoader.taskCache = new WeakMap();\nRhino3dmLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: Rhino3dmLoader,\n  setLibraryPath: function (path) {\n    this.libraryPath = path;\n    return this;\n  },\n  setWorkerLimit: function (workerLimit) {\n    this.workerLimit = workerLimit;\n    return this;\n  },\n  load: function (url, onLoad, onProgress, onError) {\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    this.url = url;\n    loader.load(url, buffer => {\n      // Check for an existing task using this buffer. A transferred buffer cannot be transferred\n      // again from this thread.\n      if (Rhino3dmLoader.taskCache.has(buffer)) {\n        var cachedTask = Rhino3dmLoader.taskCache.get(buffer);\n        return cachedTask.promise.then(onLoad).catch(onError);\n      }\n      this.decodeObjects(buffer, url).then(onLoad).catch(onError);\n    }, onProgress, onError);\n  },\n  debug: function () {\n    console.log('Task load: ', this.workerPool.map(worker => worker._taskLoad));\n  },\n  decodeObjects: function (buffer, url) {\n    var worker;\n    var taskID;\n    var taskCost = buffer.byteLength;\n    var objectPending = this._getWorker(taskCost).then(_worker => {\n      worker = _worker;\n      taskID = this.workerNextTaskID++; //hmmm\n\n      return new Promise((resolve, reject) => {\n        worker._callbacks[taskID] = {\n          resolve,\n          reject\n        };\n        worker.postMessage({\n          type: 'decode',\n          id: taskID,\n          buffer\n        }, [buffer]); //this.debug();\n      });\n    }).then(message => this._createGeometry(message.data)); // Remove task from the task list.\n    // Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\n    objectPending.catch(() => true).then(() => {\n      if (worker && taskID) {\n        this._releaseTask(worker, taskID); //this.debug();\n      }\n    }); // Cache the task result.\n\n    Rhino3dmLoader.taskCache.set(buffer, {\n      url: url,\n      promise: objectPending\n    });\n    return objectPending;\n  },\n  parse: function (data, onLoad, onError) {\n    this.decodeObjects(data, '').then(onLoad).catch(onError);\n  },\n  _compareMaterials: function (material) {\n    var mat = {};\n    mat.name = material.name;\n    mat.color = {};\n    mat.color.r = material.color.r;\n    mat.color.g = material.color.g;\n    mat.color.b = material.color.b;\n    mat.type = material.type;\n    for (let i = 0; i < this.materials.length; i++) {\n      var m = this.materials[i];\n      var _mat = {};\n      _mat.name = m.name;\n      _mat.color = {};\n      _mat.color.r = m.color.r;\n      _mat.color.g = m.color.g;\n      _mat.color.b = m.color.b;\n      _mat.type = m.type;\n      if (JSON.stringify(mat) === JSON.stringify(_mat)) {\n        return m;\n      }\n    }\n    this.materials.push(material);\n    return material;\n  },\n  _createMaterial: function (material) {\n    if (material === undefined) {\n      return new MeshStandardMaterial({\n        color: new Color(1, 1, 1),\n        metalness: 0.8,\n        name: 'default',\n        side: 2\n      });\n    }\n    var _diffuseColor = material.diffuseColor;\n    var diffusecolor = new Color(_diffuseColor.r / 255.0, _diffuseColor.g / 255.0, _diffuseColor.b / 255.0);\n    if (_diffuseColor.r === 0 && _diffuseColor.g === 0 && _diffuseColor.b === 0) {\n      diffusecolor.r = 1;\n      diffusecolor.g = 1;\n      diffusecolor.b = 1;\n    } // console.log( material );\n\n    var mat = new MeshStandardMaterial({\n      color: diffusecolor,\n      name: material.name,\n      side: 2,\n      transparent: material.transparency > 0 ? true : false,\n      opacity: 1.0 - material.transparency\n    });\n    var textureLoader = new TextureLoader();\n    for (let i = 0; i < material.textures.length; i++) {\n      var texture = material.textures[i];\n      if (texture.image !== null) {\n        var map = textureLoader.load(texture.image);\n        switch (texture.type) {\n          case 'Diffuse':\n            mat.map = map;\n            break;\n          case 'Bump':\n            mat.bumpMap = map;\n            break;\n          case 'Transparency':\n            mat.alphaMap = map;\n            mat.transparent = true;\n            break;\n          case 'Emap':\n            mat.envMap = map;\n            break;\n        }\n      }\n    }\n    return mat;\n  },\n  _createGeometry: function (data) {\n    // console.log(data);\n    var object = new Object3D();\n    var instanceDefinitionObjects = [];\n    var instanceDefinitions = [];\n    var instanceReferences = [];\n    object.userData['layers'] = data.layers;\n    object.userData['groups'] = data.groups;\n    object.userData['settings'] = data.settings;\n    object.userData['objectType'] = 'File3dm';\n    object.userData['materials'] = null;\n    object.name = this.url;\n    var objects = data.objects;\n    var materials = data.materials;\n    for (let i = 0; i < objects.length; i++) {\n      var obj = objects[i];\n      var attributes = obj.attributes;\n      switch (obj.objectType) {\n        case 'InstanceDefinition':\n          instanceDefinitions.push(obj);\n          break;\n        case 'InstanceReference':\n          instanceReferences.push(obj);\n          break;\n        default:\n          if (attributes.materialIndex >= 0) {\n            var rMaterial = materials[attributes.materialIndex];\n            var material = this._createMaterial(rMaterial);\n            material = this._compareMaterials(material);\n            var _object = this._createObject(obj, material);\n          } else {\n            var material = this._createMaterial();\n            var _object = this._createObject(obj, material);\n          }\n          if (_object === undefined) {\n            continue;\n          }\n          var layer = data.layers[attributes.layerIndex];\n          _object.visible = layer ? data.layers[attributes.layerIndex].visible : true;\n          if (attributes.isInstanceDefinitionObject) {\n            instanceDefinitionObjects.push(_object);\n          } else {\n            object.add(_object);\n          }\n          break;\n      }\n    }\n    for (let i = 0; i < instanceDefinitions.length; i++) {\n      var iDef = instanceDefinitions[i];\n      var objects = [];\n      for (let j = 0; j < iDef.attributes.objectIds.length; j++) {\n        var objId = iDef.attributes.objectIds[j];\n        for (let p = 0; p < instanceDefinitionObjects.length; p++) {\n          var idoId = instanceDefinitionObjects[p].userData.attributes.id;\n          if (objId === idoId) {\n            objects.push(instanceDefinitionObjects[p]);\n          }\n        }\n      } // Currently clones geometry and does not take advantage of instancing\n\n      for (let j = 0; j < instanceReferences.length; j++) {\n        var iRef = instanceReferences[j];\n        if (iRef.geometry.parentIdefId === iDef.attributes.id) {\n          var iRefObject = new Object3D();\n          var xf = iRef.geometry.xform.array;\n          var matrix = new Matrix4();\n          matrix.set(xf[0], xf[1], xf[2], xf[3], xf[4], xf[5], xf[6], xf[7], xf[8], xf[9], xf[10], xf[11], xf[12], xf[13], xf[14], xf[15]);\n          iRefObject.applyMatrix4(matrix);\n          for (let p = 0; p < objects.length; p++) {\n            iRefObject.add(objects[p].clone(true));\n          }\n          object.add(iRefObject);\n        }\n      }\n    }\n    object.userData['materials'] = this.materials;\n    return object;\n  },\n  _createObject: function (obj, mat) {\n    var loader = new BufferGeometryLoader();\n    var attributes = obj.attributes;\n    switch (obj.objectType) {\n      case 'Point':\n      case 'PointSet':\n        var geometry = loader.parse(obj.geometry);\n        var material = null;\n        if (geometry.attributes.hasOwnProperty('color')) {\n          material = new PointsMaterial({\n            vertexColors: true,\n            sizeAttenuation: false,\n            size: 2\n          });\n        } else {\n          var _color = attributes.drawColor;\n          var color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n          material = new PointsMaterial({\n            color: color,\n            sizeAttenuation: false,\n            size: 2\n          });\n        }\n        material = this._compareMaterials(material);\n        var points = new Points(geometry, material);\n        points.userData['attributes'] = attributes;\n        points.userData['objectType'] = obj.objectType;\n        if (attributes.name) {\n          points.name = attributes.name;\n        }\n        return points;\n      case 'Mesh':\n      case 'Extrusion':\n      case 'SubD':\n      case 'Brep':\n        if (obj.geometry === null) return;\n        var geometry = loader.parse(obj.geometry);\n        if (geometry.attributes.hasOwnProperty('color')) {\n          mat.vertexColors = true;\n        }\n        if (mat === null) {\n          mat = this._createMaterial();\n          mat = this._compareMaterials(mat);\n        }\n        var mesh = new Mesh(geometry, mat);\n        mesh.castShadow = attributes.castsShadows;\n        mesh.receiveShadow = attributes.receivesShadows;\n        mesh.userData['attributes'] = attributes;\n        mesh.userData['objectType'] = obj.objectType;\n        if (attributes.name) {\n          mesh.name = attributes.name;\n        }\n        return mesh;\n      case 'Curve':\n        geometry = loader.parse(obj.geometry);\n        var _color = attributes.drawColor;\n        var color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n        var material = new LineBasicMaterial({\n          color: color\n        });\n        material = this._compareMaterials(material);\n        var lines = new Line(geometry, material);\n        lines.userData['attributes'] = attributes;\n        lines.userData['objectType'] = obj.objectType;\n        if (attributes.name) {\n          lines.name = attributes.name;\n        }\n        return lines;\n      case 'TextDot':\n        geometry = obj.geometry;\n        var ctx = document.createElement('canvas').getContext('2d');\n        var font = `${geometry.fontHeight}px ${geometry.fontFace}`;\n        ctx.font = font;\n        var width = ctx.measureText(geometry.text).width + 10;\n        var height = geometry.fontHeight + 10;\n        var r = window.devicePixelRatio;\n        ctx.canvas.width = width * r;\n        ctx.canvas.height = height * r;\n        ctx.canvas.style.width = width + 'px';\n        ctx.canvas.style.height = height + 'px';\n        ctx.setTransform(r, 0, 0, r, 0, 0);\n        ctx.font = font;\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n        var color = attributes.drawColor;\n        ctx.fillStyle = `rgba(${color.r},${color.g},${color.b},${color.a})`;\n        ctx.fillRect(0, 0, width, height);\n        ctx.fillStyle = 'white';\n        ctx.fillText(geometry.text, width / 2, height / 2);\n        var texture = new CanvasTexture(ctx.canvas);\n        texture.minFilter = LinearFilter;\n        texture.wrapS = ClampToEdgeWrapping;\n        texture.wrapT = ClampToEdgeWrapping;\n        var material = new SpriteMaterial({\n          map: texture,\n          depthTest: false\n        });\n        var sprite = new Sprite(material);\n        sprite.position.set(geometry.point[0], geometry.point[1], geometry.point[2]);\n        sprite.scale.set(width / 10, height / 10, 1.0);\n        sprite.userData['attributes'] = attributes;\n        sprite.userData['objectType'] = obj.objectType;\n        if (attributes.name) {\n          sprite.name = attributes.name;\n        }\n        return sprite;\n      case 'Light':\n        geometry = obj.geometry;\n        var light;\n        if (geometry.isDirectionalLight) {\n          light = new DirectionalLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isPointLight) {\n          light = new PointLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isRectangularLight) {\n          light = new RectAreaLight();\n          var width = Math.abs(geometry.width[2]);\n          var height = Math.abs(geometry.length[0]);\n          light.position.set(geometry.location[0] - height / 2, geometry.location[1], geometry.location[2] - width / 2);\n          light.height = height;\n          light.width = width;\n          light.lookAt(new Vector3(geometry.direction[0], geometry.direction[1], geometry.direction[2]));\n        } else if (geometry.isSpotLight) {\n          light = new SpotLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n          light.angle = geometry.spotAngleRadians;\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isLinearLight) {\n          console.warn('THREE.3DMLoader:  No conversion exists for linear lights.');\n          return;\n        }\n        if (light) {\n          light.intensity = geometry.intensity;\n          var _color = geometry.diffuse;\n          var color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n          light.color = color;\n          light.userData['attributes'] = attributes;\n          light.userData['objectType'] = obj.objectType;\n        }\n        return light;\n    }\n  },\n  _initLibrary: function () {\n    if (!this.libraryPending) {\n      // Load rhino3dm wrapper.\n      var jsLoader = new FileLoader(this.manager);\n      jsLoader.setPath(this.libraryPath);\n      var jsContent = new Promise((resolve, reject) => {\n        jsLoader.load('rhino3dm.js', resolve, undefined, reject);\n      }); // Load rhino3dm WASM binary.\n\n      var binaryLoader = new FileLoader(this.manager);\n      binaryLoader.setPath(this.libraryPath);\n      binaryLoader.setResponseType('arraybuffer');\n      var binaryContent = new Promise((resolve, reject) => {\n        binaryLoader.load('rhino3dm.wasm', resolve, undefined, reject);\n      });\n      this.libraryPending = Promise.all([jsContent, binaryContent]).then(([jsContent, binaryContent]) => {\n        //this.libraryBinary = binaryContent;\n        this.libraryConfig.wasmBinary = binaryContent;\n        var fn = Rhino3dmLoader.Rhino3dmWorker.toString();\n        var body = ['/* rhino3dm.js */', jsContent, '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\n');\n        this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n      });\n    }\n    return this.libraryPending;\n  },\n  _getWorker: function (taskCost) {\n    return this._initLibrary().then(() => {\n      if (this.workerPool.length < this.workerLimit) {\n        var worker = new Worker(this.workerSourceURL);\n        worker._callbacks = {};\n        worker._taskCosts = {};\n        worker._taskLoad = 0;\n        worker.postMessage({\n          type: 'init',\n          libraryConfig: this.libraryConfig\n        });\n        worker.onmessage = function (e) {\n          var message = e.data;\n          switch (message.type) {\n            case 'decode':\n              worker._callbacks[message.id].resolve(message);\n              break;\n            case 'error':\n              worker._callbacks[message.id].reject(message);\n              break;\n            default:\n              console.error('THREE.Rhino3dmLoader: Unexpected message, \"' + message.type + '\"');\n          }\n        };\n        this.workerPool.push(worker);\n      } else {\n        this.workerPool.sort(function (a, b) {\n          return a._taskLoad > b._taskLoad ? -1 : 1;\n        });\n      }\n      var worker = this.workerPool[this.workerPool.length - 1];\n      worker._taskLoad += taskCost;\n      return worker;\n    });\n  },\n  _releaseTask: function (worker, taskID) {\n    worker._taskLoad -= worker._taskCosts[taskID];\n    delete worker._callbacks[taskID];\n    delete worker._taskCosts[taskID];\n  },\n  dispose: function () {\n    for (let i = 0; i < this.workerPool.length; ++i) {\n      this.workerPool[i].terminate();\n    }\n    this.workerPool.length = 0;\n    return this;\n  }\n});\n/* WEB WORKER */\n\nRhino3dmLoader.Rhino3dmWorker = function () {\n  var libraryPending;\n  var libraryConfig;\n  var rhino;\n  onmessage = function (e) {\n    var message = e.data;\n    switch (message.type) {\n      case 'init':\n        libraryConfig = message.libraryConfig;\n        var wasmBinary = libraryConfig.wasmBinary;\n        var RhinoModule;\n        libraryPending = new Promise(function (resolve) {\n          /* Like Basis Loader */\n          RhinoModule = {\n            wasmBinary,\n            onRuntimeInitialized: resolve\n          };\n          rhino3dm(RhinoModule); // eslint-disable-line no-undef\n        }).then(() => {\n          rhino = RhinoModule;\n        });\n        break;\n      case 'decode':\n        var buffer = message.buffer;\n        libraryPending.then(() => {\n          var data = decodeObjects(rhino, buffer);\n          self.postMessage({\n            type: 'decode',\n            id: message.id,\n            data\n          });\n        });\n        break;\n    }\n  };\n  function decodeObjects(rhino, buffer) {\n    var arr = new Uint8Array(buffer);\n    var doc = rhino.File3dm.fromByteArray(arr);\n    var objects = [];\n    var materials = [];\n    var layers = [];\n    var views = [];\n    var namedViews = [];\n    var groups = []; //Handle objects\n\n    var objs = doc.objects();\n    var cnt = objs.count;\n    for (let i = 0; i < cnt; i++) {\n      var _object = objs.get(i);\n      var object = extractObjectData(_object, doc);\n      _object.delete();\n      if (object) {\n        objects.push(object);\n      }\n    } // Handle instance definitions\n    // console.log( `Instance Definitions Count: ${doc.instanceDefinitions().count()}` );\n\n    for (let i = 0; i < doc.instanceDefinitions().count(); i++) {\n      var idef = doc.instanceDefinitions().get(i);\n      var idefAttributes = extractProperties(idef);\n      idefAttributes.objectIds = idef.getObjectIds();\n      objects.push({\n        geometry: null,\n        attributes: idefAttributes,\n        objectType: 'InstanceDefinition'\n      });\n    } // Handle materials\n\n    var textureTypes = [\n    // rhino.TextureType.Bitmap,\n    rhino.TextureType.Diffuse, rhino.TextureType.Bump, rhino.TextureType.Transparency, rhino.TextureType.Opacity, rhino.TextureType.Emap];\n    var pbrTextureTypes = [rhino.TextureType.PBR_BaseColor, rhino.TextureType.PBR_Subsurface, rhino.TextureType.PBR_SubsurfaceScattering, rhino.TextureType.PBR_SubsurfaceScatteringRadius, rhino.TextureType.PBR_Metallic, rhino.TextureType.PBR_Specular, rhino.TextureType.PBR_SpecularTint, rhino.TextureType.PBR_Roughness, rhino.TextureType.PBR_Anisotropic, rhino.TextureType.PBR_Anisotropic_Rotation, rhino.TextureType.PBR_Sheen, rhino.TextureType.PBR_SheenTint, rhino.TextureType.PBR_Clearcoat, rhino.TextureType.PBR_ClearcoatBump, rhino.TextureType.PBR_ClearcoatRoughness, rhino.TextureType.PBR_OpacityIor, rhino.TextureType.PBR_OpacityRoughness, rhino.TextureType.PBR_Emission, rhino.TextureType.PBR_AmbientOcclusion, rhino.TextureType.PBR_Displacement];\n    for (let i = 0; i < doc.materials().count(); i++) {\n      var _material = doc.materials().get(i);\n      var _pbrMaterial = _material.physicallyBased();\n      var material = extractProperties(_material);\n      var textures = [];\n      for (let j = 0; j < textureTypes.length; j++) {\n        var _texture = _material.getTexture(textureTypes[j]);\n        if (_texture) {\n          var textureType = textureTypes[j].constructor.name;\n          textureType = textureType.substring(12, textureType.length);\n          var texture = {\n            type: textureType\n          };\n          var image = doc.getEmbeddedFileAsBase64(_texture.fileName);\n          if (image) {\n            texture.image = 'data:image/png;base64,' + image;\n          } else {\n            console.warn(`THREE.3DMLoader: Image for ${textureType} texture not embedded in file.`);\n            texture.image = null;\n          }\n          textures.push(texture);\n          _texture.delete();\n        }\n      }\n      material.textures = textures;\n      if (_pbrMaterial.supported) {\n        console.log('pbr true');\n        for (let j = 0; j < pbrTextureTypes.length; j++) {\n          var _texture = _material.getTexture(textureTypes[j]);\n          if (_texture) {\n            var image = doc.getEmbeddedFileAsBase64(_texture.fileName);\n            var textureType = textureTypes[j].constructor.name;\n            textureType = textureType.substring(12, textureType.length);\n            var texture = {\n              type: textureType,\n              image: 'data:image/png;base64,' + image\n            };\n            textures.push(texture);\n            _texture.delete();\n          }\n        }\n        var pbMaterialProperties = extractProperties(_material.physicallyBased());\n        material = Object.assign(pbMaterialProperties, material);\n      }\n      materials.push(material);\n      _material.delete();\n      _pbrMaterial.delete();\n    } // Handle layers\n\n    for (let i = 0; i < doc.layers().count(); i++) {\n      var _layer = doc.layers().get(i);\n      var layer = extractProperties(_layer);\n      layers.push(layer);\n      _layer.delete();\n    } // Handle views\n\n    for (let i = 0; i < doc.views().count(); i++) {\n      var _view = doc.views().get(i);\n      var view = extractProperties(_view);\n      views.push(view);\n      _view.delete();\n    } // Handle named views\n\n    for (let i = 0; i < doc.namedViews().count(); i++) {\n      var _namedView = doc.namedViews().get(i);\n      var namedView = extractProperties(_namedView);\n      namedViews.push(namedView);\n      _namedView.delete();\n    } // Handle groups\n\n    for (let i = 0; i < doc.groups().count(); i++) {\n      var _group = doc.groups().get(i);\n      var group = extractProperties(_group);\n      groups.push(group);\n      _group.delete();\n    } // Handle settings\n\n    var settings = extractProperties(doc.settings()); //TODO: Handle other document stuff like dimstyles, instance definitions, bitmaps etc.\n    // Handle dimstyles\n    // console.log( `Dimstyle Count: ${doc.dimstyles().count()}` );\n    // Handle bitmaps\n    // console.log( `Bitmap Count: ${doc.bitmaps().count()}` );\n    // Handle strings -- this seems to be broken at the moment in rhino3dm\n    // console.log( `Document Strings Count: ${doc.strings().count()}` );\n\n    /*\n    for( var i = 0; i < doc.strings().count(); i++ ){\n    var _string= doc.strings().get( i );\n    console.log(_string);\n    var string = extractProperties( _group );\n    strings.push( string );\n    _string.delete();\n    }\n    */\n\n    doc.delete();\n    return {\n      objects,\n      materials,\n      layers,\n      views,\n      namedViews,\n      groups,\n      settings\n    };\n  }\n  function extractObjectData(object, doc) {\n    var _geometry = object.geometry();\n    var _attributes = object.attributes();\n    var objectType = _geometry.objectType;\n    var geometry = null;\n    var attributes = null; // skip instance definition objects\n    //if( _attributes.isInstanceDefinitionObject ) { continue; }\n    // TODO: handle other geometry types\n\n    switch (objectType) {\n      case rhino.ObjectType.Curve:\n        var pts = curveToPoints(_geometry, 100);\n        var position = {};\n        var attributes = {};\n        var data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [];\n        for (let j = 0; j < pts.length; j++) {\n          position.array.push(pts[j][0]);\n          position.array.push(pts[j][1]);\n          position.array.push(pts[j][2]);\n        }\n        attributes.position = position;\n        data.attributes = attributes;\n        geometry = {\n          data\n        };\n        break;\n      case rhino.ObjectType.Point:\n        var pt = _geometry.location;\n        var position = {};\n        var color = {};\n        var attributes = {};\n        var data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [pt[0], pt[1], pt[2]];\n        var _color = _attributes.drawColor(doc);\n        color.itemSize = 3;\n        color.type = 'Float32Array';\n        color.array = [_color.r / 255.0, _color.g / 255.0, _color.b / 255.0];\n        attributes.position = position;\n        attributes.color = color;\n        data.attributes = attributes;\n        geometry = {\n          data\n        };\n        break;\n      case rhino.ObjectType.PointSet:\n      case rhino.ObjectType.Mesh:\n        geometry = _geometry.toThreejsJSON();\n        break;\n      case rhino.ObjectType.Brep:\n        var faces = _geometry.faces();\n        var mesh = new rhino.Mesh();\n        for (let faceIndex = 0; faceIndex < faces.count; faceIndex++) {\n          var face = faces.get(faceIndex);\n          var _mesh = face.getMesh(rhino.MeshType.Any);\n          if (_mesh) {\n            mesh.append(_mesh);\n            _mesh.delete();\n          }\n          face.delete();\n        }\n        if (mesh.faces().count > 0) {\n          mesh.compact();\n          geometry = mesh.toThreejsJSON();\n          faces.delete();\n        }\n        mesh.delete();\n        break;\n      case rhino.ObjectType.Extrusion:\n        var mesh = _geometry.getMesh(rhino.MeshType.Any);\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh.delete();\n        }\n        break;\n      case rhino.ObjectType.TextDot:\n        geometry = extractProperties(_geometry);\n        break;\n      case rhino.ObjectType.Light:\n        geometry = extractProperties(_geometry);\n        break;\n      case rhino.ObjectType.InstanceReference:\n        geometry = extractProperties(_geometry);\n        geometry.xform = extractProperties(_geometry.xform);\n        geometry.xform.array = _geometry.xform.toFloatArray(true);\n        break;\n      case rhino.ObjectType.SubD:\n        // TODO: precalculate resulting vertices and faces and warn on excessive results\n        _geometry.subdivide(3);\n        var mesh = rhino.Mesh.createFromSubDControlNet(_geometry);\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh.delete();\n        }\n        break;\n\n      /*\n      case rhino.ObjectType.Annotation:\n      case rhino.ObjectType.Hatch:\n      case rhino.ObjectType.ClipPlane:\n      */\n\n      default:\n        console.warn(`THREE.3DMLoader: TODO: Implement ${objectType.constructor.name}`);\n        break;\n    }\n    if (geometry) {\n      var attributes = extractProperties(_attributes);\n      attributes.geometry = extractProperties(_geometry);\n      if (_attributes.groupCount > 0) {\n        attributes.groupIds = _attributes.getGroupList();\n      }\n      if (_attributes.userStringCount > 0) {\n        attributes.userStrings = _attributes.getUserStrings();\n      }\n      if (_geometry.userStringCount > 0) {\n        attributes.geometry.userStrings = _geometry.getUserStrings();\n      }\n      attributes.drawColor = _attributes.drawColor(doc);\n      objectType = objectType.constructor.name;\n      objectType = objectType.substring(11, objectType.length);\n      return {\n        geometry,\n        attributes,\n        objectType\n      };\n    } else {\n      console.warn(`THREE.3DMLoader: ${objectType.constructor.name} has no associated mesh geometry.`);\n    }\n  }\n  function extractProperties(object) {\n    var result = {};\n    for (let property in object) {\n      var value = object[property];\n      if (typeof value !== 'function') {\n        if (typeof value === 'object' && value !== null && value.hasOwnProperty('constructor')) {\n          result[property] = {\n            name: value.constructor.name,\n            value: value.value\n          };\n        } else {\n          result[property] = value;\n        }\n      }\n    }\n    return result;\n  }\n  function curveToPoints(curve, pointLimit) {\n    var pointCount = pointLimit;\n    var rc = [];\n    var ts = [];\n    if (curve instanceof rhino.LineCurve) {\n      return [curve.pointAtStart, curve.pointAtEnd];\n    }\n    if (curve instanceof rhino.PolylineCurve) {\n      pointCount = curve.pointCount;\n      for (let i = 0; i < pointCount; i++) {\n        rc.push(curve.point(i));\n      }\n      return rc;\n    }\n    if (curve instanceof rhino.PolyCurve) {\n      var segmentCount = curve.segmentCount;\n      for (let i = 0; i < segmentCount; i++) {\n        var segment = curve.segmentCurve(i);\n        var segmentArray = curveToPoints(segment, pointCount);\n        rc = rc.concat(segmentArray);\n        segment.delete();\n      }\n      return rc;\n    }\n    if (curve instanceof rhino.ArcCurve) {\n      pointCount = Math.floor(curve.angleDegrees / 5);\n      pointCount = pointCount < 2 ? 2 : pointCount; // alternative to this hardcoded version: https://stackoverflow.com/a/18499923/2179399\n    }\n    if (curve instanceof rhino.NurbsCurve && curve.degree === 1) {\n      const pLine = curve.tryGetPolyline();\n      for (let i = 0; i < pLine.count; i++) {\n        rc.push(pLine.get(i));\n      }\n      pLine.delete();\n      return rc;\n    }\n    var domain = curve.domain;\n    var divisions = pointCount - 1.0;\n    for (let j = 0; j < pointCount; j++) {\n      var t = domain[0] + j / divisions * (domain[1] - domain[0]);\n      if (t === domain[0] || t === domain[1]) {\n        ts.push(t);\n        continue;\n      }\n      var tan = curve.tangentAt(t);\n      var prevTan = curve.tangentAt(ts.slice(-1)[0]); // Duplicated from THREE.Vector3\n      // How to pass imports to worker?\n\n      var tS = tan[0] * tan[0] + tan[1] * tan[1] + tan[2] * tan[2];\n      var ptS = prevTan[0] * prevTan[0] + prevTan[1] * prevTan[1] + prevTan[2] * prevTan[2];\n      var denominator = Math.sqrt(tS * ptS);\n      var angle;\n      if (denominator === 0) {\n        angle = Math.PI / 2;\n      } else {\n        var theta = (tan.x * prevTan.x + tan.y * prevTan.y + tan.z * prevTan.z) / denominator;\n        angle = Math.acos(Math.max(-1, Math.min(1, theta)));\n      }\n      if (angle < 0.1) continue;\n      ts.push(t);\n    }\n    rc = ts.map(t => curve.pointAt(t));\n    return rc;\n  }\n};\nexport { Rhino3dmLoader };","map":{"version":3,"names":["Loader","FileLoader","MeshStandardMaterial","Color","TextureLoader","Object3D","Matrix4","BufferGeometryLoader","DirectionalLight","PointLight","RectAreaLight","Vector3","SpotLight","CanvasTexture","LinearFilter","ClampToEdgeWrapping","SpriteMaterial","Sprite","LineBasicMaterial","Line","Mesh","PointsMaterial","Points","Rhino3dmLoader","manager","call","libraryPath","libraryPending","libraryBinary","libraryConfig","url","workerLimit","workerPool","workerNextTaskID","workerSourceURL","workerConfig","materials","taskCache","WeakMap","prototype","Object","assign","create","constructor","setLibraryPath","path","setWorkerLimit","load","onLoad","onProgress","onError","loader","setPath","setResponseType","setRequestHeader","requestHeader","buffer","has","cachedTask","get","promise","then","catch","decodeObjects","debug","console","log","map","worker","_taskLoad","taskID","taskCost","byteLength","objectPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","type","id","message","_createGeometry","data","_releaseTask","set","parse","_compareMaterials","material","mat","name","color","r","g","b","i","length","m","_mat","JSON","stringify","push","_createMaterial","undefined","metalness","side","_diffuseColor","diffuseColor","diffusecolor","transparent","transparency","opacity","textureLoader","textures","texture","image","bumpMap","alphaMap","envMap","object","instanceDefinitionObjects","instanceDefinitions","instanceReferences","userData","layers","groups","settings","objects","obj","attributes","objectType","materialIndex","rMaterial","_object","_createObject","layer","layerIndex","visible","isInstanceDefinitionObject","add","iDef","j","objectIds","objId","p","idoId","iRef","geometry","parentIdefId","iRefObject","xf","xform","array","matrix","applyMatrix4","clone","hasOwnProperty","vertexColors","sizeAttenuation","size","_color","drawColor","points","mesh","castShadow","castsShadows","receiveShadow","receivesShadows","lines","ctx","document","createElement","getContext","font","fontHeight","fontFace","width","measureText","text","height","window","devicePixelRatio","canvas","style","setTransform","textBaseline","textAlign","fillStyle","a","fillRect","fillText","minFilter","wrapS","wrapT","depthTest","sprite","position","point","scale","light","isDirectionalLight","location","target","direction","shadow","normalBias","isPointLight","isRectangularLight","Math","abs","lookAt","isSpotLight","angle","spotAngleRadians","isLinearLight","warn","intensity","diffuse","_initLibrary","jsLoader","jsContent","binaryLoader","binaryContent","all","wasmBinary","fn","Rhino3dmWorker","toString","body","substring","indexOf","lastIndexOf","join","URL","createObjectURL","Blob","Worker","_taskCosts","onmessage","e","error","sort","dispose","terminate","rhino","RhinoModule","onRuntimeInitialized","rhino3dm","self","arr","Uint8Array","doc","File3dm","fromByteArray","views","namedViews","objs","cnt","count","extractObjectData","delete","idef","idefAttributes","extractProperties","getObjectIds","textureTypes","TextureType","Diffuse","Bump","Transparency","Opacity","Emap","pbrTextureTypes","PBR_BaseColor","PBR_Subsurface","PBR_SubsurfaceScattering","PBR_SubsurfaceScatteringRadius","PBR_Metallic","PBR_Specular","PBR_SpecularTint","PBR_Roughness","PBR_Anisotropic","PBR_Anisotropic_Rotation","PBR_Sheen","PBR_SheenTint","PBR_Clearcoat","PBR_ClearcoatBump","PBR_ClearcoatRoughness","PBR_OpacityIor","PBR_OpacityRoughness","PBR_Emission","PBR_AmbientOcclusion","PBR_Displacement","_material","_pbrMaterial","physicallyBased","_texture","getTexture","textureType","getEmbeddedFileAsBase64","fileName","supported","pbMaterialProperties","_layer","_view","view","_namedView","namedView","_group","group","_geometry","_attributes","ObjectType","Curve","pts","curveToPoints","itemSize","Point","pt","PointSet","toThreejsJSON","Brep","faces","faceIndex","face","_mesh","getMesh","MeshType","Any","append","compact","Extrusion","TextDot","Light","InstanceReference","toFloatArray","SubD","subdivide","createFromSubDControlNet","groupCount","groupIds","getGroupList","userStringCount","userStrings","getUserStrings","result","property","value","curve","pointLimit","pointCount","rc","ts","LineCurve","pointAtStart","pointAtEnd","PolylineCurve","PolyCurve","segmentCount","segment","segmentCurve","segmentArray","concat","ArcCurve","floor","angleDegrees","NurbsCurve","degree","pLine","tryGetPolyline","domain","divisions","t","tan","tangentAt","prevTan","slice","tS","ptS","denominator","sqrt","PI","theta","x","y","z","acos","max","min","pointAt"],"sources":["C:/Users/drncs/OneDrive/Área de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/loaders/3DMLoader.js"],"sourcesContent":["import { Loader, FileLoader, MeshStandardMaterial, Color, TextureLoader, Object3D, Matrix4, BufferGeometryLoader, DirectionalLight, PointLight, RectAreaLight, Vector3, SpotLight, CanvasTexture, LinearFilter, ClampToEdgeWrapping, SpriteMaterial, Sprite, LineBasicMaterial, Line, Mesh, PointsMaterial, Points } from 'three';\n\nvar Rhino3dmLoader = function (manager) {\n  Loader.call(this, manager);\n  this.libraryPath = '';\n  this.libraryPending = null;\n  this.libraryBinary = null;\n  this.libraryConfig = {};\n  this.url = '';\n  this.workerLimit = 4;\n  this.workerPool = [];\n  this.workerNextTaskID = 1;\n  this.workerSourceURL = '';\n  this.workerConfig = {};\n  this.materials = [];\n};\n\nRhino3dmLoader.taskCache = new WeakMap();\nRhino3dmLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: Rhino3dmLoader,\n  setLibraryPath: function (path) {\n    this.libraryPath = path;\n    return this;\n  },\n  setWorkerLimit: function (workerLimit) {\n    this.workerLimit = workerLimit;\n    return this;\n  },\n  load: function (url, onLoad, onProgress, onError) {\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    this.url = url;\n    loader.load(url, buffer => {\n      // Check for an existing task using this buffer. A transferred buffer cannot be transferred\n      // again from this thread.\n      if (Rhino3dmLoader.taskCache.has(buffer)) {\n        var cachedTask = Rhino3dmLoader.taskCache.get(buffer);\n        return cachedTask.promise.then(onLoad).catch(onError);\n      }\n\n      this.decodeObjects(buffer, url).then(onLoad).catch(onError);\n    }, onProgress, onError);\n  },\n  debug: function () {\n    console.log('Task load: ', this.workerPool.map(worker => worker._taskLoad));\n  },\n  decodeObjects: function (buffer, url) {\n    var worker;\n    var taskID;\n    var taskCost = buffer.byteLength;\n\n    var objectPending = this._getWorker(taskCost).then(_worker => {\n      worker = _worker;\n      taskID = this.workerNextTaskID++; //hmmm\n\n      return new Promise((resolve, reject) => {\n        worker._callbacks[taskID] = {\n          resolve,\n          reject\n        };\n        worker.postMessage({\n          type: 'decode',\n          id: taskID,\n          buffer\n        }, [buffer]); //this.debug();\n      });\n    }).then(message => this._createGeometry(message.data)); // Remove task from the task list.\n    // Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\n\n    objectPending.catch(() => true).then(() => {\n      if (worker && taskID) {\n        this._releaseTask(worker, taskID); //this.debug();\n\n      }\n    }); // Cache the task result.\n\n    Rhino3dmLoader.taskCache.set(buffer, {\n      url: url,\n      promise: objectPending\n    });\n    return objectPending;\n  },\n  parse: function (data, onLoad, onError) {\n    this.decodeObjects(data, '').then(onLoad).catch(onError);\n  },\n  _compareMaterials: function (material) {\n    var mat = {};\n    mat.name = material.name;\n    mat.color = {};\n    mat.color.r = material.color.r;\n    mat.color.g = material.color.g;\n    mat.color.b = material.color.b;\n    mat.type = material.type;\n\n    for (let i = 0; i < this.materials.length; i++) {\n      var m = this.materials[i];\n      var _mat = {};\n      _mat.name = m.name;\n      _mat.color = {};\n      _mat.color.r = m.color.r;\n      _mat.color.g = m.color.g;\n      _mat.color.b = m.color.b;\n      _mat.type = m.type;\n\n      if (JSON.stringify(mat) === JSON.stringify(_mat)) {\n        return m;\n      }\n    }\n\n    this.materials.push(material);\n    return material;\n  },\n  _createMaterial: function (material) {\n    if (material === undefined) {\n      return new MeshStandardMaterial({\n        color: new Color(1, 1, 1),\n        metalness: 0.8,\n        name: 'default',\n        side: 2\n      });\n    }\n\n    var _diffuseColor = material.diffuseColor;\n    var diffusecolor = new Color(_diffuseColor.r / 255.0, _diffuseColor.g / 255.0, _diffuseColor.b / 255.0);\n\n    if (_diffuseColor.r === 0 && _diffuseColor.g === 0 && _diffuseColor.b === 0) {\n      diffusecolor.r = 1;\n      diffusecolor.g = 1;\n      diffusecolor.b = 1;\n    } // console.log( material );\n\n\n    var mat = new MeshStandardMaterial({\n      color: diffusecolor,\n      name: material.name,\n      side: 2,\n      transparent: material.transparency > 0 ? true : false,\n      opacity: 1.0 - material.transparency\n    });\n    var textureLoader = new TextureLoader();\n\n    for (let i = 0; i < material.textures.length; i++) {\n      var texture = material.textures[i];\n\n      if (texture.image !== null) {\n        var map = textureLoader.load(texture.image);\n\n        switch (texture.type) {\n          case 'Diffuse':\n            mat.map = map;\n            break;\n\n          case 'Bump':\n            mat.bumpMap = map;\n            break;\n\n          case 'Transparency':\n            mat.alphaMap = map;\n            mat.transparent = true;\n            break;\n\n          case 'Emap':\n            mat.envMap = map;\n            break;\n        }\n      }\n    }\n\n    return mat;\n  },\n  _createGeometry: function (data) {\n    // console.log(data);\n    var object = new Object3D();\n    var instanceDefinitionObjects = [];\n    var instanceDefinitions = [];\n    var instanceReferences = [];\n    object.userData['layers'] = data.layers;\n    object.userData['groups'] = data.groups;\n    object.userData['settings'] = data.settings;\n    object.userData['objectType'] = 'File3dm';\n    object.userData['materials'] = null;\n    object.name = this.url;\n    var objects = data.objects;\n    var materials = data.materials;\n\n    for (let i = 0; i < objects.length; i++) {\n      var obj = objects[i];\n      var attributes = obj.attributes;\n\n      switch (obj.objectType) {\n        case 'InstanceDefinition':\n          instanceDefinitions.push(obj);\n          break;\n\n        case 'InstanceReference':\n          instanceReferences.push(obj);\n          break;\n\n        default:\n          if (attributes.materialIndex >= 0) {\n            var rMaterial = materials[attributes.materialIndex];\n\n            var material = this._createMaterial(rMaterial);\n\n            material = this._compareMaterials(material);\n\n            var _object = this._createObject(obj, material);\n          } else {\n            var material = this._createMaterial();\n\n            var _object = this._createObject(obj, material);\n          }\n\n          if (_object === undefined) {\n            continue;\n          }\n\n          var layer = data.layers[attributes.layerIndex];\n          _object.visible = layer ? data.layers[attributes.layerIndex].visible : true;\n\n          if (attributes.isInstanceDefinitionObject) {\n            instanceDefinitionObjects.push(_object);\n          } else {\n            object.add(_object);\n          }\n\n          break;\n      }\n    }\n\n    for (let i = 0; i < instanceDefinitions.length; i++) {\n      var iDef = instanceDefinitions[i];\n      var objects = [];\n\n      for (let j = 0; j < iDef.attributes.objectIds.length; j++) {\n        var objId = iDef.attributes.objectIds[j];\n\n        for (let p = 0; p < instanceDefinitionObjects.length; p++) {\n          var idoId = instanceDefinitionObjects[p].userData.attributes.id;\n\n          if (objId === idoId) {\n            objects.push(instanceDefinitionObjects[p]);\n          }\n        }\n      } // Currently clones geometry and does not take advantage of instancing\n\n\n      for (let j = 0; j < instanceReferences.length; j++) {\n        var iRef = instanceReferences[j];\n\n        if (iRef.geometry.parentIdefId === iDef.attributes.id) {\n          var iRefObject = new Object3D();\n          var xf = iRef.geometry.xform.array;\n          var matrix = new Matrix4();\n          matrix.set(xf[0], xf[1], xf[2], xf[3], xf[4], xf[5], xf[6], xf[7], xf[8], xf[9], xf[10], xf[11], xf[12], xf[13], xf[14], xf[15]);\n          iRefObject.applyMatrix4(matrix);\n\n          for (let p = 0; p < objects.length; p++) {\n            iRefObject.add(objects[p].clone(true));\n          }\n\n          object.add(iRefObject);\n        }\n      }\n    }\n\n    object.userData['materials'] = this.materials;\n    return object;\n  },\n  _createObject: function (obj, mat) {\n    var loader = new BufferGeometryLoader();\n    var attributes = obj.attributes;\n\n    switch (obj.objectType) {\n      case 'Point':\n      case 'PointSet':\n        var geometry = loader.parse(obj.geometry);\n        var material = null;\n\n        if (geometry.attributes.hasOwnProperty('color')) {\n          material = new PointsMaterial({\n            vertexColors: true,\n            sizeAttenuation: false,\n            size: 2\n          });\n        } else {\n          var _color = attributes.drawColor;\n          var color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n          material = new PointsMaterial({\n            color: color,\n            sizeAttenuation: false,\n            size: 2\n          });\n        }\n\n        material = this._compareMaterials(material);\n        var points = new Points(geometry, material);\n        points.userData['attributes'] = attributes;\n        points.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          points.name = attributes.name;\n        }\n\n        return points;\n\n      case 'Mesh':\n      case 'Extrusion':\n      case 'SubD':\n      case 'Brep':\n        if (obj.geometry === null) return;\n        var geometry = loader.parse(obj.geometry);\n\n        if (geometry.attributes.hasOwnProperty('color')) {\n          mat.vertexColors = true;\n        }\n\n        if (mat === null) {\n          mat = this._createMaterial();\n          mat = this._compareMaterials(mat);\n        }\n\n        var mesh = new Mesh(geometry, mat);\n        mesh.castShadow = attributes.castsShadows;\n        mesh.receiveShadow = attributes.receivesShadows;\n        mesh.userData['attributes'] = attributes;\n        mesh.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          mesh.name = attributes.name;\n        }\n\n        return mesh;\n\n      case 'Curve':\n        geometry = loader.parse(obj.geometry);\n        var _color = attributes.drawColor;\n        var color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n        var material = new LineBasicMaterial({\n          color: color\n        });\n        material = this._compareMaterials(material);\n        var lines = new Line(geometry, material);\n        lines.userData['attributes'] = attributes;\n        lines.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          lines.name = attributes.name;\n        }\n\n        return lines;\n\n      case 'TextDot':\n        geometry = obj.geometry;\n        var ctx = document.createElement('canvas').getContext('2d');\n        var font = `${geometry.fontHeight}px ${geometry.fontFace}`;\n        ctx.font = font;\n        var width = ctx.measureText(geometry.text).width + 10;\n        var height = geometry.fontHeight + 10;\n        var r = window.devicePixelRatio;\n        ctx.canvas.width = width * r;\n        ctx.canvas.height = height * r;\n        ctx.canvas.style.width = width + 'px';\n        ctx.canvas.style.height = height + 'px';\n        ctx.setTransform(r, 0, 0, r, 0, 0);\n        ctx.font = font;\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n        var color = attributes.drawColor;\n        ctx.fillStyle = `rgba(${color.r},${color.g},${color.b},${color.a})`;\n        ctx.fillRect(0, 0, width, height);\n        ctx.fillStyle = 'white';\n        ctx.fillText(geometry.text, width / 2, height / 2);\n        var texture = new CanvasTexture(ctx.canvas);\n        texture.minFilter = LinearFilter;\n        texture.wrapS = ClampToEdgeWrapping;\n        texture.wrapT = ClampToEdgeWrapping;\n        var material = new SpriteMaterial({\n          map: texture,\n          depthTest: false\n        });\n        var sprite = new Sprite(material);\n        sprite.position.set(geometry.point[0], geometry.point[1], geometry.point[2]);\n        sprite.scale.set(width / 10, height / 10, 1.0);\n        sprite.userData['attributes'] = attributes;\n        sprite.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          sprite.name = attributes.name;\n        }\n\n        return sprite;\n\n      case 'Light':\n        geometry = obj.geometry;\n        var light;\n\n        if (geometry.isDirectionalLight) {\n          light = new DirectionalLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isPointLight) {\n          light = new PointLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isRectangularLight) {\n          light = new RectAreaLight();\n          var width = Math.abs(geometry.width[2]);\n          var height = Math.abs(geometry.length[0]);\n          light.position.set(geometry.location[0] - height / 2, geometry.location[1], geometry.location[2] - width / 2);\n          light.height = height;\n          light.width = width;\n          light.lookAt(new Vector3(geometry.direction[0], geometry.direction[1], geometry.direction[2]));\n        } else if (geometry.isSpotLight) {\n          light = new SpotLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n          light.angle = geometry.spotAngleRadians;\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isLinearLight) {\n          console.warn('THREE.3DMLoader:  No conversion exists for linear lights.');\n          return;\n        }\n\n        if (light) {\n          light.intensity = geometry.intensity;\n          var _color = geometry.diffuse;\n          var color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n          light.color = color;\n          light.userData['attributes'] = attributes;\n          light.userData['objectType'] = obj.objectType;\n        }\n\n        return light;\n    }\n  },\n  _initLibrary: function () {\n    if (!this.libraryPending) {\n      // Load rhino3dm wrapper.\n      var jsLoader = new FileLoader(this.manager);\n      jsLoader.setPath(this.libraryPath);\n      var jsContent = new Promise((resolve, reject) => {\n        jsLoader.load('rhino3dm.js', resolve, undefined, reject);\n      }); // Load rhino3dm WASM binary.\n\n      var binaryLoader = new FileLoader(this.manager);\n      binaryLoader.setPath(this.libraryPath);\n      binaryLoader.setResponseType('arraybuffer');\n      var binaryContent = new Promise((resolve, reject) => {\n        binaryLoader.load('rhino3dm.wasm', resolve, undefined, reject);\n      });\n      this.libraryPending = Promise.all([jsContent, binaryContent]).then(([jsContent, binaryContent]) => {\n        //this.libraryBinary = binaryContent;\n        this.libraryConfig.wasmBinary = binaryContent;\n        var fn = Rhino3dmLoader.Rhino3dmWorker.toString();\n        var body = ['/* rhino3dm.js */', jsContent, '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\n');\n        this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n      });\n    }\n\n    return this.libraryPending;\n  },\n  _getWorker: function (taskCost) {\n    return this._initLibrary().then(() => {\n      if (this.workerPool.length < this.workerLimit) {\n        var worker = new Worker(this.workerSourceURL);\n        worker._callbacks = {};\n        worker._taskCosts = {};\n        worker._taskLoad = 0;\n        worker.postMessage({\n          type: 'init',\n          libraryConfig: this.libraryConfig\n        });\n\n        worker.onmessage = function (e) {\n          var message = e.data;\n\n          switch (message.type) {\n            case 'decode':\n              worker._callbacks[message.id].resolve(message);\n\n              break;\n\n            case 'error':\n              worker._callbacks[message.id].reject(message);\n\n              break;\n\n            default:\n              console.error('THREE.Rhino3dmLoader: Unexpected message, \"' + message.type + '\"');\n          }\n        };\n\n        this.workerPool.push(worker);\n      } else {\n        this.workerPool.sort(function (a, b) {\n          return a._taskLoad > b._taskLoad ? -1 : 1;\n        });\n      }\n\n      var worker = this.workerPool[this.workerPool.length - 1];\n      worker._taskLoad += taskCost;\n      return worker;\n    });\n  },\n  _releaseTask: function (worker, taskID) {\n    worker._taskLoad -= worker._taskCosts[taskID];\n    delete worker._callbacks[taskID];\n    delete worker._taskCosts[taskID];\n  },\n  dispose: function () {\n    for (let i = 0; i < this.workerPool.length; ++i) {\n      this.workerPool[i].terminate();\n    }\n\n    this.workerPool.length = 0;\n    return this;\n  }\n});\n/* WEB WORKER */\n\nRhino3dmLoader.Rhino3dmWorker = function () {\n  var libraryPending;\n  var libraryConfig;\n  var rhino;\n\n  onmessage = function (e) {\n    var message = e.data;\n\n    switch (message.type) {\n      case 'init':\n        libraryConfig = message.libraryConfig;\n        var wasmBinary = libraryConfig.wasmBinary;\n        var RhinoModule;\n        libraryPending = new Promise(function (resolve) {\n          /* Like Basis Loader */\n          RhinoModule = {\n            wasmBinary,\n            onRuntimeInitialized: resolve\n          };\n          rhino3dm(RhinoModule); // eslint-disable-line no-undef\n        }).then(() => {\n          rhino = RhinoModule;\n        });\n        break;\n\n      case 'decode':\n        var buffer = message.buffer;\n        libraryPending.then(() => {\n          var data = decodeObjects(rhino, buffer);\n          self.postMessage({\n            type: 'decode',\n            id: message.id,\n            data\n          });\n        });\n        break;\n    }\n  };\n\n  function decodeObjects(rhino, buffer) {\n    var arr = new Uint8Array(buffer);\n    var doc = rhino.File3dm.fromByteArray(arr);\n    var objects = [];\n    var materials = [];\n    var layers = [];\n    var views = [];\n    var namedViews = [];\n    var groups = []; //Handle objects\n\n    var objs = doc.objects();\n    var cnt = objs.count;\n\n    for (let i = 0; i < cnt; i++) {\n      var _object = objs.get(i);\n\n      var object = extractObjectData(_object, doc);\n\n      _object.delete();\n\n      if (object) {\n        objects.push(object);\n      }\n    } // Handle instance definitions\n    // console.log( `Instance Definitions Count: ${doc.instanceDefinitions().count()}` );\n\n\n    for (let i = 0; i < doc.instanceDefinitions().count(); i++) {\n      var idef = doc.instanceDefinitions().get(i);\n      var idefAttributes = extractProperties(idef);\n      idefAttributes.objectIds = idef.getObjectIds();\n      objects.push({\n        geometry: null,\n        attributes: idefAttributes,\n        objectType: 'InstanceDefinition'\n      });\n    } // Handle materials\n\n\n    var textureTypes = [// rhino.TextureType.Bitmap,\n    rhino.TextureType.Diffuse, rhino.TextureType.Bump, rhino.TextureType.Transparency, rhino.TextureType.Opacity, rhino.TextureType.Emap];\n    var pbrTextureTypes = [rhino.TextureType.PBR_BaseColor, rhino.TextureType.PBR_Subsurface, rhino.TextureType.PBR_SubsurfaceScattering, rhino.TextureType.PBR_SubsurfaceScatteringRadius, rhino.TextureType.PBR_Metallic, rhino.TextureType.PBR_Specular, rhino.TextureType.PBR_SpecularTint, rhino.TextureType.PBR_Roughness, rhino.TextureType.PBR_Anisotropic, rhino.TextureType.PBR_Anisotropic_Rotation, rhino.TextureType.PBR_Sheen, rhino.TextureType.PBR_SheenTint, rhino.TextureType.PBR_Clearcoat, rhino.TextureType.PBR_ClearcoatBump, rhino.TextureType.PBR_ClearcoatRoughness, rhino.TextureType.PBR_OpacityIor, rhino.TextureType.PBR_OpacityRoughness, rhino.TextureType.PBR_Emission, rhino.TextureType.PBR_AmbientOcclusion, rhino.TextureType.PBR_Displacement];\n\n    for (let i = 0; i < doc.materials().count(); i++) {\n      var _material = doc.materials().get(i);\n\n      var _pbrMaterial = _material.physicallyBased();\n\n      var material = extractProperties(_material);\n      var textures = [];\n\n      for (let j = 0; j < textureTypes.length; j++) {\n        var _texture = _material.getTexture(textureTypes[j]);\n\n        if (_texture) {\n          var textureType = textureTypes[j].constructor.name;\n          textureType = textureType.substring(12, textureType.length);\n          var texture = {\n            type: textureType\n          };\n          var image = doc.getEmbeddedFileAsBase64(_texture.fileName);\n\n          if (image) {\n            texture.image = 'data:image/png;base64,' + image;\n          } else {\n            console.warn(`THREE.3DMLoader: Image for ${textureType} texture not embedded in file.`);\n            texture.image = null;\n          }\n\n          textures.push(texture);\n\n          _texture.delete();\n        }\n      }\n\n      material.textures = textures;\n\n      if (_pbrMaterial.supported) {\n        console.log('pbr true');\n\n        for (let j = 0; j < pbrTextureTypes.length; j++) {\n          var _texture = _material.getTexture(textureTypes[j]);\n\n          if (_texture) {\n            var image = doc.getEmbeddedFileAsBase64(_texture.fileName);\n            var textureType = textureTypes[j].constructor.name;\n            textureType = textureType.substring(12, textureType.length);\n            var texture = {\n              type: textureType,\n              image: 'data:image/png;base64,' + image\n            };\n            textures.push(texture);\n\n            _texture.delete();\n          }\n        }\n\n        var pbMaterialProperties = extractProperties(_material.physicallyBased());\n        material = Object.assign(pbMaterialProperties, material);\n      }\n\n      materials.push(material);\n\n      _material.delete();\n\n      _pbrMaterial.delete();\n    } // Handle layers\n\n\n    for (let i = 0; i < doc.layers().count(); i++) {\n      var _layer = doc.layers().get(i);\n\n      var layer = extractProperties(_layer);\n      layers.push(layer);\n\n      _layer.delete();\n    } // Handle views\n\n\n    for (let i = 0; i < doc.views().count(); i++) {\n      var _view = doc.views().get(i);\n\n      var view = extractProperties(_view);\n      views.push(view);\n\n      _view.delete();\n    } // Handle named views\n\n\n    for (let i = 0; i < doc.namedViews().count(); i++) {\n      var _namedView = doc.namedViews().get(i);\n\n      var namedView = extractProperties(_namedView);\n      namedViews.push(namedView);\n\n      _namedView.delete();\n    } // Handle groups\n\n\n    for (let i = 0; i < doc.groups().count(); i++) {\n      var _group = doc.groups().get(i);\n\n      var group = extractProperties(_group);\n      groups.push(group);\n\n      _group.delete();\n    } // Handle settings\n\n\n    var settings = extractProperties(doc.settings()); //TODO: Handle other document stuff like dimstyles, instance definitions, bitmaps etc.\n    // Handle dimstyles\n    // console.log( `Dimstyle Count: ${doc.dimstyles().count()}` );\n    // Handle bitmaps\n    // console.log( `Bitmap Count: ${doc.bitmaps().count()}` );\n    // Handle strings -- this seems to be broken at the moment in rhino3dm\n    // console.log( `Document Strings Count: ${doc.strings().count()}` );\n\n    /*\n    for( var i = 0; i < doc.strings().count(); i++ ){\n    var _string= doc.strings().get( i );\n    console.log(_string);\n    var string = extractProperties( _group );\n    strings.push( string );\n    _string.delete();\n    }\n    */\n\n    doc.delete();\n    return {\n      objects,\n      materials,\n      layers,\n      views,\n      namedViews,\n      groups,\n      settings\n    };\n  }\n\n  function extractObjectData(object, doc) {\n    var _geometry = object.geometry();\n\n    var _attributes = object.attributes();\n\n    var objectType = _geometry.objectType;\n    var geometry = null;\n    var attributes = null; // skip instance definition objects\n    //if( _attributes.isInstanceDefinitionObject ) { continue; }\n    // TODO: handle other geometry types\n\n    switch (objectType) {\n      case rhino.ObjectType.Curve:\n        var pts = curveToPoints(_geometry, 100);\n        var position = {};\n        var attributes = {};\n        var data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [];\n\n        for (let j = 0; j < pts.length; j++) {\n          position.array.push(pts[j][0]);\n          position.array.push(pts[j][1]);\n          position.array.push(pts[j][2]);\n        }\n\n        attributes.position = position;\n        data.attributes = attributes;\n        geometry = {\n          data\n        };\n        break;\n\n      case rhino.ObjectType.Point:\n        var pt = _geometry.location;\n        var position = {};\n        var color = {};\n        var attributes = {};\n        var data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [pt[0], pt[1], pt[2]];\n\n        var _color = _attributes.drawColor(doc);\n\n        color.itemSize = 3;\n        color.type = 'Float32Array';\n        color.array = [_color.r / 255.0, _color.g / 255.0, _color.b / 255.0];\n        attributes.position = position;\n        attributes.color = color;\n        data.attributes = attributes;\n        geometry = {\n          data\n        };\n        break;\n\n      case rhino.ObjectType.PointSet:\n      case rhino.ObjectType.Mesh:\n        geometry = _geometry.toThreejsJSON();\n        break;\n\n      case rhino.ObjectType.Brep:\n        var faces = _geometry.faces();\n\n        var mesh = new rhino.Mesh();\n\n        for (let faceIndex = 0; faceIndex < faces.count; faceIndex++) {\n          var face = faces.get(faceIndex);\n\n          var _mesh = face.getMesh(rhino.MeshType.Any);\n\n          if (_mesh) {\n            mesh.append(_mesh);\n\n            _mesh.delete();\n          }\n\n          face.delete();\n        }\n\n        if (mesh.faces().count > 0) {\n          mesh.compact();\n          geometry = mesh.toThreejsJSON();\n          faces.delete();\n        }\n\n        mesh.delete();\n        break;\n\n      case rhino.ObjectType.Extrusion:\n        var mesh = _geometry.getMesh(rhino.MeshType.Any);\n\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh.delete();\n        }\n\n        break;\n\n      case rhino.ObjectType.TextDot:\n        geometry = extractProperties(_geometry);\n        break;\n\n      case rhino.ObjectType.Light:\n        geometry = extractProperties(_geometry);\n        break;\n\n      case rhino.ObjectType.InstanceReference:\n        geometry = extractProperties(_geometry);\n        geometry.xform = extractProperties(_geometry.xform);\n        geometry.xform.array = _geometry.xform.toFloatArray(true);\n        break;\n\n      case rhino.ObjectType.SubD:\n        // TODO: precalculate resulting vertices and faces and warn on excessive results\n        _geometry.subdivide(3);\n\n        var mesh = rhino.Mesh.createFromSubDControlNet(_geometry);\n\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh.delete();\n        }\n\n        break;\n\n      /*\n      case rhino.ObjectType.Annotation:\n      case rhino.ObjectType.Hatch:\n      case rhino.ObjectType.ClipPlane:\n      */\n\n      default:\n        console.warn(`THREE.3DMLoader: TODO: Implement ${objectType.constructor.name}`);\n        break;\n    }\n\n    if (geometry) {\n      var attributes = extractProperties(_attributes);\n      attributes.geometry = extractProperties(_geometry);\n\n      if (_attributes.groupCount > 0) {\n        attributes.groupIds = _attributes.getGroupList();\n      }\n\n      if (_attributes.userStringCount > 0) {\n        attributes.userStrings = _attributes.getUserStrings();\n      }\n\n      if (_geometry.userStringCount > 0) {\n        attributes.geometry.userStrings = _geometry.getUserStrings();\n      }\n\n      attributes.drawColor = _attributes.drawColor(doc);\n      objectType = objectType.constructor.name;\n      objectType = objectType.substring(11, objectType.length);\n      return {\n        geometry,\n        attributes,\n        objectType\n      };\n    } else {\n      console.warn(`THREE.3DMLoader: ${objectType.constructor.name} has no associated mesh geometry.`);\n    }\n  }\n\n  function extractProperties(object) {\n    var result = {};\n\n    for (let property in object) {\n      var value = object[property];\n\n      if (typeof value !== 'function') {\n        if (typeof value === 'object' && value !== null && value.hasOwnProperty('constructor')) {\n          result[property] = {\n            name: value.constructor.name,\n            value: value.value\n          };\n        } else {\n          result[property] = value;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function curveToPoints(curve, pointLimit) {\n    var pointCount = pointLimit;\n    var rc = [];\n    var ts = [];\n\n    if (curve instanceof rhino.LineCurve) {\n      return [curve.pointAtStart, curve.pointAtEnd];\n    }\n\n    if (curve instanceof rhino.PolylineCurve) {\n      pointCount = curve.pointCount;\n\n      for (let i = 0; i < pointCount; i++) {\n        rc.push(curve.point(i));\n      }\n\n      return rc;\n    }\n\n    if (curve instanceof rhino.PolyCurve) {\n      var segmentCount = curve.segmentCount;\n\n      for (let i = 0; i < segmentCount; i++) {\n        var segment = curve.segmentCurve(i);\n        var segmentArray = curveToPoints(segment, pointCount);\n        rc = rc.concat(segmentArray);\n        segment.delete();\n      }\n\n      return rc;\n    }\n\n    if (curve instanceof rhino.ArcCurve) {\n      pointCount = Math.floor(curve.angleDegrees / 5);\n      pointCount = pointCount < 2 ? 2 : pointCount; // alternative to this hardcoded version: https://stackoverflow.com/a/18499923/2179399\n    }\n\n    if (curve instanceof rhino.NurbsCurve && curve.degree === 1) {\n      const pLine = curve.tryGetPolyline();\n\n      for (let i = 0; i < pLine.count; i++) {\n        rc.push(pLine.get(i));\n      }\n\n      pLine.delete();\n      return rc;\n    }\n\n    var domain = curve.domain;\n    var divisions = pointCount - 1.0;\n\n    for (let j = 0; j < pointCount; j++) {\n      var t = domain[0] + j / divisions * (domain[1] - domain[0]);\n\n      if (t === domain[0] || t === domain[1]) {\n        ts.push(t);\n        continue;\n      }\n\n      var tan = curve.tangentAt(t);\n      var prevTan = curve.tangentAt(ts.slice(-1)[0]); // Duplicated from THREE.Vector3\n      // How to pass imports to worker?\n\n      var tS = tan[0] * tan[0] + tan[1] * tan[1] + tan[2] * tan[2];\n      var ptS = prevTan[0] * prevTan[0] + prevTan[1] * prevTan[1] + prevTan[2] * prevTan[2];\n      var denominator = Math.sqrt(tS * ptS);\n      var angle;\n\n      if (denominator === 0) {\n        angle = Math.PI / 2;\n      } else {\n        var theta = (tan.x * prevTan.x + tan.y * prevTan.y + tan.z * prevTan.z) / denominator;\n        angle = Math.acos(Math.max(-1, Math.min(1, theta)));\n      }\n\n      if (angle < 0.1) continue;\n      ts.push(t);\n    }\n\n    rc = ts.map(t => curve.pointAt(t));\n    return rc;\n  }\n};\n\nexport { Rhino3dmLoader };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}