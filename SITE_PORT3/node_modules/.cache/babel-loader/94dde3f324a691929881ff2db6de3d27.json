{"ast":null,"code":"import { BackSide } from 'three';\nimport { TempNode } from '../core/TempNode.js';\nimport { Vector2Node } from '../inputs/Vector2Node.js';\nimport { FunctionNode } from '../core/FunctionNode.js';\nimport { UVNode } from '../accessors/UVNode.js';\nimport { NormalNode } from '../accessors/NormalNode.js';\nimport { PositionNode } from '../accessors/PositionNode.js';\nfunction NormalMapNode(value, scale) {\n  TempNode.call(this, 'v3');\n  this.value = value;\n  this.scale = scale || new Vector2Node(1, 1);\n}\nNormalMapNode.Nodes = function () {\n  var perturbNormal2Arb = new FunctionNode(\n  // Per-Pixel Tangent Space Normal Mapping\n  // http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n  `vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 map, vec2 vUv, vec2 normalScale ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = map * 2.0 - 1.0;\n\n\t\tmapN.xy *= normalScale;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t// Workaround for Adreno GPUs gl_FrontFacing bug. See #15850 and #10331\n\n\t\t\tif ( dot( cross( S, T ), N ) < 0.0 ) mapN.xy *= - 1.0;\n\n\t\t#else\n\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#endif\n\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}`, null, {\n    derivatives: true\n  });\n  return {\n    perturbNormal2Arb: perturbNormal2Arb\n  };\n}();\nNormalMapNode.prototype = Object.create(TempNode.prototype);\nNormalMapNode.prototype.constructor = NormalMapNode;\nNormalMapNode.prototype.nodeType = 'NormalMap';\nNormalMapNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    var perturbNormal2Arb = builder.include(NormalMapNode.Nodes.perturbNormal2Arb);\n    this.normal = this.normal || new NormalNode();\n    this.position = this.position || new PositionNode(PositionNode.VIEW);\n    this.uv = this.uv || new UVNode();\n    var scale = this.scale.build(builder, 'v2');\n    if (builder.material.side === BackSide) {\n      scale = '-' + scale;\n    }\n    return builder.format(perturbNormal2Arb + '( -' + this.position.build(builder, 'v3') + ', ' + this.normal.build(builder, 'v3') + ', ' + this.value.build(builder, 'v3') + ', ' + this.uv.build(builder, 'v2') + ', ' + scale + ' )', this.getType(builder), output);\n  } else {\n    console.warn('THREE.NormalMapNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('vec3( 0.0 )', this.getType(builder), output);\n  }\n};\nNormalMapNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.value = source.value;\n  this.scale = source.scale;\n  return this;\n};\nNormalMapNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n    data.scale = this.scale.toJSON(meta).uuid;\n  }\n  return data;\n};\nexport { NormalMapNode };","map":{"version":3,"names":["BackSide","TempNode","Vector2Node","FunctionNode","UVNode","NormalNode","PositionNode","NormalMapNode","value","scale","call","Nodes","perturbNormal2Arb","derivatives","prototype","Object","create","constructor","nodeType","generate","builder","output","isShader","include","normal","position","VIEW","uv","build","material","side","format","getType","console","warn","shader","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"sources":["C:/Users/drncs/OneDrive/Área de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/misc/NormalMapNode.js"],"sourcesContent":["import { BackSide } from 'three';\nimport { TempNode } from '../core/TempNode.js';\nimport { Vector2Node } from '../inputs/Vector2Node.js';\nimport { FunctionNode } from '../core/FunctionNode.js';\nimport { UVNode } from '../accessors/UVNode.js';\nimport { NormalNode } from '../accessors/NormalNode.js';\nimport { PositionNode } from '../accessors/PositionNode.js';\n\nfunction NormalMapNode(value, scale) {\n  TempNode.call(this, 'v3');\n  this.value = value;\n  this.scale = scale || new Vector2Node(1, 1);\n}\n\nNormalMapNode.Nodes = function () {\n  var perturbNormal2Arb = new FunctionNode( // Per-Pixel Tangent Space Normal Mapping\n  // http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\n  `vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 map, vec2 vUv, vec2 normalScale ) {\n\n\t\t// Workaround for Adreno 3XX dFd*( vec3 ) bug. See #9988\n\n\t\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\n\t\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\n\t\tvec2 st0 = dFdx( vUv.st );\n\t\tvec2 st1 = dFdy( vUv.st );\n\n\t\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s ); // we do not care about the magnitude\n\n\t\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\n\t\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\n\t\tvec3 N = normalize( surf_norm );\n\n\t\tvec3 mapN = map * 2.0 - 1.0;\n\n\t\tmapN.xy *= normalScale;\n\n\t\t#ifdef DOUBLE_SIDED\n\n\t\t\t// Workaround for Adreno GPUs gl_FrontFacing bug. See #15850 and #10331\n\n\t\t\tif ( dot( cross( S, T ), N ) < 0.0 ) mapN.xy *= - 1.0;\n\n\t\t#else\n\n\t\t\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\n\n\t\t#endif\n\n\t\tmat3 tsn = mat3( S, T, N );\n\t\treturn normalize( tsn * mapN );\n\n\t}`, null, {\n    derivatives: true\n  });\n  return {\n    perturbNormal2Arb: perturbNormal2Arb\n  };\n}();\n\nNormalMapNode.prototype = Object.create(TempNode.prototype);\nNormalMapNode.prototype.constructor = NormalMapNode;\nNormalMapNode.prototype.nodeType = 'NormalMap';\n\nNormalMapNode.prototype.generate = function (builder, output) {\n  if (builder.isShader('fragment')) {\n    var perturbNormal2Arb = builder.include(NormalMapNode.Nodes.perturbNormal2Arb);\n    this.normal = this.normal || new NormalNode();\n    this.position = this.position || new PositionNode(PositionNode.VIEW);\n    this.uv = this.uv || new UVNode();\n    var scale = this.scale.build(builder, 'v2');\n\n    if (builder.material.side === BackSide) {\n      scale = '-' + scale;\n    }\n\n    return builder.format(perturbNormal2Arb + '( -' + this.position.build(builder, 'v3') + ', ' + this.normal.build(builder, 'v3') + ', ' + this.value.build(builder, 'v3') + ', ' + this.uv.build(builder, 'v2') + ', ' + scale + ' )', this.getType(builder), output);\n  } else {\n    console.warn('THREE.NormalMapNode is not compatible with ' + builder.shader + ' shader.');\n    return builder.format('vec3( 0.0 )', this.getType(builder), output);\n  }\n};\n\nNormalMapNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.value = source.value;\n  this.scale = source.scale;\n  return this;\n};\n\nNormalMapNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.value = this.value.toJSON(meta).uuid;\n    data.scale = this.scale.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { NormalMapNode };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}