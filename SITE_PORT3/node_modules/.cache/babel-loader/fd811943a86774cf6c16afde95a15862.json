{"ast":null,"code":"import { CubeUVRefractionMapping, CubeUVReflectionMapping, CubeRefractionMapping, CubeReflectionMapping, LinearEncoding, GammaEncoding } from 'three';\nimport { NodeUniform } from './NodeUniform.js';\nimport { NodeUtils } from './NodeUtils.js';\nimport { NodeLib } from './NodeLib.js';\nimport { FunctionNode } from './FunctionNode.js';\nimport { ConstNode } from './ConstNode.js';\nimport { StructNode } from './StructNode.js';\nimport { Vector2Node } from '../inputs/Vector2Node.js';\nimport { Vector3Node } from '../inputs/Vector3Node.js';\nimport { Vector4Node } from '../inputs/Vector4Node.js';\nimport { TextureNode } from '../inputs/TextureNode.js';\nimport { CubeTextureNode } from '../inputs/CubeTextureNode.js';\nimport { TextureCubeNode } from '../misc/TextureCubeNode.js';\nvar elements = NodeUtils.elements,\n  constructors = ['float', 'vec2', 'vec3', 'vec4'],\n  convertFormatToType = {\n    float: 'f',\n    vec2: 'v2',\n    vec3: 'v3',\n    vec4: 'v4',\n    mat4: 'v4',\n    int: 'i',\n    bool: 'b'\n  },\n  convertTypeToFormat = {\n    t: 'sampler2D',\n    tc: 'samplerCube',\n    b: 'bool',\n    i: 'int',\n    f: 'float',\n    c: 'vec3',\n    v2: 'vec2',\n    v3: 'vec3',\n    v4: 'vec4',\n    m3: 'mat3',\n    m4: 'mat4'\n  };\nfunction NodeBuilder() {\n  this.slots = [];\n  this.caches = [];\n  this.contexts = [];\n  this.keywords = {};\n  this.nodeData = {};\n  this.requires = {\n    uv: [],\n    color: [],\n    lights: false,\n    fog: false,\n    transparent: false,\n    irradiance: false\n  };\n  this.includes = {\n    consts: [],\n    functions: [],\n    structs: []\n  };\n  this.attributes = {};\n  this.prefixCode = ['#ifdef TEXTURE_LOD_EXT', '\t#define texCube(a, b) textureCube(a, b)', '\t#define texCubeBias(a, b, c) textureCubeLodEXT(a, b, c)', '\t#define tex2D(a, b) texture2D(a, b)', '\t#define tex2DBias(a, b, c) texture2DLodEXT(a, b, c)', '#else', '\t#define texCube(a, b) textureCube(a, b)', '\t#define texCubeBias(a, b, c) textureCube(a, b, c)', '\t#define tex2D(a, b) texture2D(a, b)', '\t#define tex2DBias(a, b, c) texture2D(a, b, c)', '#endif', '#include <packing>', '#include <common>'].join('\\n');\n  this.parsCode = {\n    vertex: '',\n    fragment: ''\n  };\n  this.code = {\n    vertex: '',\n    fragment: ''\n  };\n  this.nodeCode = {\n    vertex: '',\n    fragment: ''\n  };\n  this.resultCode = {\n    vertex: '',\n    fragment: ''\n  };\n  this.finalCode = {\n    vertex: '',\n    fragment: ''\n  };\n  this.inputs = {\n    uniforms: {\n      list: [],\n      vertex: [],\n      fragment: []\n    },\n    vars: {\n      varying: [],\n      vertex: [],\n      fragment: []\n    }\n  }; // send to material\n\n  this.defines = {};\n  this.uniforms = {};\n  this.extensions = {};\n  this.updaters = [];\n  this.nodes = []; // --\n\n  this.analyzing = false;\n}\nNodeBuilder.prototype = {\n  constructor: NodeBuilder,\n  build: function (vertex, fragment) {\n    this.buildShader('vertex', vertex);\n    this.buildShader('fragment', fragment);\n    for (let i = 0; i < this.requires.uv.length; i++) {\n      if (this.requires.uv[i]) {\n        var uvIndex = i > 0 ? i + 1 : '';\n        this.addVaryCode('varying vec2 vUv' + uvIndex + ';');\n        if (i > 0) {\n          this.addVertexParsCode('attribute vec2 uv' + uvIndex + ';');\n        }\n        this.addVertexFinalCode('vUv' + uvIndex + ' = uv' + uvIndex + ';');\n      }\n    }\n    if (this.requires.color[0]) {\n      this.addVaryCode('varying vec4 vColor;');\n      this.addVertexParsCode('attribute vec4 color;');\n      this.addVertexFinalCode('vColor = color;');\n    }\n    if (this.requires.color[1]) {\n      this.addVaryCode('varying vec4 vColor2;');\n      this.addVertexParsCode('attribute vec4 color2;');\n      this.addVertexFinalCode('vColor2 = color2;');\n    }\n    if (this.requires.position) {\n      this.addVaryCode('varying vec3 vPosition;');\n      this.addVertexFinalCode('vPosition = transformed;');\n    }\n    if (this.requires.worldPosition) {\n      this.addVaryCode('varying vec3 vWPosition;');\n      this.addVertexFinalCode('vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;');\n    }\n    if (this.requires.normal) {\n      this.addVaryCode('varying vec3 vObjectNormal;');\n      this.addVertexFinalCode('vObjectNormal = normal;');\n    }\n    if (this.requires.worldNormal) {\n      this.addVaryCode('varying vec3 vWNormal;');\n      this.addVertexFinalCode('vWNormal = inverseTransformDirection( transformedNormal, viewMatrix ).xyz;');\n    }\n    return this;\n  },\n  buildShader: function (shader, node) {\n    this.resultCode[shader] = node.build(this.setShader(shader), 'v4');\n  },\n  setMaterial: function (material, renderer) {\n    this.material = material;\n    this.renderer = renderer;\n    this.requires.lights = material.lights;\n    this.requires.fog = material.fog;\n    this.mergeDefines(material.defines);\n    return this;\n  },\n  addFlow: function (slot, cache, context) {\n    return this.addSlot(slot).addCache(cache).addContext(context);\n  },\n  removeFlow: function () {\n    return this.removeSlot().removeCache().removeContext();\n  },\n  addCache: function (name) {\n    this.cache = name || '';\n    this.caches.push(this.cache);\n    return this;\n  },\n  removeCache: function () {\n    this.caches.pop();\n    this.cache = this.caches[this.caches.length - 1] || '';\n    return this;\n  },\n  addContext: function (context) {\n    this.context = Object.assign({}, this.context, context);\n    this.context.extra = this.context.extra || {};\n    this.contexts.push(this.context);\n    return this;\n  },\n  removeContext: function () {\n    this.contexts.pop();\n    this.context = this.contexts[this.contexts.length - 1] || {};\n    return this;\n  },\n  addSlot: function (name) {\n    this.slot = name || '';\n    this.slots.push(this.slot);\n    return this;\n  },\n  removeSlot: function () {\n    this.slots.pop();\n    this.slot = this.slots[this.slots.length - 1] || '';\n    return this;\n  },\n  addVertexCode: function (code) {\n    this.addCode(code, 'vertex');\n  },\n  addFragmentCode: function (code) {\n    this.addCode(code, 'fragment');\n  },\n  addCode: function (code, shader) {\n    this.code[shader || this.shader] += code + '\\n';\n  },\n  addVertexNodeCode: function (code) {\n    this.addNodeCode(code, 'vertex');\n  },\n  addFragmentNodeCode: function (code) {\n    this.addNodeCode(code, 'fragment');\n  },\n  addNodeCode: function (code, shader) {\n    this.nodeCode[shader || this.shader] += code + '\\n';\n  },\n  clearNodeCode: function (shader) {\n    shader = shader || this.shader;\n    var code = this.nodeCode[shader];\n    this.nodeCode[shader] = '';\n    return code;\n  },\n  clearVertexNodeCode: function () {\n    return this.clearNodeCode('vertex');\n  },\n  clearFragmentNodeCode: function () {\n    return this.clearNodeCode('fragment');\n  },\n  addVertexFinalCode: function (code) {\n    this.addFinalCode(code, 'vertex');\n  },\n  addFragmentFinalCode: function (code) {\n    this.addFinalCode(code, 'fragment');\n  },\n  addFinalCode: function (code, shader) {\n    this.finalCode[shader || this.shader] += code + '\\n';\n  },\n  addVertexParsCode: function (code) {\n    this.addParsCode(code, 'vertex');\n  },\n  addFragmentParsCode: function (code) {\n    this.addParsCode(code, 'fragment');\n  },\n  addParsCode: function (code, shader) {\n    this.parsCode[shader || this.shader] += code + '\\n';\n  },\n  addVaryCode: function (code) {\n    this.addVertexParsCode(code);\n    this.addFragmentParsCode(code);\n  },\n  isCache: function (name) {\n    return this.caches.indexOf(name) !== -1;\n  },\n  isSlot: function (name) {\n    return this.slots.indexOf(name) !== -1;\n  },\n  define: function (name, value) {\n    this.defines[name] = value === undefined ? 1 : value;\n  },\n  require: function (name) {\n    this.requires[name] = true;\n  },\n  isDefined: function (name) {\n    return this.defines[name] !== undefined;\n  },\n  getVar: function (uuid, type, ns, shader = 'varying', prefix = 'V', label = '') {\n    var vars = this.getVars(shader),\n      data = vars[uuid];\n    if (!data) {\n      var index = vars.length,\n        name = ns ? ns : 'node' + prefix + index + (label ? '_' + label : '');\n      data = {\n        name: name,\n        type: type\n      };\n      vars.push(data);\n      vars[uuid] = data;\n    }\n    return data;\n  },\n  getTempVar: function (uuid, type, ns, label) {\n    return this.getVar(uuid, type, ns, this.shader, 'T', label);\n  },\n  getAttribute: function (name, type) {\n    if (!this.attributes[name]) {\n      var varying = this.getVar(name, type);\n      this.addVertexParsCode('attribute ' + type + ' ' + name + ';');\n      this.addVertexFinalCode(varying.name + ' = ' + name + ';');\n      this.attributes[name] = {\n        varying: varying,\n        name: name,\n        type: type\n      };\n    }\n    return this.attributes[name];\n  },\n  getCode: function (shader) {\n    return [this.prefixCode, this.parsCode[shader], this.getVarListCode(this.getVars('varying'), 'varying'), this.getVarListCode(this.inputs.uniforms[shader], 'uniform'), this.getIncludesCode('consts', shader), this.getIncludesCode('structs', shader), this.getIncludesCode('functions', shader), 'void main() {', this.getVarListCode(this.getVars(shader)), this.code[shader], this.resultCode[shader], this.finalCode[shader], '}'].join('\\n');\n  },\n  getVarListCode: function (vars, prefix) {\n    prefix = prefix || '';\n    var code = '';\n    for (let i = 0, l = vars.length; i < l; ++i) {\n      var nVar = vars[i],\n        type = nVar.type,\n        name = nVar.name;\n      var formatType = this.getFormatByType(type);\n      if (formatType === undefined) {\n        throw new Error('Node pars ' + formatType + ' not found.');\n      }\n      code += prefix + ' ' + formatType + ' ' + name + ';\\n';\n    }\n    return code;\n  },\n  getVars: function (shader) {\n    return this.inputs.vars[shader || this.shader];\n  },\n  getNodeData: function (node) {\n    var uuid = node.isNode ? node.uuid : node;\n    return this.nodeData[uuid] = this.nodeData[uuid] || {};\n  },\n  createUniform: function (shader, type, node, ns, needsUpdate, label) {\n    var uniforms = this.inputs.uniforms,\n      index = uniforms.list.length;\n    var uniform = new NodeUniform({\n      type: type,\n      name: ns ? ns : 'nodeU' + index + (label ? '_' + label : ''),\n      node: node,\n      needsUpdate: needsUpdate\n    });\n    uniforms.list.push(uniform);\n    uniforms[shader].push(uniform);\n    uniforms[shader][uniform.name] = uniform;\n    this.uniforms[uniform.name] = uniform;\n    return uniform;\n  },\n  createVertexUniform: function (type, node, ns, needsUpdate, label) {\n    return this.createUniform('vertex', type, node, ns, needsUpdate, label);\n  },\n  createFragmentUniform: function (type, node, ns, needsUpdate, label) {\n    return this.createUniform('fragment', type, node, ns, needsUpdate, label);\n  },\n  include: function (node, parent, source) {\n    var includesStruct;\n    node = typeof node === 'string' ? NodeLib.get(node) : node;\n    if (this.context.include === false) {\n      return node.name;\n    }\n    if (node instanceof FunctionNode) {\n      includesStruct = this.includes.functions;\n    } else if (node instanceof ConstNode) {\n      includesStruct = this.includes.consts;\n    } else if (node instanceof StructNode) {\n      includesStruct = this.includes.structs;\n    }\n    var includes = includesStruct[this.shader] = includesStruct[this.shader] || [];\n    if (node) {\n      var included = includes[node.name];\n      if (!included) {\n        included = includes[node.name] = {\n          node: node,\n          deps: []\n        };\n        includes.push(included);\n        included.src = node.build(this, 'source');\n      }\n      if (node instanceof FunctionNode && parent && includes[parent.name] && includes[parent.name].deps.indexOf(node) == -1) {\n        includes[parent.name].deps.push(node);\n        if (node.includes && node.includes.length) {\n          var i = 0;\n          do {\n            this.include(node.includes[i++], parent);\n          } while (i < node.includes.length);\n        }\n      }\n      if (source) {\n        included.src = source;\n      }\n      return node.name;\n    } else {\n      throw new Error('Include not found.');\n    }\n  },\n  colorToVectorProperties: function (color) {\n    return color.replace('r', 'x').replace('g', 'y').replace('b', 'z').replace('a', 'w');\n  },\n  colorToVector: function (color) {\n    return color.replace(/c/g, 'v3');\n  },\n  getIncludes: function (type, shader) {\n    return this.includes[type][shader || this.shader];\n  },\n  getIncludesCode: function () {\n    function sortByPosition(a, b) {\n      return a.deps.length - b.deps.length;\n    }\n    return function getIncludesCode(type, shader) {\n      var includes = this.getIncludes(type, shader);\n      if (!includes) return '';\n      var code = '',\n        includes = includes.sort(sortByPosition);\n      for (let i = 0; i < includes.length; i++) {\n        if (includes[i].src) code += includes[i].src + '\\n';\n      }\n      return code;\n    };\n  }(),\n  getConstructorFromLength: function (len) {\n    return constructors[len - 1];\n  },\n  isTypeMatrix: function (format) {\n    return /^m/.test(format);\n  },\n  getTypeLength: function (type) {\n    if (type === 'f') return 1;\n    return parseInt(this.colorToVector(type).substr(1));\n  },\n  getTypeFromLength: function (len) {\n    if (len === 1) return 'f';\n    return 'v' + len;\n  },\n  findNode: function () {\n    for (let i = 0; i < arguments.length; i++) {\n      var nodeCandidate = arguments[i];\n      if (nodeCandidate !== undefined && nodeCandidate.isNode) {\n        return nodeCandidate;\n      }\n    }\n  },\n  resolve: function () {\n    for (let i = 0; i < arguments.length; i++) {\n      var nodeCandidate = arguments[i];\n      if (nodeCandidate !== undefined) {\n        if (nodeCandidate.isNode) {\n          return nodeCandidate;\n        } else if (nodeCandidate.isTexture) {\n          switch (nodeCandidate.mapping) {\n            case CubeReflectionMapping:\n            case CubeRefractionMapping:\n              return new CubeTextureNode(nodeCandidate);\n            case CubeUVReflectionMapping:\n            case CubeUVRefractionMapping:\n              return new TextureCubeNode(new TextureNode(nodeCandidate));\n            default:\n              return new TextureNode(nodeCandidate);\n          }\n        } else if (nodeCandidate.isVector2) {\n          return new Vector2Node(nodeCandidate);\n        } else if (nodeCandidate.isVector3) {\n          return new Vector3Node(nodeCandidate);\n        } else if (nodeCandidate.isVector4) {\n          return new Vector4Node(nodeCandidate);\n        }\n      }\n    }\n  },\n  format: function (code, from, to) {\n    var typeToType = this.colorToVector(to + ' <- ' + from);\n    switch (typeToType) {\n      case 'f <- v2':\n        return code + '.x';\n      case 'f <- v3':\n        return code + '.x';\n      case 'f <- v4':\n        return code + '.x';\n      case 'f <- i':\n      case 'f <- b':\n        return 'float( ' + code + ' )';\n      case 'v2 <- f':\n        return 'vec2( ' + code + ' )';\n      case 'v2 <- v3':\n        return code + '.xy';\n      case 'v2 <- v4':\n        return code + '.xy';\n      case 'v2 <- i':\n      case 'v2 <- b':\n        return 'vec2( float( ' + code + ' ) )';\n      case 'v3 <- f':\n        return 'vec3( ' + code + ' )';\n      case 'v3 <- v2':\n        return 'vec3( ' + code + ', 0.0 )';\n      case 'v3 <- v4':\n        return code + '.xyz';\n      case 'v3 <- i':\n      case 'v3 <- b':\n        return 'vec2( float( ' + code + ' ) )';\n      case 'v4 <- f':\n        return 'vec4( ' + code + ' )';\n      case 'v4 <- v2':\n        return 'vec4( ' + code + ', 0.0, 1.0 )';\n      case 'v4 <- v3':\n        return 'vec4( ' + code + ', 1.0 )';\n      case 'v4 <- i':\n      case 'v4 <- b':\n        return 'vec4( float( ' + code + ' ) )';\n      case 'i <- f':\n      case 'i <- b':\n        return 'int( ' + code + ' )';\n      case 'i <- v2':\n        return 'int( ' + code + '.x )';\n      case 'i <- v3':\n        return 'int( ' + code + '.x )';\n      case 'i <- v4':\n        return 'int( ' + code + '.x )';\n      case 'b <- f':\n        return '( ' + code + ' != 0.0 )';\n      case 'b <- v2':\n        return '( ' + code + ' != vec2( 0.0 ) )';\n      case 'b <- v3':\n        return '( ' + code + ' != vec3( 0.0 ) )';\n      case 'b <- v4':\n        return '( ' + code + ' != vec4( 0.0 ) )';\n      case 'b <- i':\n        return '( ' + code + ' != 0 )';\n    }\n    return code;\n  },\n  getTypeByFormat: function (format) {\n    return convertFormatToType[format] || format;\n  },\n  getFormatByType: function (type) {\n    return convertTypeToFormat[type] || type;\n  },\n  getUuid: function (uuid, useCache) {\n    useCache = useCache !== undefined ? useCache : true;\n    if (useCache && this.cache) uuid = this.cache + '-' + uuid;\n    return uuid;\n  },\n  getElementByIndex: function (index) {\n    return elements[index];\n  },\n  getIndexByElement: function (elm) {\n    return elements.indexOf(elm);\n  },\n  isShader: function (shader) {\n    return this.shader === shader;\n  },\n  setShader: function (shader) {\n    this.shader = shader;\n    return this;\n  },\n  mergeDefines: function (defines) {\n    for (let name in defines) {\n      this.defines[name] = defines[name];\n    }\n    return this.defines;\n  },\n  mergeUniform: function (uniforms) {\n    for (let name in uniforms) {\n      this.uniforms[name] = uniforms[name];\n    }\n    return this.uniforms;\n  },\n  getTextureEncodingFromMap: function (map) {\n    var encoding;\n    if (!map) {\n      encoding = LinearEncoding;\n    } else if (map.isTexture) {\n      encoding = map.encoding;\n    } else if (map.isWebGLRenderTarget) {\n      console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n      encoding = map.texture.encoding;\n    }\n    if (encoding === LinearEncoding && this.context.gamma) {\n      encoding = GammaEncoding;\n    }\n    return encoding;\n  }\n};\nexport { NodeBuilder };","map":{"version":3,"names":["CubeUVRefractionMapping","CubeUVReflectionMapping","CubeRefractionMapping","CubeReflectionMapping","LinearEncoding","GammaEncoding","NodeUniform","NodeUtils","NodeLib","FunctionNode","ConstNode","StructNode","Vector2Node","Vector3Node","Vector4Node","TextureNode","CubeTextureNode","TextureCubeNode","elements","constructors","convertFormatToType","float","vec2","vec3","vec4","mat4","int","bool","convertTypeToFormat","t","tc","b","i","f","c","v2","v3","v4","m3","m4","NodeBuilder","slots","caches","contexts","keywords","nodeData","requires","uv","color","lights","fog","transparent","irradiance","includes","consts","functions","structs","attributes","prefixCode","join","parsCode","vertex","fragment","code","nodeCode","resultCode","finalCode","inputs","uniforms","list","vars","varying","defines","extensions","updaters","nodes","analyzing","prototype","constructor","build","buildShader","length","uvIndex","addVaryCode","addVertexParsCode","addVertexFinalCode","position","worldPosition","normal","worldNormal","shader","node","setShader","setMaterial","material","renderer","mergeDefines","addFlow","slot","cache","context","addSlot","addCache","addContext","removeFlow","removeSlot","removeCache","removeContext","name","push","pop","Object","assign","extra","addVertexCode","addCode","addFragmentCode","addVertexNodeCode","addNodeCode","addFragmentNodeCode","clearNodeCode","clearVertexNodeCode","clearFragmentNodeCode","addFinalCode","addFragmentFinalCode","addParsCode","addFragmentParsCode","isCache","indexOf","isSlot","define","value","undefined","require","isDefined","getVar","uuid","type","ns","prefix","label","getVars","data","index","getTempVar","getAttribute","getCode","getVarListCode","getIncludesCode","l","nVar","formatType","getFormatByType","Error","getNodeData","isNode","createUniform","needsUpdate","uniform","createVertexUniform","createFragmentUniform","include","parent","source","includesStruct","get","included","deps","src","colorToVectorProperties","replace","colorToVector","getIncludes","sortByPosition","a","sort","getConstructorFromLength","len","isTypeMatrix","format","test","getTypeLength","parseInt","substr","getTypeFromLength","findNode","arguments","nodeCandidate","resolve","isTexture","mapping","isVector2","isVector3","isVector4","from","to","typeToType","getTypeByFormat","getUuid","useCache","getElementByIndex","getIndexByElement","elm","isShader","mergeUniform","getTextureEncodingFromMap","map","encoding","isWebGLRenderTarget","console","warn","texture","gamma"],"sources":["C:/Users/drncs/OneDrive/Área de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/core/NodeBuilder.js"],"sourcesContent":["import { CubeUVRefractionMapping, CubeUVReflectionMapping, CubeRefractionMapping, CubeReflectionMapping, LinearEncoding, GammaEncoding } from 'three';\nimport { NodeUniform } from './NodeUniform.js';\nimport { NodeUtils } from './NodeUtils.js';\nimport { NodeLib } from './NodeLib.js';\nimport { FunctionNode } from './FunctionNode.js';\nimport { ConstNode } from './ConstNode.js';\nimport { StructNode } from './StructNode.js';\nimport { Vector2Node } from '../inputs/Vector2Node.js';\nimport { Vector3Node } from '../inputs/Vector3Node.js';\nimport { Vector4Node } from '../inputs/Vector4Node.js';\nimport { TextureNode } from '../inputs/TextureNode.js';\nimport { CubeTextureNode } from '../inputs/CubeTextureNode.js';\nimport { TextureCubeNode } from '../misc/TextureCubeNode.js';\n\nvar elements = NodeUtils.elements,\n    constructors = ['float', 'vec2', 'vec3', 'vec4'],\n    convertFormatToType = {\n  float: 'f',\n  vec2: 'v2',\n  vec3: 'v3',\n  vec4: 'v4',\n  mat4: 'v4',\n  int: 'i',\n  bool: 'b'\n},\n    convertTypeToFormat = {\n  t: 'sampler2D',\n  tc: 'samplerCube',\n  b: 'bool',\n  i: 'int',\n  f: 'float',\n  c: 'vec3',\n  v2: 'vec2',\n  v3: 'vec3',\n  v4: 'vec4',\n  m3: 'mat3',\n  m4: 'mat4'\n};\n\nfunction NodeBuilder() {\n  this.slots = [];\n  this.caches = [];\n  this.contexts = [];\n  this.keywords = {};\n  this.nodeData = {};\n  this.requires = {\n    uv: [],\n    color: [],\n    lights: false,\n    fog: false,\n    transparent: false,\n    irradiance: false\n  };\n  this.includes = {\n    consts: [],\n    functions: [],\n    structs: []\n  };\n  this.attributes = {};\n  this.prefixCode = ['#ifdef TEXTURE_LOD_EXT', '\t#define texCube(a, b) textureCube(a, b)', '\t#define texCubeBias(a, b, c) textureCubeLodEXT(a, b, c)', '\t#define tex2D(a, b) texture2D(a, b)', '\t#define tex2DBias(a, b, c) texture2DLodEXT(a, b, c)', '#else', '\t#define texCube(a, b) textureCube(a, b)', '\t#define texCubeBias(a, b, c) textureCube(a, b, c)', '\t#define tex2D(a, b) texture2D(a, b)', '\t#define tex2DBias(a, b, c) texture2D(a, b, c)', '#endif', '#include <packing>', '#include <common>'].join('\\n');\n  this.parsCode = {\n    vertex: '',\n    fragment: ''\n  };\n  this.code = {\n    vertex: '',\n    fragment: ''\n  };\n  this.nodeCode = {\n    vertex: '',\n    fragment: ''\n  };\n  this.resultCode = {\n    vertex: '',\n    fragment: ''\n  };\n  this.finalCode = {\n    vertex: '',\n    fragment: ''\n  };\n  this.inputs = {\n    uniforms: {\n      list: [],\n      vertex: [],\n      fragment: []\n    },\n    vars: {\n      varying: [],\n      vertex: [],\n      fragment: []\n    }\n  }; // send to material\n\n  this.defines = {};\n  this.uniforms = {};\n  this.extensions = {};\n  this.updaters = [];\n  this.nodes = []; // --\n\n  this.analyzing = false;\n}\n\nNodeBuilder.prototype = {\n  constructor: NodeBuilder,\n  build: function (vertex, fragment) {\n    this.buildShader('vertex', vertex);\n    this.buildShader('fragment', fragment);\n\n    for (let i = 0; i < this.requires.uv.length; i++) {\n      if (this.requires.uv[i]) {\n        var uvIndex = i > 0 ? i + 1 : '';\n        this.addVaryCode('varying vec2 vUv' + uvIndex + ';');\n\n        if (i > 0) {\n          this.addVertexParsCode('attribute vec2 uv' + uvIndex + ';');\n        }\n\n        this.addVertexFinalCode('vUv' + uvIndex + ' = uv' + uvIndex + ';');\n      }\n    }\n\n    if (this.requires.color[0]) {\n      this.addVaryCode('varying vec4 vColor;');\n      this.addVertexParsCode('attribute vec4 color;');\n      this.addVertexFinalCode('vColor = color;');\n    }\n\n    if (this.requires.color[1]) {\n      this.addVaryCode('varying vec4 vColor2;');\n      this.addVertexParsCode('attribute vec4 color2;');\n      this.addVertexFinalCode('vColor2 = color2;');\n    }\n\n    if (this.requires.position) {\n      this.addVaryCode('varying vec3 vPosition;');\n      this.addVertexFinalCode('vPosition = transformed;');\n    }\n\n    if (this.requires.worldPosition) {\n      this.addVaryCode('varying vec3 vWPosition;');\n      this.addVertexFinalCode('vWPosition = ( modelMatrix * vec4( transformed, 1.0 ) ).xyz;');\n    }\n\n    if (this.requires.normal) {\n      this.addVaryCode('varying vec3 vObjectNormal;');\n      this.addVertexFinalCode('vObjectNormal = normal;');\n    }\n\n    if (this.requires.worldNormal) {\n      this.addVaryCode('varying vec3 vWNormal;');\n      this.addVertexFinalCode('vWNormal = inverseTransformDirection( transformedNormal, viewMatrix ).xyz;');\n    }\n\n    return this;\n  },\n  buildShader: function (shader, node) {\n    this.resultCode[shader] = node.build(this.setShader(shader), 'v4');\n  },\n  setMaterial: function (material, renderer) {\n    this.material = material;\n    this.renderer = renderer;\n    this.requires.lights = material.lights;\n    this.requires.fog = material.fog;\n    this.mergeDefines(material.defines);\n    return this;\n  },\n  addFlow: function (slot, cache, context) {\n    return this.addSlot(slot).addCache(cache).addContext(context);\n  },\n  removeFlow: function () {\n    return this.removeSlot().removeCache().removeContext();\n  },\n  addCache: function (name) {\n    this.cache = name || '';\n    this.caches.push(this.cache);\n    return this;\n  },\n  removeCache: function () {\n    this.caches.pop();\n    this.cache = this.caches[this.caches.length - 1] || '';\n    return this;\n  },\n  addContext: function (context) {\n    this.context = Object.assign({}, this.context, context);\n    this.context.extra = this.context.extra || {};\n    this.contexts.push(this.context);\n    return this;\n  },\n  removeContext: function () {\n    this.contexts.pop();\n    this.context = this.contexts[this.contexts.length - 1] || {};\n    return this;\n  },\n  addSlot: function (name) {\n    this.slot = name || '';\n    this.slots.push(this.slot);\n    return this;\n  },\n  removeSlot: function () {\n    this.slots.pop();\n    this.slot = this.slots[this.slots.length - 1] || '';\n    return this;\n  },\n  addVertexCode: function (code) {\n    this.addCode(code, 'vertex');\n  },\n  addFragmentCode: function (code) {\n    this.addCode(code, 'fragment');\n  },\n  addCode: function (code, shader) {\n    this.code[shader || this.shader] += code + '\\n';\n  },\n  addVertexNodeCode: function (code) {\n    this.addNodeCode(code, 'vertex');\n  },\n  addFragmentNodeCode: function (code) {\n    this.addNodeCode(code, 'fragment');\n  },\n  addNodeCode: function (code, shader) {\n    this.nodeCode[shader || this.shader] += code + '\\n';\n  },\n  clearNodeCode: function (shader) {\n    shader = shader || this.shader;\n    var code = this.nodeCode[shader];\n    this.nodeCode[shader] = '';\n    return code;\n  },\n  clearVertexNodeCode: function () {\n    return this.clearNodeCode('vertex');\n  },\n  clearFragmentNodeCode: function () {\n    return this.clearNodeCode('fragment');\n  },\n  addVertexFinalCode: function (code) {\n    this.addFinalCode(code, 'vertex');\n  },\n  addFragmentFinalCode: function (code) {\n    this.addFinalCode(code, 'fragment');\n  },\n  addFinalCode: function (code, shader) {\n    this.finalCode[shader || this.shader] += code + '\\n';\n  },\n  addVertexParsCode: function (code) {\n    this.addParsCode(code, 'vertex');\n  },\n  addFragmentParsCode: function (code) {\n    this.addParsCode(code, 'fragment');\n  },\n  addParsCode: function (code, shader) {\n    this.parsCode[shader || this.shader] += code + '\\n';\n  },\n  addVaryCode: function (code) {\n    this.addVertexParsCode(code);\n    this.addFragmentParsCode(code);\n  },\n  isCache: function (name) {\n    return this.caches.indexOf(name) !== -1;\n  },\n  isSlot: function (name) {\n    return this.slots.indexOf(name) !== -1;\n  },\n  define: function (name, value) {\n    this.defines[name] = value === undefined ? 1 : value;\n  },\n  require: function (name) {\n    this.requires[name] = true;\n  },\n  isDefined: function (name) {\n    return this.defines[name] !== undefined;\n  },\n  getVar: function (uuid, type, ns, shader = 'varying', prefix = 'V', label = '') {\n    var vars = this.getVars(shader),\n        data = vars[uuid];\n\n    if (!data) {\n      var index = vars.length,\n          name = ns ? ns : 'node' + prefix + index + (label ? '_' + label : '');\n      data = {\n        name: name,\n        type: type\n      };\n      vars.push(data);\n      vars[uuid] = data;\n    }\n\n    return data;\n  },\n  getTempVar: function (uuid, type, ns, label) {\n    return this.getVar(uuid, type, ns, this.shader, 'T', label);\n  },\n  getAttribute: function (name, type) {\n    if (!this.attributes[name]) {\n      var varying = this.getVar(name, type);\n      this.addVertexParsCode('attribute ' + type + ' ' + name + ';');\n      this.addVertexFinalCode(varying.name + ' = ' + name + ';');\n      this.attributes[name] = {\n        varying: varying,\n        name: name,\n        type: type\n      };\n    }\n\n    return this.attributes[name];\n  },\n  getCode: function (shader) {\n    return [this.prefixCode, this.parsCode[shader], this.getVarListCode(this.getVars('varying'), 'varying'), this.getVarListCode(this.inputs.uniforms[shader], 'uniform'), this.getIncludesCode('consts', shader), this.getIncludesCode('structs', shader), this.getIncludesCode('functions', shader), 'void main() {', this.getVarListCode(this.getVars(shader)), this.code[shader], this.resultCode[shader], this.finalCode[shader], '}'].join('\\n');\n  },\n  getVarListCode: function (vars, prefix) {\n    prefix = prefix || '';\n    var code = '';\n\n    for (let i = 0, l = vars.length; i < l; ++i) {\n      var nVar = vars[i],\n          type = nVar.type,\n          name = nVar.name;\n      var formatType = this.getFormatByType(type);\n\n      if (formatType === undefined) {\n        throw new Error('Node pars ' + formatType + ' not found.');\n      }\n\n      code += prefix + ' ' + formatType + ' ' + name + ';\\n';\n    }\n\n    return code;\n  },\n  getVars: function (shader) {\n    return this.inputs.vars[shader || this.shader];\n  },\n  getNodeData: function (node) {\n    var uuid = node.isNode ? node.uuid : node;\n    return this.nodeData[uuid] = this.nodeData[uuid] || {};\n  },\n  createUniform: function (shader, type, node, ns, needsUpdate, label) {\n    var uniforms = this.inputs.uniforms,\n        index = uniforms.list.length;\n    var uniform = new NodeUniform({\n      type: type,\n      name: ns ? ns : 'nodeU' + index + (label ? '_' + label : ''),\n      node: node,\n      needsUpdate: needsUpdate\n    });\n    uniforms.list.push(uniform);\n    uniforms[shader].push(uniform);\n    uniforms[shader][uniform.name] = uniform;\n    this.uniforms[uniform.name] = uniform;\n    return uniform;\n  },\n  createVertexUniform: function (type, node, ns, needsUpdate, label) {\n    return this.createUniform('vertex', type, node, ns, needsUpdate, label);\n  },\n  createFragmentUniform: function (type, node, ns, needsUpdate, label) {\n    return this.createUniform('fragment', type, node, ns, needsUpdate, label);\n  },\n  include: function (node, parent, source) {\n    var includesStruct;\n    node = typeof node === 'string' ? NodeLib.get(node) : node;\n\n    if (this.context.include === false) {\n      return node.name;\n    }\n\n    if (node instanceof FunctionNode) {\n      includesStruct = this.includes.functions;\n    } else if (node instanceof ConstNode) {\n      includesStruct = this.includes.consts;\n    } else if (node instanceof StructNode) {\n      includesStruct = this.includes.structs;\n    }\n\n    var includes = includesStruct[this.shader] = includesStruct[this.shader] || [];\n\n    if (node) {\n      var included = includes[node.name];\n\n      if (!included) {\n        included = includes[node.name] = {\n          node: node,\n          deps: []\n        };\n        includes.push(included);\n        included.src = node.build(this, 'source');\n      }\n\n      if (node instanceof FunctionNode && parent && includes[parent.name] && includes[parent.name].deps.indexOf(node) == -1) {\n        includes[parent.name].deps.push(node);\n\n        if (node.includes && node.includes.length) {\n          var i = 0;\n\n          do {\n            this.include(node.includes[i++], parent);\n          } while (i < node.includes.length);\n        }\n      }\n\n      if (source) {\n        included.src = source;\n      }\n\n      return node.name;\n    } else {\n      throw new Error('Include not found.');\n    }\n  },\n  colorToVectorProperties: function (color) {\n    return color.replace('r', 'x').replace('g', 'y').replace('b', 'z').replace('a', 'w');\n  },\n  colorToVector: function (color) {\n    return color.replace(/c/g, 'v3');\n  },\n  getIncludes: function (type, shader) {\n    return this.includes[type][shader || this.shader];\n  },\n  getIncludesCode: function () {\n    function sortByPosition(a, b) {\n      return a.deps.length - b.deps.length;\n    }\n\n    return function getIncludesCode(type, shader) {\n      var includes = this.getIncludes(type, shader);\n      if (!includes) return '';\n      var code = '',\n          includes = includes.sort(sortByPosition);\n\n      for (let i = 0; i < includes.length; i++) {\n        if (includes[i].src) code += includes[i].src + '\\n';\n      }\n\n      return code;\n    };\n  }(),\n  getConstructorFromLength: function (len) {\n    return constructors[len - 1];\n  },\n  isTypeMatrix: function (format) {\n    return /^m/.test(format);\n  },\n  getTypeLength: function (type) {\n    if (type === 'f') return 1;\n    return parseInt(this.colorToVector(type).substr(1));\n  },\n  getTypeFromLength: function (len) {\n    if (len === 1) return 'f';\n    return 'v' + len;\n  },\n  findNode: function () {\n    for (let i = 0; i < arguments.length; i++) {\n      var nodeCandidate = arguments[i];\n\n      if (nodeCandidate !== undefined && nodeCandidate.isNode) {\n        return nodeCandidate;\n      }\n    }\n  },\n  resolve: function () {\n    for (let i = 0; i < arguments.length; i++) {\n      var nodeCandidate = arguments[i];\n\n      if (nodeCandidate !== undefined) {\n        if (nodeCandidate.isNode) {\n          return nodeCandidate;\n        } else if (nodeCandidate.isTexture) {\n          switch (nodeCandidate.mapping) {\n            case CubeReflectionMapping:\n            case CubeRefractionMapping:\n              return new CubeTextureNode(nodeCandidate);\n\n            case CubeUVReflectionMapping:\n            case CubeUVRefractionMapping:\n              return new TextureCubeNode(new TextureNode(nodeCandidate));\n\n            default:\n              return new TextureNode(nodeCandidate);\n          }\n        } else if (nodeCandidate.isVector2) {\n          return new Vector2Node(nodeCandidate);\n        } else if (nodeCandidate.isVector3) {\n          return new Vector3Node(nodeCandidate);\n        } else if (nodeCandidate.isVector4) {\n          return new Vector4Node(nodeCandidate);\n        }\n      }\n    }\n  },\n  format: function (code, from, to) {\n    var typeToType = this.colorToVector(to + ' <- ' + from);\n\n    switch (typeToType) {\n      case 'f <- v2':\n        return code + '.x';\n\n      case 'f <- v3':\n        return code + '.x';\n\n      case 'f <- v4':\n        return code + '.x';\n\n      case 'f <- i':\n      case 'f <- b':\n        return 'float( ' + code + ' )';\n\n      case 'v2 <- f':\n        return 'vec2( ' + code + ' )';\n\n      case 'v2 <- v3':\n        return code + '.xy';\n\n      case 'v2 <- v4':\n        return code + '.xy';\n\n      case 'v2 <- i':\n      case 'v2 <- b':\n        return 'vec2( float( ' + code + ' ) )';\n\n      case 'v3 <- f':\n        return 'vec3( ' + code + ' )';\n\n      case 'v3 <- v2':\n        return 'vec3( ' + code + ', 0.0 )';\n\n      case 'v3 <- v4':\n        return code + '.xyz';\n\n      case 'v3 <- i':\n      case 'v3 <- b':\n        return 'vec2( float( ' + code + ' ) )';\n\n      case 'v4 <- f':\n        return 'vec4( ' + code + ' )';\n\n      case 'v4 <- v2':\n        return 'vec4( ' + code + ', 0.0, 1.0 )';\n\n      case 'v4 <- v3':\n        return 'vec4( ' + code + ', 1.0 )';\n\n      case 'v4 <- i':\n      case 'v4 <- b':\n        return 'vec4( float( ' + code + ' ) )';\n\n      case 'i <- f':\n      case 'i <- b':\n        return 'int( ' + code + ' )';\n\n      case 'i <- v2':\n        return 'int( ' + code + '.x )';\n\n      case 'i <- v3':\n        return 'int( ' + code + '.x )';\n\n      case 'i <- v4':\n        return 'int( ' + code + '.x )';\n\n      case 'b <- f':\n        return '( ' + code + ' != 0.0 )';\n\n      case 'b <- v2':\n        return '( ' + code + ' != vec2( 0.0 ) )';\n\n      case 'b <- v3':\n        return '( ' + code + ' != vec3( 0.0 ) )';\n\n      case 'b <- v4':\n        return '( ' + code + ' != vec4( 0.0 ) )';\n\n      case 'b <- i':\n        return '( ' + code + ' != 0 )';\n    }\n\n    return code;\n  },\n  getTypeByFormat: function (format) {\n    return convertFormatToType[format] || format;\n  },\n  getFormatByType: function (type) {\n    return convertTypeToFormat[type] || type;\n  },\n  getUuid: function (uuid, useCache) {\n    useCache = useCache !== undefined ? useCache : true;\n    if (useCache && this.cache) uuid = this.cache + '-' + uuid;\n    return uuid;\n  },\n  getElementByIndex: function (index) {\n    return elements[index];\n  },\n  getIndexByElement: function (elm) {\n    return elements.indexOf(elm);\n  },\n  isShader: function (shader) {\n    return this.shader === shader;\n  },\n  setShader: function (shader) {\n    this.shader = shader;\n    return this;\n  },\n  mergeDefines: function (defines) {\n    for (let name in defines) {\n      this.defines[name] = defines[name];\n    }\n\n    return this.defines;\n  },\n  mergeUniform: function (uniforms) {\n    for (let name in uniforms) {\n      this.uniforms[name] = uniforms[name];\n    }\n\n    return this.uniforms;\n  },\n  getTextureEncodingFromMap: function (map) {\n    var encoding;\n\n    if (!map) {\n      encoding = LinearEncoding;\n    } else if (map.isTexture) {\n      encoding = map.encoding;\n    } else if (map.isWebGLRenderTarget) {\n      console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n      encoding = map.texture.encoding;\n    }\n\n    if (encoding === LinearEncoding && this.context.gamma) {\n      encoding = GammaEncoding;\n    }\n\n    return encoding;\n  }\n};\n\nexport { NodeBuilder };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}