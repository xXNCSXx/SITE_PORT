{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nimport { NodeUtils } from '../core/NodeUtils.js';\nvar inputs = NodeUtils.elements;\nfunction JoinNode(x, y, z, w) {\n  TempNode.call(this, 'f');\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  this.w = w;\n}\nJoinNode.prototype = Object.create(TempNode.prototype);\nJoinNode.prototype.constructor = JoinNode;\nJoinNode.prototype.nodeType = 'Join';\nJoinNode.prototype.getNumElements = function () {\n  var i = inputs.length;\n  while (i--) {\n    if (this[inputs[i]] !== undefined) {\n      ++i;\n      break;\n    }\n  }\n  return Math.max(i, 2);\n};\nJoinNode.prototype.getType = function (builder) {\n  return builder.getTypeFromLength(this.getNumElements());\n};\nJoinNode.prototype.generate = function (builder, output) {\n  var type = this.getType(builder),\n    length = this.getNumElements(),\n    outputs = [];\n  for (let i = 0; i < length; i++) {\n    var elm = this[inputs[i]];\n    outputs.push(elm ? elm.build(builder, 'f') : '0.0');\n  }\n  var code = (length > 1 ? builder.getConstructorFromLength(length) : '') + '( ' + outputs.join(', ') + ' )';\n  return builder.format(code, type, output);\n};\nJoinNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  for (let prop in source.inputs) {\n    this[prop] = source.inputs[prop];\n  }\n  return this;\n};\nJoinNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.inputs = {};\n    var length = this.getNumElements();\n    for (let i = 0; i < length; i++) {\n      var elm = this[inputs[i]];\n      if (elm) {\n        data.inputs[inputs[i]] = elm.toJSON(meta).uuid;\n      }\n    }\n  }\n  return data;\n};\nexport { JoinNode };","map":{"version":3,"names":["TempNode","NodeUtils","inputs","elements","JoinNode","x","y","z","w","call","prototype","Object","create","constructor","nodeType","getNumElements","i","length","undefined","Math","max","getType","builder","getTypeFromLength","generate","output","type","outputs","elm","push","build","code","getConstructorFromLength","join","format","copy","source","prop","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"sources":["C:/Users/drncs/OneDrive/Área de Trabalho/PORTIFOLIO/SITE3/node_modules/three-stdlib/nodes/utils/JoinNode.js"],"sourcesContent":["import { TempNode } from '../core/TempNode.js';\nimport { NodeUtils } from '../core/NodeUtils.js';\n\nvar inputs = NodeUtils.elements;\n\nfunction JoinNode(x, y, z, w) {\n  TempNode.call(this, 'f');\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  this.w = w;\n}\n\nJoinNode.prototype = Object.create(TempNode.prototype);\nJoinNode.prototype.constructor = JoinNode;\nJoinNode.prototype.nodeType = 'Join';\n\nJoinNode.prototype.getNumElements = function () {\n  var i = inputs.length;\n\n  while (i--) {\n    if (this[inputs[i]] !== undefined) {\n      ++i;\n      break;\n    }\n  }\n\n  return Math.max(i, 2);\n};\n\nJoinNode.prototype.getType = function (builder) {\n  return builder.getTypeFromLength(this.getNumElements());\n};\n\nJoinNode.prototype.generate = function (builder, output) {\n  var type = this.getType(builder),\n      length = this.getNumElements(),\n      outputs = [];\n\n  for (let i = 0; i < length; i++) {\n    var elm = this[inputs[i]];\n    outputs.push(elm ? elm.build(builder, 'f') : '0.0');\n  }\n\n  var code = (length > 1 ? builder.getConstructorFromLength(length) : '') + '( ' + outputs.join(', ') + ' )';\n  return builder.format(code, type, output);\n};\n\nJoinNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n\n  for (let prop in source.inputs) {\n    this[prop] = source.inputs[prop];\n  }\n\n  return this;\n};\n\nJoinNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.inputs = {};\n    var length = this.getNumElements();\n\n    for (let i = 0; i < length; i++) {\n      var elm = this[inputs[i]];\n\n      if (elm) {\n        data.inputs[inputs[i]] = elm.toJSON(meta).uuid;\n      }\n    }\n  }\n\n  return data;\n};\n\nexport { JoinNode };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}